{"version":3,"sources":["redux/work-reducer.ts","components/Game/RenderPlayerSpend.tsx","redux/game-selector.ts","components/Game/RenderPlayerSpends.tsx","redux/game-reducer.ts","redux/stocks-reducer.ts","redux/stocks-selector.ts","redux/settings-reducer.ts","redux/settings-selector.ts","components/Game/RenderChart.tsx","redux/news-reducer.ts","components/Game/RenderTime.tsx","redux/profile-selector.ts","components/Game/RenderPlayerProfile.tsx","components/Game/SellPopup.tsx","img/works/it.jpg","img/works/manager.jpg","img/works/engineer.jpg","components/Game/RenderPlayerWork.tsx","components/Game/RenderStock.tsx","components/Game/RenderPlayerStocks.tsx","components/Game/RenderPlayerNews.tsx","redux/business-selector.ts","img/businesses/cafe.jpg","img/businesses/garage.jpg","img/businesses/service.jpg","img/businesses/hotel.jpg","redux/business-reducer.ts","components/Game/RenderPlayerBusiness.tsx","components/Game/GamePage.tsx","components/Menu/MenuPage.tsx","components/common/ReturnBackButton.tsx","img/characters/person-1.png","img/characters/person-1-avatar.png","img/characters/person-2.png","img/characters/person-2-avatar.png","img/characters/person-3.png","img/characters/person-3-avatar.png","img/characters/person-4.png","img/characters/person-4-avatar.png","redux/profile-reducer.ts","components/Profile/ProfilePage.tsx","components/Settings/SettingsPage.tsx","components/Work/WorkPage.tsx","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["WorkLevel","DaysToUp","Income","RenderPlayerSpend","props","className","style","index","borderBottom","paddingBottom","title","price","getDaySelector","state","gamePage","day","getDayInMonthSelector","daysInMonth","getWalletSelector","wallet","getIncomeSelector","income","getHappenedEventsSelector","happenedEvents","getMonthSelector","month","getMonthsSelector","months","getLevelSelector","level","RenderPlayerSpends","useSelector","map","events","length","border","name","event","i","SET_DAY","SET_MONTH","SET_DAY_IN_MONTH","SET_WALLET","UPDATE_WALLET","SET_INCOME","BUY_BUSINESS","SELL_BUSINESS","WEEK_SPEND","INDEX_PRICE","GET_NEWS_PAYOUT","initialState","duration","Array","fill","actions","type","dayInMonth","payout","amount","indexPrice","difficult","SET_STOCKS","SELL_STOCKS","UPDATE_MY_STOCKS","UPDATE_STOCKS","INDEXING_STOCKS","SET_PRICE_CHANGE_INTERVAL","normalPriceChange","companiesForStocks","myStocks","stocks","stocksActions","stock","count","company","timeInterval","condition","getStocksSelector","stocksPage","getMyStocksSelector","SET_TIME_SPEED","SET_DIFFICULTY","SET_CONST_TIME_SPEED","timeSpeed","constTimeSpeed","difficulty","settingsActions","getTimeSpeedSelector","settingsPage","getDifficultySelector","getConstTimeSpeedSelector","RenderChart","React","memo","dispatch","useDispatch","labels","forEach","labelsCopy","push","data","datasets","label","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","onClick","setIsHistoryShown","CloseOutlined","options","scales","yAxes","ticks","beginAtZero","contextMenu","RenderChartMenu","useState","isFormShown","setIsFormShown","stocksToBuyCount","setStocksToBuyCount","stocksToBuyPrice","setStocksToBuyPrice","buyStocks","stockCopy","updateStocksCount","myStocksCopy","newStock","oldPrice","addStocks","display","min","max","value","onChange","textAlign","disabled","ADD_NEWS","ABLE_TO_SHOW","SET_TO_ARCHIVE","news","archive","newsTypes","ableToShow","variants","variantType","titles","newsActions","types","RenderTime","newsTypeArray","newsPage","companies","currentWork","worksPage","activeDay","activeMonth","replace","useEffect","generateNews","newsType","Number","Math","random","toFixed","getState","newsCopy","typeOfPayout","titleIndex","growType","setNewsThunk","walletUp","startSalary","Item","getPersonSelector","profilePage","profile","RenderPlayerProfile","work","time","onChangeTime","styleName","width","strokeWidth","percent","strokeColor","trailColor","format","src","avatar","size","onMouseOver","console","log","color","alt","img","defaultValue","SellPopup","stocksToSellCount","setStocksToSellCount","setIsStockToSell","htmlFor","SET_WORK","SET_SALARY","SET_DAYS_WORKED","SET_WORK_LEVEL","works","it","daysWorked","itAvatar","start","daysToUp","middle","pro","senior","manager","managerAvatar","engineer","engineerAvatar","worksActions","days","RenderPlayerWork","chanceConst","isChanceVisible","setIsChanceVisible","daysToTry","setDaysToTry","chanceToUp","setChanceToUp","updateWorkStats","chance","setIsChangeWorkShown","onMouseOut","shape","workLevel","RenderWork","background","WorksChoicePopup","setNewWork","workType","RenderStock","risk","RiseOutlined","FallOutlined","setActiveStock","RenderMyStock","ArrowUpOutlined","ArrowDownOutlined","setMyActiveStock","RenderPlayerStocks","TabPane","Tabs","RenderPlayerNews","defaultActiveKey","centered","tab","newsBlock","isArchive","RenderNewsBlock","getBusinessesSelector","businessPage","businesses","getMyBusinessesSelector","myBusinesses","SET_BUSINESSES","ADD_TO_MY_BUSINESSES","REMOVE_FROM_MY_BUSINESSES","companiesForBusiness","businessImg1","businessImg2","businessImg3","businessImg4","businessActions","business","RenderPlayerBusiness","myBusiness","isMine","isBought","some","b","isMaxCount","RenderBusinessBlock","priceToSell","ceil","sellBusinessThunk","buyBusinessThunk","GamePage","Risks","startIncome","myActiveStock","isHistoryShown","isStockToSell","isChangeWorkShown","activeStock","setTimeout","overflowCount","active","MenuPage","person","to","ReturnBackButton","link","SET_PROFILE","persons","age","person1Photo","preferences","rise","saving","person1Avatar","person2Photo","person2Avatar","person3Photo","person3Avatar","person4Photo","person4Avatar","profileActions","ProfilePage","activePerson","setActivePerson","ContinueButton","setProfile","RenderPersons","afterChange","key","dots","dotPosition","RenderPerson","pref","prefTitle","prefCount","RenderPrefSquare","SettingsPage","timesSpeed","optionsTime","Group","e","target","optionType","WorkPage","setWork","difficultPrice","personPref","zIndex","riseColor","text","Main","exact","from","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","indexWallet","indexIncome","happenedEventsCopy","priceToSpend","archiveCopy","archiveNews","splice","worksCopy","initialStocksCopy","priceChangeInterval","maxPrice","minPrice","myStocksCopyToSell","myStock","stocksCopy","indexCount","indexCondition","indexPriceCount","stocksPriceChangeCopy","businessesCopy","deal","myBusinessCopy","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9feb723f.chunk.js","sourcesContent":["import {InferActionsType} from \"./store\";\r\nimport itAvatar from './../img/works/it.jpg'\r\nimport managerAvatar from './../img/works/manager.jpg'\r\nimport engineerAvatar from './../img/works/engineer.jpg'\r\n\r\nconst SET_WORK = 'work/SET_WORK'\r\nconst SET_SALARY = 'work/SET_SALARY'\r\nconst SET_DAYS_WORKED = 'work/SET_DAYS_WORKED'\r\nconst SET_WORK_LEVEL = 'work/SET_WORK_LEVEL'\r\n\r\n// уровень работы . . .\r\nexport enum WorkLevel {\r\n  start = 'start',\r\n  middle = 'middle',\r\n  pro = 'pro',\r\n  senior = 'senior'\r\n}\r\n// кол-во дней до повышения . . .\r\nexport enum DaysToUp {\r\n  start = 125,\r\n  middle = 200,\r\n  pro = 250\r\n}\r\n// увелечение зп\r\nexport enum Income {\r\n  start = 0,\r\n  middle = 15,\r\n  pro = 20,\r\n  senior = 25\r\n}\r\n\r\nlet initialState = {\r\n  // текущая работа игрока . . .\r\n  currentWork: null as null | Work,\r\n  works: {\r\n    it: {\r\n      type: 'it' as WorksType,\r\n      level: 1,\r\n      daysWorked: 0,\r\n      startSalary: 0,\r\n      avatar: itAvatar,\r\n      options: [\r\n        {\r\n          level: WorkLevel.start as WorkLevelType,\r\n          title: 'Junior - разработчик',\r\n          income: Income.start as WorkIncomeType,\r\n          daysToUp: DaysToUp.start as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.middle as WorkLevelType,\r\n          title: 'Middle - разработчик',\r\n          income: Income.middle as WorkIncomeType,\r\n          daysToUp: DaysToUp.middle as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.pro as WorkLevelType,\r\n          title: 'Senior - разработчик',\r\n          income: Income.pro as WorkIncomeType,\r\n          daysToUp: DaysToUp.pro as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.senior as WorkLevelType,\r\n          title: 'Тимлид',\r\n          income: Income.pro as WorkIncomeType,\r\n          daysToUp: DaysToUp.pro as WorkDaysToUpType\r\n      }] as WorkOptions[]\r\n    } as Work,\r\n    manager: {\r\n      type: 'manager' as WorksType,\r\n      level: 1,\r\n      daysWorked: 0,\r\n      startSalary: 0,\r\n      avatar: managerAvatar,\r\n      options: [\r\n        {\r\n          level: WorkLevel.start as WorkLevelType,\r\n          title: 'Помощник менеджера',\r\n          income: Income.start as WorkIncomeType,\r\n          daysToUp: DaysToUp.start as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.middle as WorkLevelType,\r\n          title: 'Менеджер',\r\n          income: Income.middle as WorkIncomeType,\r\n          daysToUp: DaysToUp.middle as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.pro as WorkLevelType,\r\n          title: 'Менеджер отдела',\r\n          income: Income.pro as WorkIncomeType,\r\n          daysToUp: DaysToUp.pro as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.senior as WorkLevelType,\r\n          title: 'Старший менеджер',\r\n          income: Income.pro as WorkIncomeType,\r\n          daysToUp: DaysToUp.pro as WorkDaysToUpType\r\n        }\r\n      ] as WorkOptions[]\r\n    } as Work,\r\n    engineer: {\r\n      type : 'engineer' as WorksType,\r\n      level: 1,\r\n      daysWorked: 0,\r\n      startSalary: 0,\r\n      avatar: engineerAvatar,\r\n      options: [\r\n        {\r\n          level: WorkLevel.start as WorkLevelType,\r\n          title: 'Младший инженер',\r\n          income: Income.start as WorkIncomeType,\r\n          daysToUp: DaysToUp.start as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.middle as WorkLevelType,\r\n          title: 'Инженер проектировщик',\r\n          income: Income.middle as WorkIncomeType,\r\n          daysToUp: DaysToUp.middle as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.pro as WorkLevelType,\r\n          title: 'Ведущий инженер',\r\n          income: Income.pro as WorkIncomeType,\r\n          daysToUp: DaysToUp.pro as WorkDaysToUpType\r\n        }, {\r\n          level: WorkLevel.senior as WorkLevelType,\r\n          title: 'Руководитель отдела',\r\n          income: Income.pro as WorkIncomeType,\r\n          daysToUp: DaysToUp.pro as WorkDaysToUpType\r\n        }\r\n      ] as WorkOptions[]\r\n    } as Work\r\n  }\r\n}\r\n\r\nexport type InitialWorkStateType = typeof initialState\r\n\r\nexport const worksReducer = (state = initialState, action: WorksActionsType): InitialWorkStateType => {\r\n  switch (action.type) {\r\n    case SET_WORK:\r\n      return {\r\n        ...state,\r\n        currentWork: action.work,\r\n      }\r\n    case SET_SALARY:\r\n      let worksCopy = {...state.works}\r\n      worksCopy.it.startSalary = Number((Math.random() * 100 + 450).toFixed(0))\r\n      worksCopy.manager.startSalary = Number((Math.random() * 100 + 420).toFixed(0))\r\n      worksCopy.engineer.startSalary = Number((Math.random() * 100 + 470).toFixed(0))\r\n      return {\r\n        ...state,\r\n        works: worksCopy\r\n      }\r\n    case SET_DAYS_WORKED:\r\n      return {\r\n        ...state,\r\n        currentWork: {\r\n          ...state.currentWork,\r\n          daysWorked: action.days\r\n        } as Work\r\n      }\r\n    case SET_WORK_LEVEL:\r\n      return {\r\n        ...state,\r\n        currentWork: {\r\n          ...state.currentWork,\r\n          level: action.level\r\n        } as Work\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const worksActions = {\r\n  setWork: (work: Work) => ({type: SET_WORK, work} as const),\r\n  setSalary: () => ({type: SET_SALARY} as const),\r\n  setDaysWorked: (days: number) => ({type: SET_DAYS_WORKED, days} as const),\r\n  setWorkLevel: (level: number) => ({type: SET_WORK_LEVEL, level} as const)\r\n\r\n}\r\n\r\nexport type WorkOptions = {\r\n  type: WorksType\r\n  level: WorkLevelType\r\n  title: string\r\n  income: WorkIncomeType\r\n  daysToUp: WorkDaysToUpType\r\n}\r\nexport type Work = {\r\n  type: WorksType\r\n  level: number\r\n  daysWorked: number\r\n  startSalary: number\r\n  avatar: string\r\n  options: WorkOptions[]\r\n}\r\nexport type WorksType = 'it' | 'manager' | 'engineer'\r\nexport type WorkLevelType = 'start' | 'middle' | 'pro' | 'senior'\r\nexport type WorkIncomeType = 0 | 15 | 20 | 25\r\nexport type WorkDaysToUpType = 125 | 200 | 250\r\n\r\ntype WorksActionsType = InferActionsType<typeof worksActions>\r\n\r\n","import React, {FC} from \"react\";\r\n\r\ntype RenderPlayerSpendType = {\r\n  title: string\r\n  price: number\r\n  index: number\r\n}\r\nexport const RenderPlayerSpend: FC<RenderPlayerSpendType> = (props) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"gameSpendBlock__Item\"\r\n        style={(props.index + 1) % 4 === 0 && props.index !== 0\r\n          ? {borderBottom: '2px solid black', paddingBottom: '7px'}\r\n          : {}\r\n        }>\r\n        <div className=\"gameSpendBlock__ItemTitle\"><b>{props.title}</b></div>\r\n        <div className=\"gameSpendBlock__ItemPrice\">({props.price})</div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {AppStateType} from \"./store\";\r\n\r\n// day return\r\nexport const getDaySelector = (state: AppStateType) => {\r\n  return state.gamePage.day\r\n}\r\nexport const getDayInMonthSelector = (state: AppStateType) => {\r\n  return state.gamePage.daysInMonth\r\n}\r\n// wallet return\r\nexport const getWalletSelector = (state: AppStateType) => {\r\n  return state.gamePage.wallet\r\n}\r\n// income return\r\nexport const getIncomeSelector = (state: AppStateType) => {\r\n  return state.gamePage.income\r\n}\r\n// happenedEvents return\r\nexport const getHappenedEventsSelector = (state: AppStateType) => {\r\n  return state.gamePage.happenedEvents\r\n}\r\n// month return (current month)\r\nexport const getMonthSelector = (state: AppStateType) => {\r\n  return state.gamePage.month\r\n}\r\n// months return (array of months)\r\nexport const getMonthsSelector = (state: AppStateType) => {\r\n  return state.gamePage.months\r\n}\r\n\r\nexport const getLevelSelector = (state: AppStateType) => {\r\n  return state.gamePage.level\r\n}\r\n\r\n","import React, {FC} from \"react\";\r\nimport {RenderPlayerSpend} from \"./RenderPlayerSpend\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getHappenedEventsSelector, getMonthSelector, getMonthsSelector} from \"../../redux/game-selector\";\r\n\r\n// type RenderPlayerSpendsType = {\r\n//   happenedEvents: any\r\n//   months: string[]\r\n// }\r\nexport const RenderPlayerSpends: FC = (props) => {\r\n  const month = useSelector(getMonthSelector)\r\n  const months = useSelector(getMonthsSelector)\r\n  const happenedEvents = useSelector(getHappenedEventsSelector)\r\n\r\n  return (\r\n    <>\r\n      <div className='gameSpend bannerBack' >\r\n        <div className=\"gameSpendHeader\">\r\n          Ваши траты\r\n        </div>\r\n        <div className=\"gameSpendBlocks\">\r\n          {happenedEvents.map((events: any, index: number) => {\r\n            return (\r\n              <>\r\n                {events.length > 0\r\n                  ? <div key={index} className=\"gameSpendBlock\" style={month === index ? {border: '2px solid crimson'} : {}}>\r\n                      <div className=\"gameSpendBlock__Title\">\r\n                        <b>{months[index].name}</b>\r\n                      </div>\r\n                      <div className=\"gameSpendBlock__Items\">\r\n                        {events.map((event: any, i: number) =>\r\n                          <RenderPlayerSpend\r\n                            key={i}\r\n                            title={event.title}\r\n                            price={event.price}\r\n                            index={i}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  : ''\r\n                }\r\n              </>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {InferActionsType} from \"./store\";\r\nimport {DifficultyType} from \"./settings-reducer\";\r\n\r\n// time . . .\r\nconst SET_TIME_SPEED = 'gamePage/SET_TIME_SPEED'\r\nconst SET_DAY = 'gamePage/SET_DAY'\r\nconst SET_MONTH = 'gamePage/SET_MONTH'\r\nconst SET_DAY_IN_MONTH = 'gamePage/SET_DAY_IN_MONTH'\r\n\r\n// wallet . . .\r\nconst SET_WALLET = 'gamePage/SET_WALLET'\r\nconst UPDATE_WALLET = 'gamePage/UPDATE_WALLET'\r\nconst SET_INCOME = 'gamePage/SET_INCOME'\r\n\r\nconst BUY_BUSINESS = 'gamePage/BUY_BUSINESS'\r\nconst SELL_BUSINESS = 'gamePage/SELL_BUSINESS'\r\n\r\n// spends and update . . .\r\nconst WEEK_SPEND = 'gamePage/WEEK_SPEND'\r\nconst INDEX_PRICE = 'gamePage/INDEX_PRICE'\r\n\r\nconst GET_NEWS_PAYOUT = 'gamePage/GET_NEWS_PAYOUT'\r\n\r\nlet initialState = {\r\n  // счётчик дней . . .\r\n  day: 1,\r\n  // уровень персонажа\r\n  level: 1,\r\n  // день месяца\r\n  daysInMonth: 0,\r\n  // текущий месяц игры . . .\r\n  month: 0,\r\n  // баланс игрока . . .\r\n  wallet: 0,\r\n  // доход игрока . . .\r\n  income: 0,\r\n  // месяцы игры . . .\r\n  months: [\r\n    {name: 'Январь', duration: 31}, {name: 'Февраль', duration: 28}, {name: 'Март', duration: 31},\r\n    {name: 'Апрель', duration: 30}, {name: 'Май', duration: 31}, {name: 'Июнь', duration: 30},\r\n    {name: 'Июль', duration: 31}, {name: 'Август', duration: 31}, {name: 'Сентябрь', duration: 30},\r\n    {name: 'Октябрь', duration: 31}, {name: 'Ноябрь', duration: 30}, {name: 'Декабрь', duration: 31},\r\n  ],\r\n  // вероятные события . . .\r\n  events: [\r\n    {\r\n      title: 'кинотеатр',\r\n      price: 75\r\n    }, {\r\n      title: 'ресторан',\r\n      price: 120\r\n    }, {\r\n      title: 'покупка продуктов',\r\n      price: 65\r\n    }, {\r\n      title: 'новая одежда',\r\n      price: 90\r\n    }, {\r\n      title: 'прогулка',\r\n      price: 30\r\n    }, {\r\n      title: 'ремонт машины',\r\n      price: 220\r\n    }, {\r\n      title: 'покупка мебели',\r\n      price: 75\r\n    }, {\r\n      title: 'одолжил другу',\r\n      price: 30\r\n    }, {\r\n      title: 'благотворительность',\r\n      price: 40\r\n    }, {\r\n      title: 'подох в ТЦ',\r\n      price: 80\r\n    }, {\r\n      title: 'оплата подписки',\r\n      price: 45\r\n    }, {\r\n      title: 'сходить на футбол',\r\n      price: 120\r\n    }, {\r\n      title: 'встреча с друзьями',\r\n      price: 70\r\n    }, {\r\n      title: 'помог родителям',\r\n      price: 100\r\n    }, {\r\n      title: 'улучшение рабочего места',\r\n      price: 110\r\n    },\r\n\r\n  ] as eventType[],\r\n  // случившиеся события . . .\r\n  happenedEvents: Array(12).fill([] as eventType[]),\r\n}\r\n\r\nexport type InitialGameStateType = typeof initialState\r\n\r\nexport const gameReducer = (state = initialState, action: ActionsType): InitialGameStateType => {\r\n  switch (action.type) {\r\n    // обновляем счётчик дней\r\n    case SET_DAY:\r\n      return {\r\n        ...state,\r\n        day: action.day\r\n      }\r\n    // обновляем месяц\r\n    case SET_MONTH:\r\n      return {\r\n        ...state,\r\n        month: action.month\r\n      }\r\n    // обновляем баланс кошелька\r\n    case SET_DAY_IN_MONTH:\r\n      console.log(action.dayInMonth)\r\n      return {\r\n        ...state,\r\n        daysInMonth: action.dayInMonth\r\n      }\r\n    case SET_WALLET:\r\n      return {\r\n        ...state,\r\n        wallet: action.wallet\r\n      }\r\n    // установление зарплаты\r\n    case SET_INCOME:\r\n      return {\r\n        ...state,\r\n        income: action.income\r\n      }\r\n    // обновление баланса\r\n    case UPDATE_WALLET:\r\n      return {\r\n        ...state,\r\n        wallet: state.wallet + state.income + action.wallet\r\n      }\r\n    // обновление кошелька после новостей\r\n    case GET_NEWS_PAYOUT:\r\n\r\n      let indexWallet = 0\r\n      let indexIncome = 0\r\n\r\n      switch (action.payout) {\r\n        case \"one\":\r\n          indexWallet += action.amount\r\n          break\r\n        case \"regular\":\r\n          indexIncome += action.amount\r\n          break\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        wallet: state.wallet + indexWallet,\r\n        income: state.income + indexIncome\r\n      }\r\n    // обновляем данные по кошельку после покупки бизнесса\r\n    case BUY_BUSINESS:\r\n      return {\r\n        ...state,\r\n        wallet: state.wallet - action.price,\r\n        income: state.income + action.income\r\n      }\r\n    case SELL_BUSINESS:\r\n      return {\r\n        ...state,\r\n        wallet: state.wallet + action.price,\r\n        income: state.income - action.income\r\n      }\r\n\r\n    // еженедельные траты игрока\r\n    case WEEK_SPEND:\r\n      // берем случайное событие . . .\r\n      let event = Number((Math.random() * (state.events.length - 1)).toFixed(0))\r\n      // копия массива с текущими событиями . . .\r\n      let happenedEventsCopy = [...state.happenedEvents]\r\n      happenedEventsCopy[state.month] = [...happenedEventsCopy[state.month], state.events[event]]\r\n\r\n      // определение цены, которую должен потратить игрок . . .\r\n      let priceToSpend = state.events[event].price\r\n      return {\r\n        ...state,\r\n        happenedEvents: happenedEventsCopy,\r\n        wallet: state.wallet - priceToSpend\r\n      }\r\n    // обновление цены на события\r\n    case INDEX_PRICE:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event => {\r\n          return {\r\n            ...event,\r\n            price: event.price + action.indexPrice\r\n          }\r\n        })\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setDay: (day: number) => ({type: SET_DAY, day} as const),\r\n  setMonth: (month: number) => ({type: SET_MONTH, month} as const),\r\n  setDayInMonth: (dayInMonth: number) => ({type: SET_DAY_IN_MONTH, dayInMonth} as const),\r\n\r\n  setWallet: (wallet: number) => ({type: SET_WALLET, wallet} as const),\r\n  updateWallet: (wallet: number) => ({type: UPDATE_WALLET, wallet} as const),\r\n  setIncome: (income: number) => ({type: SET_INCOME, income} as const),\r\n\r\n  getNewsPayout: (payout: 'one' | 'regular', amount: number) => ({type: GET_NEWS_PAYOUT, payout, amount} as const),\r\n  buyBusiness: (price: number, income: number) => ({type: BUY_BUSINESS, price, income} as const),\r\n  sellBusiness: (price: number, income: number) => ({type: SELL_BUSINESS, price, income} as const),\r\n  setEventsPrice: (indexPrice: number) => ({type: INDEX_PRICE, indexPrice} as const),\r\n  weekSpend: (difficult: DifficultyType) => ({type: WEEK_SPEND, difficult} as const),\r\n\r\n}\r\n\r\ntype ActionsType = InferActionsType<typeof actions>\r\n\r\nexport type eventType = {\r\n  title: string\r\n  price: number\r\n}","import {InferActionsType} from \"./store\";\r\n\r\nconst SET_STOCKS = 'gamePage/SET_STOCKS'\r\nconst SELL_STOCKS = 'gamePage/SELL_STOCKS'\r\nconst UPDATE_MY_STOCKS = 'gamePage/UPDATE_MY_STOCKS'\r\nconst UPDATE_STOCKS = 'gamePage/UPDATE_STOCKS'\r\nconst INDEXING_STOCKS = 'gamePage/INDEXING_STOCKS'\r\nconst SET_PRICE_CHANGE_INTERVAL = 'gamePage/SET_PRICE_CHANGE_INTERVAL'\r\n\r\nlet initialState = {\r\n  // изменение цены . . .\r\n  normalPriceChange: 3,\r\n  // список компания с акциями . . .\r\n  companiesForStocks: [\r\n    'ТрансНефтКомпани', 'ОАО ГазНефтьМагистраль',\r\n    'ОАО СтройПрибор', 'ОАО СвободнаяЭнергия',\r\n    'ОАО ТранспортСтрой', 'ОАО ЦифровыеТехнологии',\r\n    'ОАО КосмосТек', 'МашинСтрой',\r\n    'ОАО КазиноАльянс', 'СибирьТек',\r\n    'ЕвропаБизнес', 'ЗАО АлмазПродажн',\r\n    'ЗАО ПлодЛюбви'\r\n  ],\r\n  // акции в портфеле . . .\r\n  myStocks: [] as myStockType[],\r\n  // акции на рынке . . .\r\n  stocks: [] as stockType[],\r\n\r\n}\r\n\r\nexport const stocksReducer = (state = initialState, action: ActionType) => {\r\n  switch (action.type) {\r\n\r\n    // первое создание акций . . .\r\n    case SET_STOCKS:\r\n      // копия массива с акциями . . .\r\n      let initialStocksCopy = [...state.stocks]\r\n      state.companiesForStocks.map(company => {\r\n        // генерируем риск . . .\r\n        let risk = Number((Math.random() * 4 + 1).toFixed(0))\r\n        // генерируем цену . . .\r\n        let price = Number((Math.random() * 150 + 15).toFixed(1))\r\n\r\n        let stock: stockType = {\r\n          // название фирмы . . .\r\n          title: company,\r\n          // количество акций на рынке . . .\r\n          count: Number((Math.random() * state.normalPriceChange * (risk + 1) + 1).toFixed(0)),\r\n          // риск акции\r\n          risk: risk,\r\n          // начальная цена . . .\r\n          price: [price],\r\n          // вероятносто того, что акция идёт вверх . . .\r\n          condition: Math.random() * 10 >= (state.normalPriceChange - 1 + risk) ? 'up' : 'down',\r\n          // должна ли рости акции всвязи с новостями . . .\r\n          priceChangeInterval: 0,\r\n          // макс цена акции\r\n          maxPrice: Number((price + Math.random() * state.normalPriceChange * (risk + 1)).toFixed(1)),\r\n          // мин цена акции\r\n          minPrice: Number((price - Math.random() * state.normalPriceChange * risk).toFixed(1)),\r\n        }\r\n        initialStocksCopy.push(stock)\r\n      })\r\n      // вывод акций в консоль для проверки . . .\r\n      console.log(initialStocksCopy)\r\n      return {\r\n        ...state,\r\n        stocks: initialStocksCopy\r\n      }\r\n    // продажа акций . . .\r\n    case SELL_STOCKS:\r\n      let myStocksCopyToSell = [...state.myStocks]\r\n      myStocksCopyToSell.forEach((myStock, index) => {\r\n        if (myStock.title === action.stock.title) {\r\n          // создаем новый объект . . .\r\n          myStocksCopyToSell[index] = {\r\n            ...myStocksCopyToSell[index],\r\n            count: myStocksCopyToSell[index].count - action.count\r\n          }\r\n          // если количество акций === 0, то убираем её из портфеля . . .\r\n          if (myStocksCopyToSell[index].count === 0) {\r\n            // удаляем из массива данные акции . . .\r\n            myStocksCopyToSell.splice(index, 1)\r\n          }\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        myStocks: myStocksCopyToSell\r\n      }\r\n    // изменение цен на акции . . .\r\n    // TODO сделать проверку акций если она зависит от новостей . . .\r\n    case INDEXING_STOCKS:\r\n      let stocksCopy = [...state.stocks]\r\n      let myStocksCopy = [...state.myStocks]\r\n\r\n      state.stocks.map((stock, index) => {\r\n        // изменение количества акций . . .\r\n        let indexCount = Number((Math.random() * 10 - 4).toFixed(0))\r\n        // изменение состояния акций при условии, что она не подвежена новостям . . .\r\n        let indexCondition: 'up' | 'down' = stock.condition\r\n\r\n        if (stock.priceChangeInterval === 0) {\r\n          indexCondition = Math.random() * 10 >= (state.normalPriceChange - 1 + stock.risk) ? 'up' : 'down'\r\n        }\r\n        // изменение цены акции . . .\r\n        let indexPriceCount = Number((stock.risk * Number((Math.random() + 0.1).toFixed(1))).toFixed(1))\r\n\r\n        let indexPrice: number = indexCondition === 'up'\r\n          ? stock.price[stock.price.length - 1] + indexPriceCount\r\n          : stock.price[stock.price.length - 1] - indexPriceCount\r\n\r\n        indexPrice = Number(indexPrice.toFixed(1))\r\n\r\n        stocksCopy[index] = {\r\n          // возвращаем пред. данные . . .\r\n          ...stocksCopy[index],\r\n          // новое состояние роста акции . . .\r\n          condition: indexCondition,\r\n          // новое количество акций . . .\r\n          count: stocksCopy[index].count + indexCount > 0\r\n            ? stocksCopy[index].count + indexCount\r\n            : stocksCopy[index].count,\r\n          // обновляем сроки зависимости роста акции от новостей\r\n          priceChangeInterval: stocksCopy[index].priceChangeInterval > 0\r\n            ? stocksCopy[index].priceChangeInterval -1\r\n            : stocksCopy[index].priceChangeInterval,\r\n          // новая цена акции . . .\r\n          price: [\r\n            ...stocksCopy[index].price,\r\n            indexPrice\r\n          ]\r\n            // (indexPrice > stocksCopy[index].maxPrice) || (indexPrice < stocksCopy[index].minPrice)\r\n            // // если цена доходит до своего максимума или минимума , то цена на акции больше не меняется . . .\r\n            // ? [\r\n            //   ...stocksCopy[index].price,\r\n            //   stock.price[stock.price.length - 1]\r\n            // ]\r\n            // // обновляем цены на акции при условии, что всё хорошо . . .\r\n            // : [\r\n            //   ...stocksCopy[index].price,\r\n            //   indexPrice\r\n            // ]\r\n        }\r\n\r\n        // обновление цены в портфеле игрока . . .\r\n        myStocksCopy.forEach((myStock, i) => {\r\n          if(myStock.title === stock.title) {\r\n            let price = indexPrice\r\n            myStocksCopy[i] = {\r\n              ...myStocksCopy[i],\r\n              price: price,\r\n              condition: price >= myStocksCopy[i].oldPrice ? 'up' : 'down'\r\n            }\r\n          }\r\n        })\r\n      })\r\n      console.log('================================')\r\n      console.log('обновленные акции')\r\n      console.log(stocksCopy)\r\n      return {\r\n        ...state,\r\n        stocks: stocksCopy,\r\n        myStocks: myStocksCopy\r\n      }\r\n    // обновление цен наших акций . . .\r\n    case SET_PRICE_CHANGE_INTERVAL:\r\n      let stocksPriceChangeCopy = [...state.stocks]\r\n      stocksPriceChangeCopy.map((stock, index) => {\r\n        // находим нужную акцию\r\n        // сетаем кол-во недель и тип роста\r\n        if (stock.title === action.company) {\r\n          console.log(stock)\r\n          stocksPriceChangeCopy[index] = {\r\n            ...stock,\r\n            condition: action.condition,\r\n            priceChangeInterval: action.timeInterval\r\n          }\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        stocks: stocksPriceChangeCopy\r\n      }\r\n    case UPDATE_MY_STOCKS:\r\n      return {\r\n        ...state,\r\n        myStocks: action.myStocks\r\n      }\r\n    // обновление акций . . .\r\n    case UPDATE_STOCKS:\r\n      return {\r\n        ...state,\r\n        stocks: action.stocks\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const stocksActions = {\r\n\r\n  setStocks: () => ({type: SET_STOCKS} as const),\r\n  indexingStocks: () => ({type: INDEXING_STOCKS} as const),\r\n  updateMyStocks: (myStocks: myStockType[]) => ({type: UPDATE_MY_STOCKS, myStocks} as const),\r\n  updateStocks: (stocks: stockType[]) => ({type: UPDATE_STOCKS, stocks} as const),\r\n  sellStocks: (stock: myStockType, count: number) => ({type: SELL_STOCKS, stock, count} as const),\r\n  setPriceChangeInterval: (company: string, timeInterval: number, condition: 'up' | 'down') => ({type: SET_PRICE_CHANGE_INTERVAL, company, timeInterval, condition} as const)\r\n\r\n}\r\n\r\nexport type stockType = {\r\n  title: string\r\n  count: number\r\n  risk: number\r\n  price: number[]\r\n  condition: 'up' | 'down'\r\n  priceChangeInterval: number\r\n  maxPrice: number\r\n  minPrice: number\r\n}\r\nexport type myStockType = {\r\n  title: string\r\n  price: number\r\n  oldPrice: number\r\n  count: number\r\n  condition: 'up' | 'down'\r\n}\r\ntype ActionType = InferActionsType<typeof stocksActions>","// stocks return\r\nimport {AppStateType} from \"./store\";\r\n\r\nexport const getStocksSelector = (state: AppStateType) => {\r\n  return state.stocksPage.stocks\r\n}\r\n// myStocks return\r\nexport const getMyStocksSelector = (state: AppStateType) => {\r\n  return state.stocksPage.myStocks\r\n}","import {InferActionsType} from \"./store\";\r\n\r\nconst SET_TIME_SPEED = 'settingsPage/SET_TIME_SPEED'\r\nconst SET_DIFFICULTY = 'settingsPage/SET_DIFFICULTY'\r\nconst SET_CONST_TIME_SPEED = 'settingsPage/SET_CONST_TIME_SPEED'\r\n\r\nlet initialState = {\r\n  // скорость игры . . .\r\n  timeSpeed: 4,\r\n  // константа времени . . .\r\n  constTimeSpeed: 4,\r\n  // сложность игры . . .\r\n  difficulty: 'легко' as DifficultyType\r\n}\r\n\r\nexport type InitialSettingsStateType = typeof initialState\r\n\r\nexport const settingsReducer = (state = initialState, action: ProfileActionsType): InitialSettingsStateType => {\r\n  switch (action.type) {\r\n    case SET_TIME_SPEED:\r\n      return {\r\n        ...state,\r\n        timeSpeed: action.timeSpeed\r\n      }\r\n    case SET_CONST_TIME_SPEED:\r\n      return {\r\n        ...state,\r\n        constTimeSpeed: action.constTimeSpeed\r\n      }\r\n    case SET_DIFFICULTY:\r\n      return {\r\n        ...state,\r\n        difficulty: action.difficulty\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const settingsActions = {\r\n  setTimeSpeed: (timeSpeed: number) => ({type: SET_TIME_SPEED, timeSpeed} as const),\r\n  setConstTimeSpeed: (constTimeSpeed: number) => ({type: SET_CONST_TIME_SPEED, constTimeSpeed} as const),\r\n  setDifficulty: (difficulty: DifficultyType) => ({type: SET_DIFFICULTY, difficulty} as const),\r\n}\r\n\r\nexport type DifficultyType = 'легко' | 'средне' | 'сложно'\r\n\r\ntype ProfileActionsType = InferActionsType<typeof settingsActions>\r\n\r\n","import {AppStateType} from \"./store\";\r\n\r\n// timeSpeed return\r\nexport const getTimeSpeedSelector = (state: AppStateType) => {\r\n  return state.settingsPage.timeSpeed\r\n}\r\n\r\nexport const getDifficultySelector = (state: AppStateType) => {\r\n  return state.settingsPage.difficulty\r\n}\r\n\r\nexport const getConstTimeSpeedSelector = (state: AppStateType) => {\r\n  return state.settingsPage.constTimeSpeed\r\n}","import React, {FC, SetStateAction, useState} from \"react\";\r\nimport {Button, InputNumber} from \"antd\";\r\nimport {CloseOutlined} from \"@ant-design/icons\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getWalletSelector} from \"../../redux/game-selector\";\r\nimport {myStockType, stocksActions, stockType} from \"../../redux/stocks-reducer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {getMyStocksSelector, getStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getConstTimeSpeedSelector} from \"../../redux/settings-selector\";\r\n\r\nexport type RenderChartType = {\r\n  setIsHistoryShown: SetStateAction<any>\r\n  stock: stockType\r\n}\r\n\r\n\r\nexport const RenderChart: FC<RenderChartType> = React.memo((props) => {\r\n  const dispatch = useDispatch()\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n\r\n  const Months = [\r\n    'Январь', '', '', '', 'Февраль', '', '', '', 'Март', '', '', '',\r\n    'Апрель', '', '', '', 'Май', '', '', '', 'Июнь', '', '', '',\r\n    'Июль', '', '', '', 'Август', '', '', '', 'Сентябрь', '', '', '',\r\n    'Октябрь', '', '', '', 'Ноябрь', '', '', '', 'Декабрь', '', '', '',\r\n  ]\r\n  let labels: any[] = []\r\n\r\n  // TODO настройка показа графика(неделя / месяц / год / все время)\r\n\r\n  props.stock.price.forEach((price, index) => {\r\n    let labelsCopy = [...labels]\r\n    if(props.stock.price.length > 48 && index < props.stock.price.length - 48) {\r\n      return\r\n    }\r\n\r\n    labelsCopy.push(price)\r\n    labels = labelsCopy\r\n  })\r\n\r\n\r\n  const data = {\r\n    labels: Months,\r\n    datasets: [\r\n      {\r\n        label: 'цена за шт.',\r\n        data: labels,\r\n        fill: false,\r\n        // сглаживание . . .\r\n        lineTension: 0.4,\r\n        // цвета . . .\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 0,\r\n        pointHitRadius: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chartPopup\">\r\n        <div className=\"chartPopupBlock\">\r\n          <div className=\"chartPopupBlock__Close\" onClick={() => {\r\n            props.setIsHistoryShown(false)\r\n            onChangeTime(timeSpeed)\r\n          }}>\r\n            <CloseOutlined/>\r\n          </div>\r\n          <div className=\"chartPopupBlock__Title\">\r\n            <div>График с ценой на акции компании:</div>\r\n            <b>{props.stock.title}</b>\r\n          </div>\r\n          {/* рисуем график с ценой на акции . . . */}\r\n\r\n          <Line data={data} options={options} title='цена акций' contextMenu={'Привет'} />\r\n\r\n          {/*<LineChart width={600} height={250} data={data}>*/}\r\n          {/*  <Line type=\"monotone\" dataKey=\"price\"/>*/}\r\n          {/*  /!*<CartesianGrid stroke=\"#ccc\" strokeDasharray=\"10 10\"/>*!/*/}\r\n          {/*  <XAxis dataKey=\"name\"/>*/}\r\n          {/*  <YAxis/>*/}\r\n          {/*  <Tooltip/>*/}\r\n          {/*</LineChart>*/}\r\n\r\n          {/*<Line data={data} options={options} className='chartPopupBlock__Chart'/>*/}\r\n          <RenderChartMenu stock={props.stock} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\ntype RenderChartMenuType = {\r\n  stock: stockType\r\n}\r\n\r\nexport const RenderChartMenu: FC<RenderChartMenuType> = (props) => {\r\n\r\n\r\n  const wallet = useSelector(getWalletSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  // массив с акциями . . .\r\n  const stocks = useSelector(getStocksSelector)\r\n  // массив купленных акций . . .\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n  const [isFormShown, setIsFormShown] = useState(false)\r\n  const [stocksToBuyCount, setStocksToBuyCount] = useState(1)\r\n  const [stocksToBuyPrice, setStocksToBuyPrice] = useState(props.stock.price[props.stock.price.length - 1])\r\n\r\n  // при покупке акции обновляем оставшееся её количество . . .\r\n  const updateStocksCount = () => {\r\n    let stockCopy = [...stocks]\r\n    stockCopy.forEach((stock, index) => {\r\n      if (stock.title === props.stock.title) {\r\n        stockCopy[index] = {\r\n          ...stockCopy[index],\r\n          count: stockCopy[index].count - stocksToBuyCount\r\n        }\r\n      }\r\n    })\r\n    // обновляем данные по количеству акций . . .\r\n    dispatch(stocksActions.updateStocks(stockCopy))\r\n  }\r\n\r\n  // покупаем акцию и добовляем её в портфель . . .\r\n  const addStocks = (stock: stockType) => {\r\n    let myStocksCopy = [...myStocks]\r\n\r\n    let newStock: myStockType = {\r\n      title: stock.title,\r\n      price: stock.price[stock.price.length - 1],\r\n      count: stocksToBuyCount,\r\n      oldPrice: stock.price[stock.price.length - 1],\r\n      condition: stock.condition\r\n    }\r\n\r\n    myStocksCopy = [...myStocksCopy, newStock]\r\n\r\n    dispatch(stocksActions.updateMyStocks(myStocksCopy))\r\n  }\r\n\r\n  const buyStocks = () => {\r\n    dispatch(actions.setWallet(wallet - stocksToBuyPrice))\r\n    setStocksToBuyCount(0)\r\n    setStocksToBuyPrice(0)\r\n    updateStocksCount()\r\n    addStocks(props.stock)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='chartPopupBlock__Menu'>\r\n        <div>\r\n          <button className=\"chartPopupBlock__Button\" onClick={() => setIsFormShown(true)}>\r\n            Купить акцию\r\n          </button>\r\n        </div>\r\n        <div style={isFormShown ? {display: \"block\"} : {display: \"none\"}}>\r\n          <hr/>\r\n          Доступных акций для покупки - <b>{props.stock.count}</b>\r\n          <div>\r\n            <InputNumber min={0} max={props.stock.count} value={stocksToBuyCount} onChange={(value) => {\r\n              setStocksToBuyCount(value)\r\n              setStocksToBuyPrice(value * props.stock.price[props.stock.price.length - 1])\r\n            }}/>\r\n          </div>\r\n          <div>\r\n            Стоимость покупки акций: <b>{stocksToBuyPrice}</b>\r\n          </div>\r\n          <div\r\n            style={stocksToBuyCount > 0\r\n              ? {display: 'block', textAlign: 'center'}\r\n              : {display: 'none', textAlign: 'center'}\r\n            }>\r\n            <hr/>\r\n            <Button disabled={!(stocksToBuyPrice <= wallet)} onClick={() => buyStocks()}>\r\n              Купить\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {AppStateType, InferActionsType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actions} from \"./game-reducer\";\r\nimport {stocksActions} from \"./stocks-reducer\";\r\n\r\nconst ADD_NEWS = 'newsPage/ADD_NEWS'\r\nconst ABLE_TO_SHOW = 'newsPage/ABLE_TO_SHOW'\r\nconst SET_TO_ARCHIVE = 'newsPage/SET_TO_ARCHIVE'\r\n\r\nlet initialState = {\r\n  // массив с произошедшими новостями . . .\r\n  news: [] as newsArrayType[],\r\n  archive: [] as newsArrayType[],\r\n  newsTypes: [\r\n    {\r\n      // TODO продумать новости под бизнесс\r\n      // TODO подредачить включение типов новостей\r\n      type: 'businessNews' as NewsTypes,\r\n      ableToShow: false,\r\n      variants: [\r\n        {\r\n          variantType: 'positive' as VariantType,\r\n          events: [\r\n            {type: 'restaurant',titles: [\r\n\r\n              ]},\r\n            {type: 'garage',titles: [\r\n\r\n              ]},\r\n            {type: 'service',titles: [\r\n\r\n              ]},\r\n            {type: 'hotel',titles: [\r\n\r\n              ]},\r\n          ]\r\n        }, {\r\n        variantType: 'negative' as VariantType,\r\n\r\n        }\r\n      ]\r\n    }, {\r\n      type: 'stocksNews' as NewsTypes,\r\n      ableToShow: false,\r\n      variants: [\r\n        {\r\n          variantType: 'positive' as VariantType,\r\n          titles: [\r\n            'Компания получила приличное пожертвование, вам следует проследить за ней!',\r\n            'Квартальный отчет показал хорошие результаты, доход компании вырос, скоро будет рост акций тоже!',\r\n            'Идёт активный рост компании, это хорошо влияет на её акции',\r\n            'Компания заняла лидирующие позиции в своём сегменте рынка, думаю вам стоит присмотреться к ней!',\r\n            'Брокеры предсказывают рост доходов в следующем квартале, это может повлиять на акции',\r\n            'Компанию продали под крыло большего гиганта, новое начальство знает, что надо делать!',\r\n          ]\r\n        }, {\r\n          variantType: 'negative' as VariantType,\r\n          titles: [\r\n            'Компания терпит убыдки! Скоро акции полетят вниз!',\r\n            'Квартальный отчет показал неутешительные результаты, доход компании упал!',\r\n            'В связи с последними новостями, у компании череда неудач, будьте внимательны',\r\n            'Компания потеряла лидирующие места в гонке за господством на рынке, это ударит по акциям',\r\n            'Брокеры предсказывают падение доходов в следующем квартале, следите внимательно',\r\n            'Компания расспадается и возможно уйдёт с рынка, следите за ней внимательнее',\r\n          ]\r\n        }, {\r\n        variantType: 'neutral' as VariantType,\r\n          titles: [\r\n            'На рынке акций всё спокойно! Можете не волноваться',\r\n            'Компании S&P 500 показывают хорошие квартальный результаты после карантинных падений',\r\n            'Вы можете спать спокойно, пока деньги работают за вас, а не вы за них'\r\n          ]\r\n        }\r\n      ]\r\n    }, {\r\n      type: 'personNews' as NewsTypes,\r\n      ableToShow: true,\r\n      variants: [\r\n        {\r\n          variantType: 'positive' as VariantType,\r\n          events: [\r\n            {\r\n              // одноразовые бонусы игроку\r\n              type: 'one',\r\n              titles: [\r\n                {title: 'Вы получили бонус на работе. Так держать!', amount: 100},\r\n                {title: 'Разовая выплата от правительства', amount: 150},\r\n                {title: 'Вы победели в лотерее, поздравляем!', amount: 300},\r\n                {title: 'Вам досталось наследство семьи! Потратьте его с умом', amount: 500},\r\n                {title: 'Продажа недвижимости', amount: 1000},\r\n                {title: 'Вы закрыли проект на работе и получили свою долю', amount: 250}\r\n              ]\r\n            }, {\r\n              // новости, которые будут довать буст к зарплате\r\n              type: 'regular',\r\n              titles: [\r\n                {title: 'Вы помогаете по работе коллеге, прибавка к зарплате!', amount: 70},\r\n                {title: 'Старый гараж перемонтирован под автомастерскую, ваша доля', amount: 120},\r\n                {title: 'Вы сдаёте комнату, месячная плата', amount: 300}\r\n              ]\r\n            }\r\n          ]\r\n        }, {\r\n          variantType: 'negative' as VariantType,\r\n          events: [\r\n            {\r\n              type: 'one',\r\n              titles: [\r\n                {title: 'Вы проиграли в лотерее', amount: -200},\r\n                {title: 'Онлайн казино дело такое!', amount: -100},\r\n                {title: 'От цен на бензин хочется плакать!', amount: -80}\r\n              ]\r\n            }, {\r\n              type: 'regular',\r\n              titles: [\r\n                {title: 'У вас родился ребёнок! Поздравляем!', amount: -200},\r\n                {title: 'Стройка на даче занимает слишком много сил, и не только', amount: -70},\r\n                {title: 'Обеспечение родителей, вещь важная!', amount: -50}\r\n              ]\r\n            }\r\n          ]\r\n        }, {\r\n          variantType: 'neutral' as VariantType,\r\n          events: [\r\n            'Хочешь сбежать от повседневности — не останавливайся в развитии.',\r\n            '— Сегодня хороший день, чтобы умереть. — Ты всегда так говоришь. — Всегда так и есть.',\r\n            'Человек, живущий обычной, размеренной жизнью, быстро становится рабом собственных привычек.',\r\n            'Иногда, знаете ли, полезно съесть подгнившую селёдочную голову, чтобы оценить прелесть обычного повседневного обеда.',\r\n            'Повседневность начинается на улице, а кончается в бесконечности.',\r\n            'Взрослые -это дети, научившиеся обманывать ещё и себя.',\r\n            'Год новый, а проблемы всё те же…'\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n}\r\n\r\nexport type InitialNewsStateType = typeof initialState\r\n\r\nexport const newsReducer = (state = initialState, action: NewsActionsType): InitialNewsStateType => {\r\n  switch (action.type) {\r\n    case ADD_NEWS:\r\n      // копия прошлых новостей . . .\r\n      return {\r\n        ...state,\r\n        news: action.news\r\n      }\r\n    case ABLE_TO_SHOW:\r\n      return {\r\n        ...state,\r\n        newsTypes: state.newsTypes.map(newsType => {\r\n          if(newsType.type === action.types) {\r\n            return {...newsType, ableToShow: true}\r\n          }\r\n          return newsType\r\n        })\r\n      }\r\n    case SET_TO_ARCHIVE:\r\n\r\n      let newsCopy = [...state.news]\r\n      let archiveCopy = [...state.archive]\r\n\r\n      let archiveNews = newsCopy.splice(action.index, 1)\r\n\r\n      // @ts-ignore\r\n      archiveCopy.push(archiveNews[0])\r\n\r\n      return {\r\n        ...state,\r\n        news: newsCopy,\r\n        archive: archiveCopy\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const newsActions = {\r\n  addNews: (news: newsArrayType[]) => ({type: ADD_NEWS, news} as const),\r\n  setAbleToShow: (types: NewsTypes) => ({type: ABLE_TO_SHOW, types} as const),\r\n  setToArchive: (index: number) => ({type: SET_TO_ARCHIVE, index} as const)\r\n}\r\n\r\nexport const setNewsThunk = (newsType: NewsTypes, company: string): NewsThunkType => (dispatch, getState) => {\r\n  const state = getState().newsPage\r\n  const dayInMonth = getState().gamePage.daysInMonth\r\n  const month = getState().gamePage.months[getState().gamePage.month].name\r\n  let newsCopy = [...state.news]\r\n  let news = {\r\n    title: '',\r\n    amount: 0,\r\n    company: '',\r\n    dayInMonth: dayInMonth,\r\n    month: month\r\n  }\r\n\r\n  state.newsTypes.map((newsTypes, index) => {\r\n    if(newsTypes.type === newsType) {\r\n      // выбираем одну из 3 видов новостей хорошая / плохая / нейтральная\r\n      let condition = Number((Math.random() * (newsTypes.variants.length - 1)).toFixed(0))\r\n      // 0 - хорошая / 1 - плохая / 2 - нейтральная\r\n      switch (newsType) {\r\n        case \"personNews\":\r\n          // если новость плохая или хорошая . . .\r\n          if(condition === 0 || condition === 1) {\r\n            // @ts-ignore\r\n            // вид выплаты (один раз или постоянная)\r\n            let typeOfPayout = Number((Math.random() * (newsTypes.variants[condition].events.length - 1)).toFixed(0))\r\n            // @ts-ignore\r\n            // выбираем новость\r\n            let titleIndex = Number((Math.random() * (newsTypes.variants[condition].events[typeOfPayout].titles.length - 1)).toFixed(0))\r\n\r\n            // создаём новость . . .\r\n\r\n            // @ts-ignore\r\n            // заголовок новости\r\n            news.title = newsTypes.variants[condition].events[typeOfPayout].titles[titleIndex].title\r\n            // @ts-ignore\r\n            // цена\r\n            news.amount = newsTypes.variants[condition].events[typeOfPayout].titles[titleIndex].amount\r\n\r\n            // @ts-ignore / обновляем баланс или доход игрока\r\n            dispatch(actions.getNewsPayout(newsTypes.variants[condition].events[typeOfPayout].type, news.amount))\r\n\r\n          } else {\r\n            // если новость нейтральная . . .\r\n            // @ts-ignore\r\n            let titleIndex = Number((Math.random() * (newsTypes.variants[condition].events.length - 1)).toFixed(0))\r\n            // @ts-ignore\r\n            // создаём новость . . .\r\n            news.title = newsTypes.variants[condition].events[titleIndex]\r\n            news.amount = 0\r\n          }\r\n          break\r\n        case \"stocksNews\":\r\n          // @ts-ignore\r\n          let titleIndex = Number((Math.random() * (newsTypes.variants[condition].titles.length - 1)).toFixed(0))\r\n          // @ts-ignore\r\n          news.title = newsTypes.variants[condition].titles[titleIndex]\r\n          if (condition === 0 || condition === 1) {\r\n            news.company = company\r\n            // продолжительность роста / падения акции\r\n            const growType = condition === 0 ? 'up' : 'down'\r\n            const timeInterval = Number((Math.random() * 4 + 3).toFixed(0))\r\n\r\n            // @ts-ignore\r\n            dispatch(stocksActions.setPriceChangeInterval(company, timeInterval, growType))\r\n\r\n          }\r\n          // TODO падение или рост акции\r\n\r\n          // @ts-ignore / обновляем состояние акций . . .\r\n          // dispatch(stocksActions.setPriceChangeInterval(company, timeInterval, growType))\r\n\r\n          break\r\n        case \"businessNews\":\r\n          break\r\n      }\r\n\r\n    }\r\n    return null\r\n  })\r\n  // диспачим обновленные новости в state\r\n  newsCopy.push(news)\r\n  dispatch(newsActions.addNews(newsCopy))\r\n}\r\n\r\nexport type NewsTypes = 'stocksNews' | 'businessNews' | 'personNews'\r\nexport type VariantType = 'positive' | 'negative' | 'neutral'\r\nexport type newsArrayType = {\r\n  title: string\r\n  amount: number\r\n  company: string\r\n  month: string\r\n  dayInMonth: number\r\n}\r\ntype NewsActionsType = InferActionsType<typeof newsActions>\r\n\r\nexport type NewsThunkType = ThunkAction<any, AppStateType, unknown, NewsActionsType>","import React, {Dispatch, FC, SetStateAction, useEffect, useState} from \"react\";\r\nimport {Breadcrumb} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDayInMonthSelector, getDaySelector, getMonthSelector, getMonthsSelector} from \"../../redux/game-selector\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Work} from \"../../redux/work-reducer\";\r\nimport {stocksActions} from \"../../redux/stocks-reducer\";\r\nimport { getStocksSelector } from \"../../redux/stocks-selector\";\r\nimport {getDifficultySelector} from \"../../redux/settings-selector\";\r\nimport {setNewsThunk} from \"../../redux/news-reducer\";\r\n\r\ntype RenderTimeType = {\r\n  income: number\r\n  wallet: number\r\n}\r\n\r\nexport const RenderTime: FC<RenderTimeType> = (props) => {\r\n\r\n  const newsTypeArray = useSelector((state: AppStateType) => state.newsPage.newsTypes)\r\n\r\n  const companies = useSelector((state: AppStateType) => state.stocksPage.companiesForStocks)\r\n  // день месяца . . .\r\n  const dayInMonth = useSelector(getDayInMonthSelector)\r\n  const difficulty = useSelector(getDifficultySelector)\r\n\r\n  const dispatch = useDispatch()\r\n  // текущий день . . .\r\n  const day = useSelector(getDaySelector)\r\n  // акции\r\n  const stocks = useSelector(getStocksSelector)\r\n  // текущий месяц . . .\r\n  const month = useSelector(getMonthSelector)\r\n  // массив с месяцами . . .\r\n  const months = useSelector(getMonthsSelector)\r\n  // текущая работа . . .\r\n  const currentWork = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n  // массив с днями . . .\r\n  const Days = [\r\n    'Воскресенье', 'Понедельник', 'Вторник',\r\n    'Среда', 'Четверг',\r\n    'Пятница', 'Суббота'\r\n  ]\r\n  // находим день недели . . .\r\n  const activeDay = Days[day % 7]\r\n  // месяц . . .\r\n  const activeMonth = month === 2 || month === 7\r\n    ? months[month].name + 'a'\r\n    : months[month].name.replace('ь','я')\r\n\r\n  // обновляем счётчик недель . . .\r\n  useEffect(() => {\r\n    dispatch(actions.setDayInMonth(dayInMonth + 1))\r\n    // еженедельные покупки . . .\r\n    if (day % 7 === 0 && day !== 0) {\r\n      const generateNews = () => {\r\n        let newsType = Number((Math.random() * 2).toFixed(0))\r\n        if (newsTypeArray[newsType].ableToShow) {\r\n          let company = ''\r\n          if(newsTypeArray[newsType].type === 'stocksNews') {\r\n            company = companies[Number((Math.random() * (companies.length - 1)).toFixed(0))]\r\n          }\r\n          dispatch(setNewsThunk(newsTypeArray[newsType].type, company))\r\n          // dispatch(newsActions.addNews(newsTypeArray[newsType].type, company))\r\n        } else {\r\n          generateNews()\r\n        }\r\n      }\r\n      // создаем новости каждые две недели\r\n      if (day % 14 === 0 && day !== 0) {\r\n          generateNews()\r\n      }\r\n      // еженедельная трата . . .\r\n      dispatch(actions.weekSpend(difficulty))\r\n\r\n      // обновление акций . . .\r\n      if(stocks.length !== 0) {\r\n        // обновление цен на акции . . .\r\n        dispatch(stocksActions.indexingStocks())\r\n      }\r\n    }\r\n\r\n    // если сегодня последний день месяца, то обновляем месяц и выдаём зарплату игроку . . .\r\n    if(dayInMonth === months[month].duration) {\r\n      dispatch(actions.setDayInMonth(1))\r\n      const walletUp = currentWork.options[currentWork.level - 1].income * currentWork.startSalary / 100\r\n      dispatch(actions.setMonth(month + 1))\r\n      dispatch(actions.updateWallet(walletUp))\r\n    }\r\n  }, [day])\r\n\r\n  // обновляем год после декабря . . .\r\n  useEffect(() => {\r\n    if (month === 11 && dayInMonth === 31) {\r\n      dispatch(actions.setMonth(0))\r\n      dispatch(actions.setDayInMonth(1))\r\n    }\r\n  }, [month, dayInMonth])\r\n\r\n  return (\r\n    <>\r\n        <Breadcrumb className='gameProfitHeader'>\r\n          <Breadcrumb.Item className='gameProfitHeader__Day'>\r\n            {activeDay}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item className='gameProfitHeader__Month'>\r\n            {dayInMonth} {activeMonth}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item className=\"gameProfitHeader__Day\">\r\n            <b>{day}</b> день\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n    </>\r\n  )\r\n}","import {AppStateType} from \"./store\";\r\n\r\nexport const getPersonSelector = (state: AppStateType) => {\r\n  return state.profilePage.profile\r\n}\r\n\r\nexport const getPersonsSelector = (state: AppStateType) => {\r\n  return state.profilePage.persons\r\n}","import {Avatar, Progress, Slider} from \"antd\";\r\nimport React, {FC} from \"react\";\r\nimport {RenderTime} from \"./RenderTime\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPersonSelector} from \"../../redux/profile-selector\";\r\nimport {personType} from \"../../redux/profile-reducer\";\r\nimport {DoubleRightOutlined, PauseOutlined, RightOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport {getLevelSelector} from \"../../redux/game-selector\";\r\nimport Radio from \"antd/lib/radio\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getConstTimeSpeedSelector, getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport { Work } from \"../../redux/work-reducer\";\r\n\r\ntype RenderPlayerProfileType = {\r\n  wallet: number\r\n  income: number\r\n}\r\n\r\nexport const RenderPlayerProfile: FC<RenderPlayerProfileType> = (props) => {\r\n\r\n  const profile = useSelector(getPersonSelector) as personType\r\n  const work = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n  const level = useSelector(getLevelSelector)\r\n  const time = useSelector(getTimeSpeedSelector)\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  let styleName = props.wallet > 1500\r\n    ? `${props.wallet > 3000\r\n      ? 'profile-top' : 'profile-medium'}`\r\n    : 'profile-start'\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfileStats\">\r\n        <div className=\"gameProfileStats__Avatar\">\r\n          <div className=\"gameProfileStats__AvatarImg\">\r\n            <div className=\"gameProfileStats__AvatarImgPhoto\">\r\n              <Progress\r\n                width={58}\r\n                strokeWidth={7}\r\n                type=\"circle\"\r\n                percent={20}\r\n                strokeColor={'rgb(16, 153, 209'}\r\n                trailColor={'#282c34'}\r\n                format={() => <Avatar src={profile.avatar} size={50}/> }\r\n              />\r\n              <div className=\"gameProfileStats__AvatarImgLevel\" onMouseOver={() => console.log('ррр')}>\r\n                <b>{level}</b>\r\n              </div>\r\n            </div>\r\n            <div className=\"gameProfileStats__AvatarImg__Name\">\r\n              {profile.name}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gameProfileStats__Menu\">\r\n          <button className=\"gameProfileStats__MenuItem\" style={time === 0 ? {color: '#fff'} : {}} onClick={() => onChangeTime(0)}>\r\n            <PauseOutlined />\r\n          </button>\r\n          <button className=\"gameProfileStats__MenuItem\" style={time === timeSpeed ? {color: '#fff'} : {}} onClick={() => onChangeTime(timeSpeed)}>\r\n            <RightOutlined />\r\n          </button>\r\n          <button className=\"gameProfileStats__MenuItem\" style={time === timeSpeed / 2 ? {color: '#fff'} : {}} onClick={() => onChangeTime(timeSpeed / 2)}>\r\n            <DoubleRightOutlined />\r\n          </button>\r\n        </div>\r\n        <div className=\"gameProfileStats__Wallet\">\r\n          <b className='gold'>{props.wallet}</b>\r\n        </div>\r\n      </div>\r\n      <div className={'gameProfileContent bannerBack ' + styleName}>\r\n        <div className=\"gameProfileContent__Work\">\r\n          <div className=\"gameProfileContent__WorkStats\">\r\n            <div className=\"gameProfileContent__WorkStats__Level\">\r\n              {work.options[work.level - 1].title}\r\n            </div>\r\n            <div className=\"gameProfileContent__WorkStats__Income\">\r\n              {/* (work.startSalary + work.options[work.level - 1].income * work.startSalary / 100).toFixed(1) */}\r\n              доход -  <span className=\"gold\">{props.income}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"gameProfileContent__WorkImg\">\r\n            <img src={work.avatar} alt=\"\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"gameProfileContent__Img\">\r\n          <img src={profile.img} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"gameProfileProgress\">\r\n        <RenderTime income={props.income} wallet={props.wallet}/>\r\n        <div className=\"gameProfileProgress__Title\">\r\n          Прогресс игры\r\n        </div>\r\n        <div className=\"gameProfileProgress__Slider\">\r\n          <Slider\r\n            defaultValue={1}\r\n            value={props.wallet}\r\n            min={0}\r\n            max={10000}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {FC, SetStateAction, useState} from \"react\";\r\nimport {CloseOutlined} from \"@ant-design/icons\";\r\nimport {Button, InputNumber} from \"antd\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {myStockType, stocksActions} from \"../../redux/stocks-reducer\";\r\nimport {getWalletSelector} from \"../../redux/game-selector\";\r\nimport {getMyStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getConstTimeSpeedSelector} from \"../../redux/settings-selector\";\r\n\r\nexport type SellPopupType = {\r\n  stock: myStockType\r\n  setIsStockToSell: SetStateAction<any>\r\n}\r\nexport const SellPopup: FC<SellPopupType> = (props) => {\r\n  // количество акций на продажу . . .\r\n  const [stocksToSellCount, setStocksToSellCount] = useState(1)\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n  const wallet = useSelector(getWalletSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sellPopup\">\r\n        <div className=\"sellPopupBlock\">\r\n          <div className=\"sellPopupBlock__Close\">\r\n            <CloseOutlined onClick={() => {\r\n              props.setIsStockToSell(false)\r\n              onChangeTime(timeSpeed)\r\n            }}/>\r\n          </div>\r\n          <div className=\"sellPopupBlock__Title\">\r\n            <div>Вы хотите продать акции компании:</div>\r\n            <b>{props.stock.title}</b>\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n            Кол-во акций в портфеле: <b>{props.stock.count}</b>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">\r\n              Сколько хотите продать <InputNumber min={1} max={props.stock.count} defaultValue={1} onChange={(value) => setStocksToSellCount(value)}/>\r\n            </label>\r\n            <div>\r\n              Вы получите:\r\n              <b style={props.stock.oldPrice <= props.stock.price ? {color: '#51ff3d'} : {color: \"red\"}}>\r\n                {stocksToSellCount * props.stock.price}\r\n              </b>\r\n              Выручка: ({stocksToSellCount * props.stock.price - stocksToSellCount * props.stock.oldPrice})\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <div style={{textAlign: 'center'}}>\r\n            <Button onClick={() => {\r\n              props.setIsStockToSell(false)\r\n              // возвращаем скорость времени\r\n              onChangeTime(timeSpeed)\r\n              // уменьшаем количество акций в пакете . . .\r\n              dispatch(stocksActions.sellStocks(props.stock, stocksToSellCount))\r\n              // увеличиваем баланс пользователя . . .\r\n              dispatch(actions.setWallet(wallet + stocksToSellCount * props.stock.price))\r\n            }}>\r\n              Продать\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/it.fe3919c1.jpg\";","export default __webpack_public_path__ + \"static/media/manager.f0418dbf.jpg\";","export default __webpack_public_path__ + \"static/media/engineer.836a743d.jpg\";","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {CSSProperties, FC, SetStateAction, useEffect, useState} from \"react\";\r\nimport {Work, WorkOptions, worksActions, WorksType} from \"../../redux/work-reducer\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport React from \"react\";\r\nimport {Button, Slider} from \"antd\";\r\nimport {getDaySelector, getIncomeSelector, getWalletSelector} from \"../../redux/game-selector\";\r\nimport {getDifficultySelector} from \"../../redux/settings-selector\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {CloseOutlined} from \"@ant-design/icons\";\r\n\r\nexport const RenderPlayerWork: FC<{setIsChangeWorkShown: SetStateAction<any>}> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n  // зп\r\n  const income = useSelector(getIncomeSelector)\r\n  // виды работы . . .\r\n  const works = useSelector((state: AppStateType) => state.worksPage.works)\r\n  // наша работа . . .\r\n  const currentWork = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n  // текущий день . . .\r\n  const day = useSelector(getDaySelector)\r\n  // баланс\r\n  const wallet = useSelector(getWalletSelector)\r\n  // показываем ли мы шанс на успех повышения . . .\r\n  const [isChanceVisible, setIsChanceVisible] = useState(false)\r\n  // сложность игры . . .\r\n  const difficulty = useSelector(getDifficultySelector)\r\n  // дней до запроса на повышение . . .\r\n  const [daysToTry, setDaysToTry] = useState(0)\r\n  // шанс повышения от сложности . . .\r\n  let chanceConst: number\r\n\r\n  switch (difficulty) {\r\n    case \"легко\":\r\n      chanceConst = 0.20\r\n      break\r\n    case \"средне\":\r\n      chanceConst = 0.15\r\n      break\r\n    case \"сложно\":\r\n      chanceConst = 0.10\r\n      break\r\n  }\r\n  // полный шанс повышения . . .\r\n  const [chanceToUp, setChanceToUp] = useState(chanceConst)\r\n  // дней до повышения . . .\r\n  const daysToUp = currentWork.options[currentWork.level - 1].daysToUp - currentWork.daysWorked\r\n\r\n  // увеличиваем количество проработанных дней и дней до запроса повышения . . .\r\n  useEffect(() => {\r\n    dispatch(worksActions.setDaysWorked(currentWork.daysWorked + 1))\r\n    setDaysToTry((days) => days + 1)\r\n  },[day])\r\n\r\n  useEffect(() => {\r\n    // повышение в работе при условии выслуги лет . . .\r\n    if(daysToUp === 0 && currentWork.level < 4) {\r\n      updateWorkStats()\r\n    }\r\n    // шанс повышения в зависимости от кол-ва проработанных дней . . .\r\n    let chance: number = Number(((currentWork.daysWorked / (2 * currentWork.options[currentWork.level - 1].daysToUp))).toFixed(1))\r\n    setChanceToUp(Number((chanceConst + chance).toFixed(2)))\r\n  },[daysToUp])\r\n\r\n  // повышение работы, при успехе переходим на новый уровень, при неудаче даем дебафы . . .\r\n  const upWork = () => {\r\n    // шанс повышения\r\n    const chance = Math.random()\r\n    if(chance <= chanceToUp) {\r\n      updateWorkStats()\r\n    } else {\r\n      dispatch(worksActions.setDaysWorked(0))\r\n      setDaysToTry(0)\r\n      dispatch(actions.setWallet(wallet - 100 - currentWork.options[currentWork.level - 1].income * 5))\r\n    }\r\n  }\r\n  // обновляем данные по работе после повышения\r\n  const updateWorkStats = () => {\r\n    console.log(Number((currentWork.options[currentWork.level - 1].income * currentWork.startSalary / 100).toFixed(1)))\r\n    dispatch(actions.setIncome(income + Number((currentWork.options[currentWork.level - 1].income * currentWork.startSalary / 100).toFixed(1))))\r\n    dispatch(worksActions.setDaysWorked(0))\r\n    dispatch(worksActions.setWorkLevel(currentWork.level + 1))\r\n  }\r\n  // смена работы . . .\r\n  return (\r\n    <>\r\n      <div className=\"gameWork bannerBack\">\r\n        <div className=\"gameWork__current\">\r\n          <div className=\"gameWork__currentButton\">\r\n            <Button onClick={() => props.setIsChangeWorkShown(true)}>\r\n              Сменить работу\r\n            </Button>\r\n          </div>\r\n          <div className=\"gameWork__currentTitle\">\r\n            Вы проработали - <b>{currentWork.daysWorked} дней</b>\r\n          </div>\r\n          <div className=\"gameWork__currentTitle\">\r\n            Ваш уровень - <b>{currentWork.options[currentWork.level - 1].level}</b>\r\n          </div>\r\n          {currentWork.level < 4\r\n            ?\r\n              <>\r\n                <div className=\"gameWork__currentTitle\">\r\n                  Дней до повышения - {daysToUp}\r\n                </div>\r\n                {daysToTry >= 20\r\n                ?\r\n                  <>\r\n                    <div>\r\n                      <button\r\n                        className=\"gameWork__currentAsk\"\r\n                        onMouseOver={() => setIsChanceVisible(true)}\r\n                        onMouseOut={() => setIsChanceVisible(false)}\r\n                        onClick={() => upWork()}\r\n                      >\r\n                        Попросить повышение\r\n                      </button>\r\n                      {isChanceVisible ? `   шанс: ${chanceToUp}` : ''}\r\n                    </div>\r\n                  </> : <div>\r\n                    Можно сделать запрос через {20 - daysToTry} дней\r\n                  </div>}\r\n              </>\r\n            : ''\r\n          }\r\n\r\n        </div>\r\n        <div className=\"gameWork__types\">\r\n          <div className=\"gameWork__typesTitle\">\r\n            Ветка развития\r\n          </div>\r\n          <div className=\"gameWork__typesContent\">\r\n            <div className=\"gameWork__typesBlocks\" style={currentWork.type === 'it' ? {borderColor: '#fff'} : {}}>\r\n              <div className=\"gameWork__typesBlockImg\">\r\n                <Avatar src={works.it.avatar} size={70} shape={\"square\"}/>\r\n              </div>\r\n              {works.it.options.map((workLevel, index) => <RenderWork workLevel={workLevel} index={index} type='it' key={index} /> )}\r\n            </div>\r\n            <div className=\"gameWork__typesBlocks\" style={currentWork.type === 'manager' ? {borderColor: '#fff'} : {}}>\r\n              <div className=\"gameWork__typesBlockImg\">\r\n                <Avatar src={works.manager.avatar} size={70} shape={\"square\"}/>\r\n              </div>\r\n              {works.manager.options.map((workLevel, index) => <RenderWork workLevel={workLevel} index={index} type='manager' key={index}/>)}\r\n            </div>\r\n            <div className=\"gameWork__typesBlocks\" style={currentWork.type === 'engineer' ? {borderColor: '#fff'} : {}}>\r\n              <div className=\"gameWork__typesBlockImg\">\r\n                <Avatar src={works.engineer.avatar} size={70} shape={\"square\"}/>\r\n              </div>\r\n              {works.engineer.options.map((workLevel, index) => <RenderWork workLevel={workLevel} index={index} type='engineer' key={index}/>)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst RenderWork: FC<{workLevel: WorkOptions, index: number, type: WorksType}> = React.memo((props) => {\r\n\r\n  const currentWork = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n\r\n  const styles: CSSProperties = {\r\n    border: '1px solid #282c34',\r\n    background:'rgba(255,255,255,0.9)',\r\n    color: '#282c34'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameWork__typesBlock\" style={props.index === currentWork.level - 1 && currentWork.type === props.type ? styles : {}}>\r\n        {props.index + 1}  {props.workLevel.title}\r\n      </div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport const WorksChoicePopup:FC<{setIsChangeWorkShown: SetStateAction<any>}> = (props) => {\r\n\r\n  const worksType = ['it', 'manager', 'engineer']\r\n  const dispatch = useDispatch()\r\n\r\n  const works = useSelector((state: AppStateType) => state.worksPage.works)\r\n  const currentWork = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n\r\n  const setNewWork = (workType: WorksType) => {\r\n    switch (workType) {\r\n      case \"it\":\r\n        dispatch(worksActions.setWork(works.it))\r\n        break\r\n      case \"manager\":\r\n        dispatch(worksActions.setWork(works.manager))\r\n        break\r\n      case \"engineer\":\r\n        dispatch(worksActions.setWork(works.engineer))\r\n        break\r\n    }\r\n    props.setIsChangeWorkShown(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"workChoicePopup\">\r\n        <div className=\"workChoicePopup__Block\">\r\n          <div className=\"workChoicePopup__BlockClose\">\r\n            <CloseOutlined onClick={() => props.setIsChangeWorkShown(false)}/>\r\n          </div>\r\n          <div className=\"workChoicePopup__BlockWorks\">\r\n              {currentWork.type !== 'it'\r\n                ? <div className=\"workChoicePopup__BlockWork\" onClick={() => setNewWork('it')}>\r\n                    <Avatar src={works.it.avatar} size={170} shape={'square'} />\r\n                  </div>\r\n                : ''\r\n              }\r\n              {currentWork.type !== 'manager'\r\n                ? <div className=\"workChoicePopup__BlockWork\" onClick={() => setNewWork('manager')}>\r\n                    <Avatar src={works.manager.avatar} size={170} shape={'square'} />\r\n                  </div>\r\n                : ''\r\n              }\r\n              {currentWork.type !== 'engineer'\r\n                ? <div className=\"workChoicePopup__BlockWork\" onClick={() => setNewWork('engineer')}>\r\n                  <Avatar src={works.engineer.avatar} size={170} shape={'square'} />\r\n                </div>\r\n                : ''\r\n              }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { FC, SetStateAction} from \"react\"\r\nimport {ArrowDownOutlined, ArrowUpOutlined, FallOutlined, RiseOutlined } from \"@ant-design/icons\"\r\nimport {myStockType, stockType } from \"../../redux/stocks-reducer\"\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type RenderStockType = {\r\n  stock: stockType,\r\n  index: number,\r\n  setIsHistoryShown: any,\r\n  setActiveStock: any\r\n}\r\n\r\nexport type RenderMyStockType = {\r\n  stock: myStockType,\r\n  index: number,\r\n  setIsHistoryShown: any,\r\n  setActiveStock: SetStateAction<any>\r\n  setMyActiveStock: SetStateAction<any>\r\n  setIsStockToSell: SetStateAction<any>\r\n}\r\n\r\nexport const RenderStock: FC<RenderStockType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfitStocks__OfferBlock\">\r\n        <div className=\"gameProfitStocks__OfferBlock__Title\">\r\n          {props.index + 1} - {props.stock.title}\r\n        </div>\r\n        <div className=\"gameProfitStocks__OfferBlock__Info\">\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoPrice\">\r\n            {props.stock.price[props.stock.price.length - 1]}\r\n          </div>\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoRisk\">\r\n            {props.stock.risk}\r\n          </div>\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoCondition\" style={props.stock.condition === 'up' ? {color: '#51ff3d'} : {color: 'red'}}>\r\n            {props.stock.condition === 'up'\r\n              //@ts-ignore\r\n              ? <b> <RiseOutlined /> </b>\r\n              //@ts-ignore\r\n              : <b> <FallOutlined /> </b>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"gameProfitStocks__OfferBlock__Button\" onClick={() => {\r\n            props.setActiveStock(props.stock)\r\n            props.setIsHistoryShown(true)\r\n            onChangeTime(0)\r\n          }}>\r\n            Посмотреть историю\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const RenderMyStock: FC<RenderMyStockType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfitStocks__OfferBlock\">\r\n        <div className=\"gameProfitStocks__OfferBlock__Title\">\r\n          {props.index + 1} - {props.stock.title}\r\n        </div>\r\n        <div className=\"gameProfitStocks__OfferBlock__Info\">\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoPrice\">\r\n            {props.stock.price} / {props.stock.oldPrice}\r\n          </div>\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoCondition\" style={props.stock.condition === 'up' ? {color: '#51ff3d'} : {color: 'red'}}>\r\n            {props.stock.condition === 'up'\r\n              //@ts-ignore\r\n              ? <b><ArrowUpOutlined /></b>\r\n              //@ts-ignore\r\n              : <b><ArrowDownOutlined /></b>\r\n            }\r\n          </div>\r\n          <div>\r\n            {props.stock.count} штук\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"gameProfitStocks__OfferBlock__Button\" onClick={() => {\r\n            props.setIsStockToSell(true)\r\n            props.setMyActiveStock(props.index)\r\n            onChangeTime(0)\r\n          }}>\r\n            Продать\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import {RenderMyStock, RenderStock} from \"./RenderStock\";\r\nimport React, {FC} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { getMyStocksSelector, getStocksSelector } from \"../../redux/stocks-selector\";\r\n\r\n\r\nexport type RenderPlayerStocksType = {\r\n  setIsHistoryShown: any\r\n  setActiveStock: any\r\n  setMyActiveStock: any\r\n  setIsStockToSell: any\r\n}\r\n\r\nexport const RenderPlayerStocks: FC<RenderPlayerStocksType> = (props) => {\r\n\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n  const stocks = useSelector(getStocksSelector)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfit bannerBack\">\r\n        <div className=\"gameProfitStocks\">\r\n          <div className=\"gameProfitStocks__Me\">\r\n            <div className=\"gameProfitStocks__Header\">\r\n              Ваши акции\r\n            </div>\r\n            <div className=\"gameProfitStocks__OfferBlocks\">\r\n              {myStocks.map((stock, index) =>\r\n                <RenderMyStock\r\n                  stock={stock}\r\n                  index={index}\r\n                  setIsHistoryShown={props.setIsHistoryShown}\r\n                  setActiveStock={props.setActiveStock}\r\n                  setMyActiveStock={props.setMyActiveStock}\r\n                  setIsStockToSell={props.setIsStockToSell}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"gameProfitStocks__Offer\">\r\n            <div className=\"gameProfitStocks__Header\">\r\n              Акции на рынке\r\n            </div>\r\n            <div className=\"gameProfitStocks__OfferBlocks\">\r\n              {stocks.map((stock, index) =>\r\n                <RenderStock\r\n                  stock={stock}\r\n                  index={index}\r\n                  setIsHistoryShown={props.setIsHistoryShown}\r\n                  setActiveStock={props.setActiveStock}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {CheckSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport {FC} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Tabs} from \"antd\";\r\nimport {newsActions} from \"../../redux/news-reducer\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport const RenderPlayerNews = () => {\r\n\r\n  const news = useSelector((state: AppStateType) => state.newsPage.news)\r\n  const archive = useSelector((state: AppStateType) => state.newsPage.archive)\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameNews bannerBack\">\r\n        <div className=\"gameNewsContent\">\r\n          <Tabs defaultActiveKey=\"1\" centered className='gameNewsContent__Tabs'>\r\n            <TabPane tab=\"Новости\" key=\"1\">\r\n              <div className=\"gameNewsBlocks\">\r\n                {news.map((newsBlock, index) =>\r\n                  <RenderNewsBlock\r\n                    key={index}\r\n                    title={newsBlock.title}\r\n                    company={newsBlock.company}\r\n                    amount={newsBlock.amount}\r\n                    index={index}\r\n                    isArchive={false}\r\n                    month={newsBlock.month}\r\n                    dayInMonth={newsBlock.dayInMonth}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n            <TabPane tab=\"Архив\" key=\"2\">\r\n              <div className=\"gameNewsBlocks gameNewsBlocks__reverse\">\r\n                {archive.map((newsBlock, index) =>\r\n                  <RenderNewsBlock\r\n                    key={index}\r\n                    title={newsBlock.title}\r\n                    company={newsBlock.company}\r\n                    amount={newsBlock.amount}\r\n                    index={index}\r\n                    isArchive={true}\r\n                    month={newsBlock.month}\r\n                    dayInMonth={newsBlock.dayInMonth}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\ntype NewsBlockType = {\r\n  title: string\r\n  company: string\r\n  amount: number\r\n  index: number\r\n  isArchive: boolean\r\n  month: string\r\n  dayInMonth: number\r\n}\r\n\r\nexport const RenderNewsBlock: FC<NewsBlockType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const moveToArchive = () => {\r\n    dispatch(newsActions.setToArchive(props.index))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameNewsBlock\">\r\n        <div className=\"gameNewsBlock__Title\">\r\n          <b>Новость!</b>\r\n          <span style={{color: 'darkgrey'}}> / <i>{props.month} {props.dayInMonth}</i></span>\r\n        </div>\r\n        <div className=\"gameNewsBlock__News\">\r\n          <div className=\"gameNewsBlock__NewsTitle\">\r\n            <b>{props.title}</b>\r\n          </div>\r\n          {props.company !== ''\r\n            ? <div>\r\n              <i>{props.company}</i>\r\n          </div>\r\n            : ''\r\n          }\r\n          {props.amount !== 0\r\n            ? <div className=\"gameNewsBlock__NewsPrice\">\r\n                {props.amount}\r\n              </div>\r\n            : ''}\r\n        </div>\r\n        {/* кнопка для помещения новости в архив . . . */}\r\n        {props.isArchive\r\n          ? ''\r\n          :\r\n            <div className='gameNewsBlock__Footer' >\r\n              <button onClick={() => moveToArchive()} className='gameNewsBlock__FooterButton'>\r\n                <CheckSquareOutlined />\r\n              </button>\r\n              <div className=\"gameNewsBlock__FooterText\">\r\n                <b>Я прочитал</b>\r\n              </div>\r\n            </div>}\r\n        </div>\r\n    </>\r\n  )\r\n}","import {AppStateType} from \"./store\";\r\n\r\nexport const getBusinessesSelector = ((state: AppStateType) => {\r\n  return state.businessPage.businesses\r\n})\r\n\r\nexport const getMyBusinessesSelector = ((state: AppStateType) => {\r\n  return state.businessPage.myBusinesses\r\n})","export default __webpack_public_path__ + \"static/media/cafe.6b4a7055.jpg\";","export default __webpack_public_path__ + \"static/media/garage.81ed1d60.jpg\";","export default __webpack_public_path__ + \"static/media/service.2c5d60b8.jpg\";","export default __webpack_public_path__ + \"static/media/hotel.d345d3ac.jpg\";","import businessImg1 from './../img/businesses/cafe.jpg'\r\nimport businessImg2 from './../img/businesses/garage.jpg'\r\nimport businessImg3 from './../img/businesses/service.jpg'\r\nimport businessImg4 from './../img/businesses/hotel.jpg'\r\nimport {AppStateType, InferActionsType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actions} from \"./game-reducer\";\r\n\r\nconst SET_BUSINESSES = 'businessPage/SET_BUSINESSES'\r\nconst ADD_TO_MY_BUSINESSES = 'businessPage/ADD_TO_MY_BUSINESSES'\r\nconst REMOVE_FROM_MY_BUSINESSES = 'businessPage/REMOVE_FROM_MY_BUSINESSES'\r\n\r\nlet initialState = {\r\n  myBusinesses: [] as BusinessType[],\r\n  // список компаний для бизнесса . . .\r\n  businesses: [] as BusinessType[],\r\n  companiesForBusiness: [\r\n    {name: 'Ресторан', img: businessImg1},\r\n    {name: 'Сдача гаража', img: businessImg2},\r\n    {name: 'Сервис', img: businessImg3},\r\n    {name: 'Мотель', img: businessImg4},\r\n  ]\r\n}\r\n\r\n\r\n\r\nexport const businessReducer = (state = initialState, action: BusinessActionType): InitialBusinessStateType => {\r\n  switch (action.type) {\r\n    // первое создание компаний для бизнесса\r\n    case SET_BUSINESSES:\r\n      let businessesCopy = [...state.businesses]\r\n      state.companiesForBusiness.map(business => {\r\n        let price = Number((Math.random() * 1000 + 500).toFixed(0))\r\n        let income = Number((price / 10 + Number((Math.random() * 49 + 1).toFixed(1))).toFixed(1))\r\n\r\n        let deal = {\r\n          name: business.name,\r\n          img: business.img,\r\n          price: price,\r\n          income: income\r\n        }\r\n        businessesCopy = [...businessesCopy, deal]\r\n      })\r\n      return {\r\n        ...state,\r\n        businesses: businessesCopy\r\n      }\r\n    case ADD_TO_MY_BUSINESSES:\r\n      return {\r\n        ...state,\r\n        myBusinesses: [...state.myBusinesses, action.business]\r\n      }\r\n    case REMOVE_FROM_MY_BUSINESSES:\r\n      let myBusinessCopy = [...state.myBusinesses]\r\n      myBusinessCopy.map((myBusiness, index) => {\r\n        if (myBusiness.name === action.business.name) {\r\n          myBusinessCopy.splice(index, 1)\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        myBusinesses: myBusinessCopy\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const businessActions = {\r\n  setBusinesses: () => ({type: SET_BUSINESSES} as const),\r\n  addToMyBusinesses: (business: BusinessType) => ({type: ADD_TO_MY_BUSINESSES, business} as const),\r\n  removeFromMyBusiness: (business: BusinessType) => ({type: REMOVE_FROM_MY_BUSINESSES, business } as const)\r\n}\r\n\r\n\r\ntype BusinessActionType = InferActionsType<typeof businessActions>\r\nexport type BusinessType = {\r\n  name: string\r\n  img: string\r\n  price: number\r\n  income: number\r\n}\r\nexport type InitialBusinessStateType = typeof initialState\r\ntype BusinessThunkType = ThunkAction<any, AppStateType, unknown, BusinessActionType>\r\n\r\nexport const buyBusinessThunk = (business: BusinessType):BusinessThunkType => (dispatch, getState) => {\r\n  // добавляем бизнесс в портфель игрока . . .\r\n  dispatch(businessActions.addToMyBusinesses(business))\r\n  // @ts-ignore / обновляем доход игрока . . .\r\n  dispatch(actions.buyBusiness(business.price, business.income))\r\n}\r\n\r\nexport const sellBusinessThunk = (business: BusinessType, price: number): BusinessThunkType => (dispatch, getState) => {\r\n  // удаляем бизнесс из портфеля . . .\r\n  dispatch(businessActions.removeFromMyBusiness(business))\r\n  // @ts-ignore / убираем доход и обновляем баланс\r\n  dispatch(actions.sellBusiness(price, business.income))\r\n}","import Button from \"antd/lib/button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getBusinessesSelector, getMyBusinessesSelector} from \"../../redux/business-selector\";\r\nimport {BusinessType, buyBusinessThunk, sellBusinessThunk} from \"../../redux/business-reducer\";\r\nimport {FC} from \"react\";\r\nimport {Tabs} from \"antd\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport const RenderPlayerBusiness = () => {\r\n\r\n  const businesses = useSelector(getBusinessesSelector)\r\n  const myBusinesses = useSelector(getMyBusinessesSelector)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameBusiness bannerBack\">\r\n        <Tabs defaultActiveKey=\"1\" centered className='gameBusinessTabs'>\r\n          <TabPane tab=\"Ваш бизнесс\" key=\"1\">\r\n            <div className=\"gameBusinessBlocks\">\r\n              {myBusinesses.length === 0\r\n                ? 'У вас нет своего бизнесса'\r\n                : <>\r\n                  {\r\n                    myBusinesses.map((myBusiness, index) => <RenderBusinessBlock key={index} business={myBusiness} isMine={true}/>\r\n                    )\r\n                  }\r\n                </>\r\n              }\r\n            </div>\r\n          </TabPane>\r\n          <TabPane tab=\"Купить бизнесс\" key=\"2\">\r\n            <div className=\"gameBusinessBlocks\">\r\n              {businesses.map((business, index) => {\r\n                const isBought = myBusinesses.some(b => b.name === business.name)\r\n                const isMaxCount = myBusinesses.length >= 2\r\n                return (\r\n                  <>\r\n                    <RenderBusinessBlock key={index} business={business} isBought={isBought} isMine={false} isMaxCount={isMaxCount}/>\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst RenderBusinessBlock: FC<{business: BusinessType, isBought?: boolean, isMine: boolean, isMaxCount?: boolean}> = ({business, isBought, isMaxCount, isMine}) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const priceToSell = Number((business.price * 0.6).toFixed(0))\r\n\r\n  return (\r\n    <>\r\n      <div className={isBought ? 'gameBusinessBlock__Bought gameBusinessBlock' : 'gameBusinessBlock'}>\r\n        <div className=\"gameBusinessBlock__Title\">\r\n          <b>{business.name}</b>\r\n        </div>\r\n        <div className=\"gameBusinessBlock__Img\">\r\n          <img src={business.img} alt=\"\"/>\r\n        </div>\r\n        <div className=\"gameBusinessBlock__Stats\">\r\n          <div className=\"gameBusinessBlock__StatsMoney\">\r\n\r\n            <div className=\"gameBusinessBlock__StatsMoney__Price\">\r\n              {!isMine\r\n              ? <span>Цена покупки: <b><i>{business.price}</i></b></span>\r\n              : <span>Цена подажи: <b><i>{priceToSell}</i></b></span>\r\n              }\r\n            </div>\r\n\r\n            <div className=\"gameBusinessBlock__StatsMoney__Income\">\r\n              Доход: <b><i>{business.income}</i></b>\r\n            </div>\r\n            <div>\r\n              Окупаемость: <b style={{color: 'grey'}}><i>~{Math.ceil(business.price/business.income)} Месяцев</i></b>\r\n            </div>\r\n          </div>\r\n           <div className=\"gameBusinessBlock__StatsButton\">\r\n            {\r\n              !isMine\r\n                ? <span>{!isBought && <Button disabled={isMaxCount} onClick={() => dispatch(buyBusinessThunk(business))}>Приобрести</Button>}</span>\r\n                : <Button onClick={() => dispatch(sellBusinessThunk(business, priceToSell))}>Продать</Button>\r\n            }\r\n           </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {RenderPlayerSpends} from \"./RenderPlayerSpends\";\r\nimport {RenderChart} from \"./RenderChart\";\r\nimport {RenderPlayerProfile} from \"./RenderPlayerProfile\";\r\nimport {Badge, Tabs} from \"antd\";\r\nimport {SellPopup} from \"./SellPopup\";\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {getDaySelector, getIncomeSelector, getWalletSelector} from \"../../redux/game-selector\";\r\nimport {getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {RenderPlayerWork, WorksChoicePopup} from \"./RenderPlayerWork\";\r\nimport {RenderPlayerStocks} from \"./RenderPlayerStocks\";\r\nimport {RenderPlayerNews} from \"./RenderPlayerNews\";\r\nimport {stocksActions, stockType} from \"../../redux/stocks-reducer\";\r\nimport {getMyStocksSelector, getStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {newsActions} from \"../../redux/news-reducer\";\r\nimport {RenderPlayerBusiness} from \"./RenderPlayerBusiness\";\r\nimport {getBusinessesSelector} from \"../../redux/business-selector\";\r\nimport {businessActions} from \"../../redux/business-reducer\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport const GamePage: FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  // переменная для скорости времени . . .\r\n  const timeSpeed = useSelector(getTimeSpeedSelector)\r\n  // счётчик дней . . .\r\n  const day = useSelector(getDaySelector)\r\n  // кошелёк игрока . . .\r\n  const wallet = useSelector(getWalletSelector)\r\n  // доход в месяц игрока . . .\r\n  const income = useSelector(getIncomeSelector)\r\n  // стартовый доход . . .\r\n  const startIncome = useSelector((state: AppStateType) => state.worksPage.currentWork?.startSalary) as number\r\n  // массив с акциями . . .\r\n  const stocks = useSelector(getStocksSelector)\r\n  // массив купленных акций . . .\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n  // будущий массив с предложением по бизнессу . . .\r\n  const businesses = useSelector(getBusinessesSelector)\r\n  // количество новостей . . .\r\n  const news = useSelector((state: AppStateType) => state.newsPage.news)\r\n  // активная акция . . .\r\n  const [myActiveStock, setMyActiveStock] = useState(0)\r\n  // переменная для просмотра истории цены акции . . .\r\n  const [isHistoryShown, setIsHistoryShown] = useState(false)\r\n  // переменная для продажи акций . . .\r\n  const [isStockToSell, setIsStockToSell] = useState(false)\r\n  // смена работы . . .\r\n  const [isChangeWorkShown, setIsChangeWorkShown] = useState(false)\r\n  // активная акция пользователя . . .\r\n  const [activeStock, setActiveStock] = useState(null as null | stockType)\r\n\r\n  // функция которая ведёт подсчёт дней . . .\r\n  // от работы этой функции идет работа всей игры . . .\r\n  const liveProcess = () => {\r\n    if(timeSpeed !== 0) {\r\n      setTimeout(() => {\r\n        // диспатчим обновленный счетчик дней . . .\r\n        dispatch(actions.setDay(day + 1))\r\n      }, timeSpeed * 500)\r\n    }\r\n  }\r\n  liveProcess()\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.setIncome(startIncome))\r\n  },[])\r\n\r\n  // заполнение массива акциями . . .\r\n  useEffect(() => {\r\n    // создаём акции\r\n    // TODO доработать\r\n    if (wallet >= 300 && stocks.length === 0) {\r\n      // создаём акции\r\n      dispatch(stocksActions.setStocks())\r\n      // новости про акции\r\n      dispatch(newsActions.setAbleToShow('stocksNews'))\r\n      }\r\n    // создаём бизнесс\r\n    if (wallet >= 3000 && businesses.length === 0) {\r\n      // создаем бизнесс\r\n      dispatch(businessActions.setBusinesses())\r\n      // новости про бизнесс\r\n      dispatch(newsActions.setAbleToShow('businessNews'))\r\n      }\r\n    },[wallet])\r\n  // заполнение массива предложениями о бизнессе . . .\r\n\r\n  // виды рисков при покупке акций . . .\r\n  enum Risks {\r\n    low = 1, // почти нет риска (очень маленькая маленькая прибыль)\r\n    small = 2, // небольшой риск (маленькая прибыль)\r\n    medium = 3, // средний риск (средняя прибыль)\r\n    big = 4, // большой риск (хорошая прибыль)\r\n    huge = 5 // огромный риск (большая риск)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {income\r\n        ?\r\n          <div>\r\n            {isStockToSell ? <SellPopup stock={myStocks[myActiveStock]} setIsStockToSell={setIsStockToSell} /> : ''}\r\n            {isHistoryShown ? <RenderChart setIsHistoryShown={setIsHistoryShown} stock={activeStock as stockType} /> : ''}\r\n            {isChangeWorkShown ? <WorksChoicePopup setIsChangeWorkShown={setIsChangeWorkShown}/> : ''}\r\n            <div className=\"game\">\r\n              <div className='gameProfile'>\r\n                <RenderPlayerProfile wallet={wallet} income={income}/>\r\n              </div>\r\n              <div className=\"gameActions\">\r\n                <Tabs defaultActiveKey=\"2\">\r\n                  <TabPane tab={\r\n                    <Badge count={news.length} overflowCount={10}>Новости</Badge>\r\n                  } key=\"1\">\r\n                    <RenderPlayerNews />\r\n                  </TabPane>\r\n                  <TabPane tab=\"Работа\" key=\"2\" active>\r\n                    <RenderPlayerWork setIsChangeWorkShown={setIsChangeWorkShown}/>\r\n                  </TabPane>\r\n                  <TabPane tab=\"Затраты\" key=\"3\">\r\n                    <RenderPlayerSpends/>\r\n                  </TabPane>\r\n                  <TabPane tab=\"Акции\" key=\"4\" disabled={wallet < 300 && myStocks.length === 0} >\r\n                    <RenderPlayerStocks\r\n                      setIsHistoryShown={setIsHistoryShown}\r\n                      setMyActiveStock={setMyActiveStock}\r\n                      setActiveStock={setActiveStock}\r\n                      setIsStockToSell={setIsStockToSell}\r\n                    />\r\n                  </TabPane >\r\n                  <TabPane tab=\"Бизнесс\" key=\"5\" disabled={wallet <= 3000}>\r\n                    <RenderPlayerBusiness />\r\n                  </TabPane>\r\n                </Tabs>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        : 'загрузка'}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","import { NavLink } from \"react-router-dom\";\r\nimport React, { FC } from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getPersonSelector} from \"../../redux/profile-selector\";\r\n\r\nexport const MenuPage: FC = (props) => {\r\n\r\n  const person = useSelector(getPersonSelector)\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className='menu bannerBack'>\r\n          <div className=\"menuGameName\">\r\n            <span>#ЯИнвестор</span>\r\n          </div>\r\n          <div className=\"menuContent\">\r\n            <div className=\"menuHeader\">\r\n              МЕНЮ\r\n            </div>\r\n            <div className=\"menuList\">\r\n              <div className=\"menuListItem\">\r\n                <NavLink to='/profile'>\r\n                  <button className='menuListItem__Button'>\r\n                    Начать игру\r\n                  </button>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                <NavLink to='/game'>\r\n                  <button className='menuListItem__Button' disabled={true}>\r\n                    Достижения\r\n                  </button>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                <NavLink to='/game'>\r\n                  <button className='menuListItem__Button' disabled={true}>\r\n                    Статистика\r\n                  </button>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                <NavLink to='/settings'>\r\n                  <button className='menuListItem__Button'>\r\n                    Настройки\r\n                  </button>\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n            <div className=\"person\">\r\n              {person ? person.name : 'выберете персонажа!'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </>\r\n  )\r\n}","import {LeftSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport { FC } from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const ReturnBackButton:FC<{link: string}> = (props) => {\r\n  return (\r\n    <div className=\"returnBack\">\r\n      <NavLink to={props.link}>\r\n        <button className='returnBackButton buttonNav'>\r\n          <LeftSquareOutlined />\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/person-1.ceda3b6d.png\";","export default __webpack_public_path__ + \"static/media/person-1-avatar.f348cfde.png\";","export default __webpack_public_path__ + \"static/media/person-2.0bb7792e.png\";","export default __webpack_public_path__ + \"static/media/person-2-avatar.5c71962e.png\";","export default __webpack_public_path__ + \"static/media/person-3.ae5b2162.png\";","export default __webpack_public_path__ + \"static/media/person-3-avatar.453c191c.png\";","export default __webpack_public_path__ + \"static/media/person-4.8a806a5e.png\";","export default __webpack_public_path__ + \"static/media/person-4-avatar.84b4cc3a.png\";","import {InferActionsType} from \"./store\";\r\nimport person1Photo from \"../img/characters/person-1.png\";\r\nimport person1Avatar from \"../img/characters/person-1-avatar.png\";\r\nimport person2Photo from \"../img/characters/person-2.png\";\r\nimport person2Avatar from \"../img/characters/person-2-avatar.png\";\r\nimport person3Photo from \"../img/characters/person-3.png\";\r\nimport person3Avatar from \"../img/characters/person-3-avatar.png\";\r\nimport person4Photo from \"../img/characters/person-4.png\";\r\nimport person4Avatar from \"../img/characters/person-4-avatar.png\";\r\nimport {WorksType} from \"./work-reducer\";\r\n\r\nconst SET_PROFILE = 'profilePage/SET_PROFILE'\r\n\r\nlet initialState = {\r\n  // список возможных персонажей . . .\r\n  persons: [\r\n    {\r\n      name: 'Davie',\r\n      age: 28,\r\n      img: person1Photo,\r\n      preferences: [\r\n        {type: 'it' as WorksType, rise: 2},\r\n        {type: 'manager' as WorksType, rise: 0},\r\n        {type: 'engineer' as WorksType, rise: 7},\r\n      ],\r\n      saving: 10300,\r\n      avatar: person1Avatar\r\n    }, {\r\n      name: 'Max',\r\n      age: 24,\r\n      img: person2Photo,\r\n      preferences: [\r\n        {type: 'it' as WorksType, rise: 0},\r\n        {type: 'manager' as WorksType, rise: 8},\r\n        {type: 'engineer' as WorksType, rise: 2},\r\n      ],\r\n      saving: 11370,\r\n      avatar: person2Avatar\r\n    } as personType, {\r\n      name: 'Bill',\r\n      age: 19,\r\n      img: person3Photo,\r\n      preferences: [\r\n        {type: 'it' as WorksType, rise: 8},\r\n        {type: 'manager' as WorksType, rise: 0},\r\n        {type: 'engineer' as WorksType, rise: 0},\r\n      ],\r\n      saving: 280,\r\n      avatar: person3Avatar\r\n    } as personType, {\r\n      name: 'Kate',\r\n      age: 23,\r\n      img: person4Photo,\r\n      preferences: [\r\n        {type: 'it' as WorksType, rise: 2},\r\n        {type: 'manager' as WorksType, rise: 7},\r\n        {type: 'engineer' as WorksType, rise: 4},\r\n      ],\r\n      saving: 400,\r\n      avatar: person4Avatar\r\n    } as personType,\r\n  ],\r\n  // наш профиль . . .\r\n  profile: null as null | personType\r\n}\r\n\r\nexport type InitialProfileStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): InitialProfileStateType => {\r\n  switch (action.type) {\r\n    case SET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const profileActions = {\r\n  setProfile: (profile: personType) => ({type: SET_PROFILE, profile} as const)\r\n}\r\n\r\ntype ProfileActionsType = InferActionsType<typeof profileActions>\r\nexport type personType = {\r\n  name: string\r\n  age: number\r\n  preferences: {\r\n    type: WorksType\r\n    rise: number\r\n  }[]\r\n  saving: number\r\n  img: string\r\n  avatar: string\r\n}\r\n","import {ReturnBackButton} from \"../common/ReturnBackButton\";\r\nimport {FC, SetStateAction, useState} from \"react\"\r\nimport {Carousel} from \"antd\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {personType, profileActions} from \"../../redux/profile-reducer\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RightSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\n\r\nexport const ProfilePage: FC = () => {\r\n\r\n  const persons = useSelector((state: AppStateType) => state.profilePage.persons)\r\n  const [activePerson, setActivePerson] = useState(0)\r\n  const dispatch = useDispatch()\r\n\r\n  const setProfile = () => {\r\n    const profile = persons[activePerson]\r\n    dispatch(profileActions.setProfile(profile))\r\n    dispatch(actions.setWallet(profile.saving))\r\n  }\r\n\r\n  const ContinueButton: FC = () => {\r\n    return (\r\n      <div className=\"continue\">\r\n        <NavLink to='/work'>\r\n          <button className=\"continueButton buttonNav\" onClick={() => setProfile()}>\r\n            <RightSquareOutlined />\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile bannerBack\">\r\n        <div className=\"profileContent\">\r\n          <div className=\"profileContentButtons\">\r\n            <ReturnBackButton link='/'/>\r\n            <ContinueButton />\r\n          </div>\r\n          <RenderPersons persons={persons} activePerson={activePerson} setActivePerson={setActivePerson}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst RenderPersons: FC<{persons: personType[], activePerson: number, setActivePerson: SetStateAction<any>}> = (props) => {\r\n\r\n  const onChange = (key: number) => {\r\n    props.setActivePerson(key)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"persons\">\r\n        <Carousel afterChange={onChange} dots={{className: 'personsDots'}} dotPosition={\"left\"}>\r\n          {props.persons.map((person, index) => <RenderPerson person={person} key={index} />)}\r\n        </Carousel>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport const RenderPerson: FC<{person: personType}> = ({person}) => {\r\n  return (\r\n    <>\r\n      <div className=\"person\">\r\n        <div className=\"personInfo\">\r\n          <div className=\"personInfo__name\">\r\n            {person.name}\r\n          </div>\r\n          <div className=\"personInfo__age\">\r\n            Возраст: {person.age} лет\r\n          </div>\r\n          <div className=\"personInfo__tax\">\r\n            Капитал: {person.saving}\r\n          </div>\r\n          <div className=\"personInfo__preferences\">\r\n            <div className=\"personInfo__preferencesTitle\">\r\n              Предпочтения\r\n            </div>\r\n            {person.preferences.map((pref, index) => {\r\n              // TODO перевести в будующем на SWITCH/CASE\r\n              let prefTitle = pref.type === 'it' ? 'ИТ' : `${pref.type === 'manager' ? 'Менеджемент' : 'Инженерия'}`\r\n\r\n              let prefCount = Array(pref.rise).fill('')\r\n\r\n              const RenderPrefSquare = () => {\r\n                return (\r\n                  <>\r\n                    <div className=\"personInfo__preferencesBlock\"></div>\r\n                  </>\r\n                )\r\n\r\n              }\r\n\r\n              return (\r\n                <>\r\n                  {pref.rise > 0\r\n                    ? <>\r\n                        <b>{prefTitle}</b>\r\n                        <div className=\"personInfo__preferencesBlocks\">\r\n                          {prefCount.map(() => <RenderPrefSquare />)}\r\n                        </div>\r\n                      </>\r\n                    : ''\r\n                  }\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"personImg\">\r\n          <img src={person.img} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import Radio from \"antd/lib/radio\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getDifficultySelector, getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {ReturnBackButton} from \"../common/ReturnBackButton\";\r\n\r\nexport const SettingsPage = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const timeSpeed = useSelector(getTimeSpeedSelector)\r\n  const difficulty = useSelector(getDifficultySelector)\r\n  // выбор скорости игры\r\n  const timesSpeed = [8, 4, 2]\r\n\r\n  const optionsTime = [\r\n    { label: 'день/4сек', value: timesSpeed[0] },\r\n    { label: 'день/2сек', value: timesSpeed[1] },\r\n    { label: 'день/1сек', value: timesSpeed[2] },\r\n  ];\r\n  const optionsDifficulty = [\r\n    { label: 'Легко', value: 'легко' },\r\n    { label: 'Средне', value: 'средне' },\r\n    { label: 'Сложно', value: 'сложно' },\r\n  ];\r\n\r\n  const onChangeTime = (e: any) => {\r\n    dispatch(settingsActions.setTimeSpeed(e.target.value))\r\n    dispatch(settingsActions.setConstTimeSpeed(e.target.value))\r\n  };\r\n  const onChangeDifficulty = (e: any) => {\r\n    dispatch(settingsActions.setDifficulty(e.target.value))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"settings bannerBack\">\r\n        <ReturnBackButton link='/'/>\r\n        <div className=\"settingsList\">\r\n          <div className=\"settingsListItem\">\r\n            Скорость игры\r\n            <br/>\r\n            <Radio.Group\r\n              options={optionsTime}\r\n              onChange={onChangeTime}\r\n              value={timeSpeed}\r\n              optionType=\"button\"\r\n              className='settingsListItem__Radio'\r\n            />\r\n          </div>\r\n          <div className=\"settingsListItem\">\r\n            Сложность игры\r\n            <Radio.Group\r\n              options={optionsDifficulty}\r\n              onChange={onChangeDifficulty}\r\n              value={difficulty}\r\n              optionType=\"button\"\r\n              className='settingsListItem__Radio'\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Avatar} from \"antd\";\r\nimport {ReturnBackButton} from \"../common/ReturnBackButton\";\r\nimport {FC, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RightSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport {Work, worksActions, WorksType} from \"../../redux/work-reducer\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {getDifficultySelector} from \"../../redux/settings-selector\";\r\n\r\nexport const WorkPage = () => {\r\n\r\n  useEffect(() => {\r\n    // по дефолту выбираем работу в it\r\n    setWork('it')\r\n    // сетаем зп\r\n    dispatch(worksActions.setSalary())\r\n    // сетаем цены на траты, в зависимости от сложности игры . . .\r\n    let difficultPrice = 0\r\n    switch (difficulty) {\r\n      case \"легко\":\r\n        difficultPrice = -15\r\n        break\r\n      case \"сложно\":\r\n        difficultPrice = 15\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    // console.log(difficultPrice)\r\n    // console.log(difficulty)\r\n    // если сложность лёгкая, то все цены на 15 меньше, если сложная то на 15 больше . . .\r\n    dispatch(actions.setEventsPrice(difficultPrice))\r\n  },[])\r\n\r\n  const dispatch = useDispatch()\r\n  const works = useSelector((state: AppStateType) => state.worksPage.works)\r\n  const work = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n  const personPref = useSelector((state: AppStateType) => state.profilePage.profile?.preferences)\r\n  const difficulty = useSelector(getDifficultySelector)\r\n\r\n  const setWork = (type: WorksType) => {\r\n    switch (type) {\r\n      case \"it\":\r\n        dispatch(worksActions.setWork(works.it))\r\n        break\r\n\r\n      case 'manager':\r\n        dispatch(worksActions.setWork(works.manager))\r\n        break\r\n\r\n      case \"engineer\":\r\n        dispatch(worksActions.setWork(works.engineer))\r\n        break\r\n\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  const ContinueButton: FC = () => {\r\n    return (\r\n      <div className=\"continue\">\r\n        <NavLink to='/game'>\r\n          <button className=\"continueButton buttonNav\">\r\n            <RightSquareOutlined />\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let texts = [\r\n    {\r\n      type: 'it',\r\n      text: 'профессия скрупулёзных созидателей. Ни один проект в сфере информационных технологий не обходится ' +\r\n        'без труда разработчика — программиста, который занимается созданием различных продуктов в ИТ: ' +\r\n        'компьютерных игр, мобильных приложений, веб-сайтов и др'\r\n    }, {\r\n      type: 'manager',\r\n      text: 'специалист, занятый организацией процессами на определённом участке предприятия, ' +\r\n        'организации. Может быть её владельцем, но часто является наёмным работником. ' +\r\n        'Менеджер, как правило, является должностным лицом в организации, в которой работает, '\r\n    }, {\r\n      type: 'engineer',\r\n      text: 'специалист, осуществляющий инженерную деятельность. Инженеры вовлечены, как правило, во все процессы жизненного цикла ' +\r\n        'технических устройств, являющихся предметом инженерного дела, ' + 'включая прикладные исследования, планирование, проектирование, '\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      {work\r\n        ?\r\n        <div className=\"workChoice bannerBack\">\r\n          <div className=\"workChoiceNav\">\r\n            <ReturnBackButton link='/profile'/>\r\n            <ContinueButton />\r\n          </div>\r\n          <div className=\"workChoiceContent\">\r\n            <div className=\"workChoiceContent__List\">\r\n              <div className=\"workChoiceContent__ListHeader\">\r\n                Выбор работы\r\n              </div>\r\n              <div className=\"workChoiceContent__ListItems\">\r\n                <div\r\n                  className=\"workChoiceContent__ListItem\"\r\n                  onClick={() => {setWork('it')}}\r\n                >\r\n                  <Avatar shape={\"square\"} size={150} src={works.it.avatar} style={work.type === 'it' ? {zIndex: 10} : {}} />\r\n                </div>\r\n                <div\r\n                  className=\"workChoiceContent__ListItem\"\r\n                  onClick={() => {setWork('manager')}\r\n                  }\r\n                >\r\n                  <Avatar shape={\"square\"} size={150} src={works.manager.avatar} style={work.type === 'manager' ? {zIndex: 10} : {}} />\r\n                </div>\r\n                <div\r\n                  className=\"workChoiceContent__ListItem\"\r\n                  onClick={() => {setWork('engineer')}\r\n                  }\r\n                >\r\n                  <Avatar shape={\"square\"} size={150} src={works.engineer.avatar} style={work.type === 'engineer' ? {zIndex: 10} : {}} />\r\n                </div>\r\n              </div>\r\n              <div className=\"workChoiceContent__ListAbout\">\r\n                <div className=\"workChoiceContent__ListAbout__Header\">\r\n                  <b>{work.options[0].title}</b>\r\n                </div>\r\n                <div className=\"workChoiceContent__ListAbout__Content\">\r\n                  <div className=\"workChoiceContent__ListAbout__ContentSalary\">\r\n                    Зарплата -  <b>{work.startSalary} </b>\r\n                    {personPref?.map((pref, index) => {\r\n                      return (\r\n                        <span key={index}>\r\n                          {pref.type === work.type && pref.rise > 0\r\n                            ? <>\r\n                                <span className=\"workChoiceContent__ListAbout__ContentSalaryBonus\">\r\n                                  + {(pref.rise * work.startSalary / 100).toFixed(0)}\r\n                                </span>\r\n                              </>\r\n                            : ''}\r\n                        </span>\r\n                      )\r\n                    })}\r\n                  </div>\r\n                  <div className=\"workChoiceContent__ListAbout__ContentRise\">\r\n                    Перспектива роста - {personPref?.map((pref, index) => {\r\n\r\n                      let riseColor = pref.rise < 3\r\n                        ? 'red'\r\n                        : `${pref.rise < 7 \r\n                          ? '#ffc900' \r\n                          : '#35b924'\r\n                        }`\r\n\r\n                      return (\r\n                        <span key={index}>\r\n                          {work.type === pref.type\r\n                            ? <span style={{color: riseColor}}>{pref.rise + 1}</span>\r\n                            : ''}\r\n                        </span>\r\n                      )\r\n                  })}\r\n                  </div>\r\n                  <div className=\"workChoiceContent__ListAbout__ContentText\">\r\n                    {\r\n                      texts.map((text, index) => {\r\n                        return (\r\n                          <span key={index}>\r\n                            {text.type === work.type\r\n                              ? text.text\r\n                              : ''\r\n                            }\r\n                          </span>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : ''}\r\n    </>\r\n  )\r\n}","import {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\"\r\nimport {GamePage} from \"../Game/GamePage\";\r\nimport {MenuPage} from \"../Menu/MenuPage\";\r\nimport {ProfilePage} from \"../Profile/ProfilePage\";\r\nimport {SettingsPage} from \"../Settings/SettingsPage\";\r\nimport { WorkPage } from \"../Work/WorkPage\";\r\n\r\nexport const Main = () => {\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Redirect exact from='/' to='/menu'/>\r\n          <Route path='/menu' render={() => <MenuPage /> }/>\r\n          <Route path='/work' render={() => <WorkPage /> }/>\r\n          <Route path='/game' render={() => <GamePage /> }/>\r\n          <Route path='/profile' render={() => <ProfilePage /> }/>\r\n          <Route path='/settings' render={() => <SettingsPage/> }/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport { Main } from './components/Main/Main';\nimport './styles/style.css'\n\nexport const App = () => {\n  return (\n      <div className=\"App\">\n        <Main/>\n      </div>\n  );\n}\n\nexport default App\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {gameReducer} from \"./game-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\"\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {settingsReducer} from \"./settings-reducer\";\r\nimport {newsReducer} from \"./news-reducer\";\r\nimport {worksReducer} from \"./work-reducer\";\r\nimport {stocksReducer} from \"./stocks-reducer\";\r\nimport {businessReducer} from \"./business-reducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n  gamePage: gameReducer,\r\n  profilePage: profileReducer,\r\n  settingsPage: settingsReducer,\r\n  newsPage: newsReducer,\r\n  worksPage: worksReducer,\r\n  stocksPage: stocksReducer,\r\n  businessPage: businessReducer\r\n})\r\n\r\ntype RootReduceType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReduceType>\r\n\r\ntype PropsType<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsType<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropsType<T>>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}