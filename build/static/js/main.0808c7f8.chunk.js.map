{"version":3,"sources":["redux/work-reducer.ts","components/Game/RenderPlayerSpend.tsx","redux/game-selector.ts","components/Game/RenderPlayerSpends.tsx","redux/game-reducer.ts","redux/stocks-reducer.ts","redux/stocks-selector.ts","redux/settings-reducer.ts","redux/settings-selector.ts","components/Game/RenderChart.tsx","img/businesses/cafe.jpg","img/businesses/garage.jpg","img/businesses/service.jpg","img/businesses/hotel.jpg","redux/business-reducer.ts","utils/getRandomNumber.ts","redux/news-reducer.ts","redux/business-selector.ts","redux/spends-reducer.ts","img/characters/person-1.png","img/characters/person-1-avatar.png","img/characters/person-2.png","img/characters/person-2-avatar.png","img/characters/person-3.png","img/characters/person-3-avatar.png","img/characters/person-4.png","img/characters/person-4-avatar.png","img/characters/person-5.png","img/characters/person-5-avatar.png","img/characters/person-6.png","img/characters/person-6-avatar.png","img/characters/person-7.png","img/characters/person-7-avatar.png","img/characters/person-8.png","img/characters/person-8-avatar.png","img/characters/person-9.png","img/characters/person-9-avatar.png","img/characters/person-10.png","img/characters/person-10-avatar.png","img/characters/person-11.png","img/characters/person-11-avatar.png","img/characters/person-12.png","img/characters/person-12-avatar.png","img/characters/person-13.png","img/characters/person-13-avatar.png","img/characters/person-14.png","img/characters/person-14-avatar.png","img/characters/person-15.png","img/characters/person-15-avatar.png","redux/profile-reducer.ts","redux/profile-selector.ts","components/Game/RenderTime.tsx","components/Game/RenderPlayerProfile.tsx","components/Game/SellPopup.tsx","components/Game/RenderPlayerWork.tsx","components/Game/RenderStock.tsx","components/Game/RenderPlayerStocks.tsx","components/Game/RenderPlayerNews.tsx","components/Game/RenderPlayerBank.tsx","components/Game/GamePage.tsx","redux/app-reducer.ts","components/Menu/MenuPage.tsx","components/Profile/ProfilePage.tsx","components/common/ReturnBackButton.tsx","components/Settings/SettingsPage.tsx","components/Work/WorkPage.tsx","img/rofl.jpg","components/rofl/RoflPage.tsx","components/Main/Main.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["WorkLevel","DaysToUp","Income","RenderPlayerSpend","props","className","title","price","getDaySelector","state","gamePage","day","getDayInMonthSelector","daysInMonth","getWalletSelector","wallet","getHappenedEventsSelector","spendsPage","happenedEvents","getMonthSelector","month","getMonthsSelector","months","getVictoryBalance","victoryBalance","getLoseBalance","loseBalance","getLevelSelector","level","RenderPlayerSpends","Tabs","TabPane","useDispatch","useSelector","currentMonthEvents","currentMonthPrice","useState","isHistoryShown","setIsHistoryShown","onClick","map","events","index","length","style","border","name","event","i","SET_DAY","SET_MONTH","SET_DAY_IN_MONTH","SET_WALLET","UPDATE_WALLET","SET_INCOME","UPDATE_WALLET_FROM_SPENDS","BUY_BUSINESS","SELL_BUSINESS","INIT_GAME","GET_NEWS_PAYOUT","UPDATE_BUSINESS_INCOME","SET_VICTORY_BALANCE","initialState","income","duration","actions","type","dayInMonth","payout","amount","victory","SET_STOCKS","SELL_STOCKS","UPDATE_MY_STOCKS","UPDATE_STOCKS","INDEXING_STOCKS","SET_PRICE_CHANGE_INTERVAL","RESET_MY_STOCKS","FILTER_STOCKS","REVERSE_FILTERED_STOCKS","normalPriceChange","companiesForStocks","myStocks","stocks","filteredStocks","stocksActions","stock","count","activeStock","company","timeInterval","condition","filter","value","getStocksSelector","stocksPage","getMyStocksSelector","SET_TIME_SPEED","SET_DIFFICULTY","SET_CONST_TIME_SPEED","timeSpeed","constTimeSpeed","difficulty","settingsActions","getTimeSpeedSelector","settingsPage","getDifficultySelector","getConstTimeSpeedSelector","RenderChart","dispatch","labels","forEach","labelsCopy","push","data","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","CloseOutlined","options","scales","yAxes","ticks","beginAtZero","contextMenu","RenderChartMenu","isFormShown","setIsFormShown","stocksToBuyCount","setStocksToBuyCount","stocksToBuyPrice","setStocksToBuyPrice","buyStocks","Math","round","stockCopy","filteredStocksCopy","fStock","fIndex","updateStocksCount","myStocksCopy","newStock","oldPrice","addStocks","display","min","max","onChange","textAlign","disabled","SET_BUSINESSES","ADD_TO_MY_BUSINESSES","REMOVE_FROM_MY_BUSINESSES","RESET_MY_BUSINESSES","myBusinesses","businesses","companiesForBusiness","img","businessImg1","businessImg2","businessImg3","businessImg4","businessActions","getRandomNumber","k","floor","random","ADD_NEWS","ABLE_TO_SHOW","SET_TO_ARCHIVE","RESET_NEWS","news","archive","newsTypes","ableToShow","variants","variantType","titles","newsActions","types","getBusinessesSelector","businessPage","getMyBusinessesSelector","WEEK_SPEND","INDEX_PRICE","RESET_CURRENT_MONTHS","initialEvents","Array","spendsActions","indexPrice","SET_PROFILE","SET_TAX","UPDATE_EXPENSES","PAY_FOR_EXPENSES","SET_CREDIT","UPDATE_INCOME","persons","age","saving","salary","work","expenses","remainPrice","startPrice","payment","person1Photo","avatar","person1Avatar","person2Photo","person2Avatar","person3Photo","person3Avatar","person4Photo","person4Avatar","person5Photo","person5Avatar","person6Photo","person6Avatar","person7Photo","person7Avatar","person8Photo","person8Avatar","person9Photo","person9Avatar","person10Photo","person10Avatar","person11Photo","person11Avatar","person12Photo","person12Avatar","person13Photo","person13Avatar","person14Photo","person14Avatar","person15Photo","person15Avatar","profile","tax","profileActions","getPersonSelector","profilePage","getTaxSelector","getExpensesSelector","RenderTime","newsTypeArray","newsPage","companies","activeDay","activeMonth","replace","useEffect","generateNews","newsType","companyIndex","getState","newsCopy","typeOfNews","typeOfPayout","titleIndex","Number","toFixed","growType","console","log","businessType","incomeAmount","setNewsThunk","happenedEventsCopy","currentMonthEventsCopy","currentMonthPriceCopy","priceToSpend","Item","RenderPlayerProfile","time","onChangeTime","styleName","width","strokeWidth","percent","strokeColor","trailColor","format","src","size","message","warning","onMouseOver","color","isEndOfGame","alt","defaultValue","SellPopup","stocksToSellCount","setStocksToSellCount","setIsStockToSell","htmlFor","RenderPlayerWork","table","expense","fontWeight","textTransform","RenderStock","risk","RiseOutlined","FallOutlined","setActiveStock","RenderMyStock","ArrowUpOutlined","ArrowDownOutlined","setMyActiveStock","RenderPlayerStocks","Select","Option","isReverse","setIsReverse","filterStocks","content","Group","e","target","direction","placeholder","trigger","alignItems","SlidersOutlined","fontSize","RenderPlayerNews","defaultActiveKey","centered","tab","newsBlock","isArchive","RenderNewsBlock","some","s","RenderPlayerBank","creditPercentage","payoutPercentage","creditAmount","setCreditAmount","finalPayout","setFinalPayout","monthPayout","setMonthPayout","activeExpense","setActiveExpense","expenseAmount","setExpenseAmount","payForExpenses","expenseType","expensesCopy","takeCredit","takeCreditThunk","prefix","GamePage","myActiveStock","isStockToSell","setIsChangeWorkShown","setIsEndOfGame","showExitModal","setShowExitModal","setTimeout","openNotification","text","notification","open","description","onCancel","visible","footer","to","overflowCount","active","position","top","left","SET_INSTRUCTION_COMPLETED","isInstructionCompleted","appActions","MenuPage","isModalVisible","setIsModalVisible","isChangeModalVisible","setIsChangeModalVisible","app","info","handleOk","handleChangesOk","onOk","okText","href","HeartTwoTone","twoToneColor","ProfilePage","activePerson","setActivePerson","timesSpeed","taxesSummary","optionsTime","difficultPrice","person","setProfile","optionType","ReturnBackButton","link","SettingsPage","WorkPage","worksPage","currentWork","RoflPage","Main","basename","process","exact","from","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_WORK","SET_DAYS_WORKED","SET_WORK_LEVEL","rootReducer","combineReducers","action","indexWallet","indexIncome","expensesSummary","archiveCopy","archiveNews","splice","daysWorked","days","initialStocksCopy","priceChangeInterval","maxPrice","minPrice","myStocksCopyToSell","stocksCopy","filteredIndexingStocksCopy","indexCount","indexCondition","indexPriceCount","myStock","stocksPriceChangeCopy","includes","toLowerCase","sort","prev","next","reverse","businessesCopy","business","deal","myBusinessCopy","myBusiness","myBusinessesCopy","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0808c7f8.chunk.js","sourcesContent":["import {InferActionsType} from \"./store\";\r\n\r\n\r\nconst SET_WORK = 'work/SET_WORK'\r\nconst SET_DAYS_WORKED = 'work/SET_DAYS_WORKED'\r\nconst SET_WORK_LEVEL = 'work/SET_WORK_LEVEL'\r\n\r\n// уровень работы . . .\r\nexport enum WorkLevel {\r\n  start = 'start',\r\n  middle = 'middle',\r\n  pro = 'pro',\r\n  senior = 'senior'\r\n}\r\n// кол-во дней до повышения . . .\r\nexport enum DaysToUp {\r\n  start = 125,\r\n  middle = 200,\r\n  pro = 250\r\n}\r\n// увелечение зп\r\nexport enum Income {\r\n  start = 0,\r\n  middle = 15,\r\n  pro = 20,\r\n  senior = 25\r\n}\r\n\r\nlet initialState = {\r\n  // текущая работа игрока . . .\r\n  currentWork: null as null | Work,\r\n\r\n}\r\n\r\nexport type InitialWorkStateType = typeof initialState\r\n\r\nexport const worksReducer = (state = initialState, action: WorksActionsType): InitialWorkStateType => {\r\n  switch (action.type) {\r\n    case SET_WORK:\r\n      return {\r\n        ...state,\r\n        currentWork: action.work,\r\n      }\r\n    case SET_DAYS_WORKED:\r\n      return {\r\n        ...state,\r\n        currentWork: {\r\n          ...state.currentWork,\r\n          daysWorked: action.days\r\n        } as Work\r\n      }\r\n    case SET_WORK_LEVEL:\r\n      return {\r\n        ...state,\r\n        currentWork: {\r\n          ...state.currentWork,\r\n          level: action.level\r\n        } as Work\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const worksActions = {\r\n  setWork: (work: Work) => ({type: SET_WORK, work} as const),\r\n  setDaysWorked: (days: number) => ({type: SET_DAYS_WORKED, days} as const),\r\n  setWorkLevel: (level: number) => ({type: SET_WORK_LEVEL, level} as const)\r\n}\r\n\r\nexport type WorkOptions = {\r\n  level: WorkLevelType\r\n  title: string\r\n  income: WorkIncomeType\r\n  daysToUp: WorkDaysToUpType\r\n}\r\nexport type Work = {\r\n  level: number\r\n  daysWorked: number\r\n  startSalary: number\r\n  avatar: string\r\n  options: WorkOptions[]\r\n}\r\n\r\nexport type WorkLevelType = 'start' | 'middle' | 'pro' | 'senior'\r\nexport type WorkIncomeType = 0 | 15 | 20 | 25\r\nexport type WorkDaysToUpType = 125 | 200 | 250\r\n\r\ntype WorksActionsType = InferActionsType<typeof worksActions>\r\n\r\n","import React, {FC} from \"react\";\r\n\r\ntype RenderPlayerSpendType = {\r\n  title: string\r\n  price: number\r\n  index: number\r\n}\r\nexport const RenderPlayerSpend: FC<RenderPlayerSpendType> = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"gameSpendBlock__Item\">\r\n        <div className=\"gameSpendBlock__ItemTitle\"><b>{props.title}</b></div>\r\n        <div className=\"gameSpendBlock__ItemPrice\">${props.price}</div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {AppStateType} from \"./store\";\r\n\r\n// day return\r\nexport const getDaySelector = (state: AppStateType) => {\r\n  return state.gamePage.day\r\n}\r\nexport const getDayInMonthSelector = (state: AppStateType) => {\r\n  return state.gamePage.daysInMonth\r\n}\r\n// wallet return\r\nexport const getWalletSelector = (state: AppStateType) => {\r\n  return state.gamePage.wallet\r\n}\r\n// income return\r\nexport const getIncomeSelector = (state: AppStateType) => {\r\n  return state.gamePage.income\r\n}\r\n// happenedEvents return\r\nexport const getHappenedEventsSelector = (state: AppStateType) => {\r\n  return state.spendsPage.happenedEvents\r\n}\r\n// month return (current month)\r\nexport const getMonthSelector = (state: AppStateType) => {\r\n  return state.gamePage.month\r\n}\r\n// months return (array of months)\r\nexport const getMonthsSelector = (state: AppStateType) => {\r\n  return state.gamePage.months\r\n}\r\n// victoryBalance return\r\nexport const getVictoryBalance = (state: AppStateType) => {\r\n  return state.gamePage.victoryBalance\r\n}\r\n// loseBalance return\r\nexport const getLoseBalance = (state: AppStateType) => {\r\n  return state.gamePage.loseBalance\r\n}\r\n// player level return\r\nexport const getLevelSelector = (state: AppStateType) => {\r\n  return state.gamePage.level\r\n}\r\n\r\n","import React, {FC, useState} from \"react\";\r\nimport {RenderPlayerSpend} from \"./RenderPlayerSpend\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getHappenedEventsSelector, getMonthSelector, getMonthsSelector} from \"../../redux/game-selector\";\r\nimport {Button, Tabs} from \"antd\";\r\nimport {eventType} from \"../../redux/spends-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport const RenderPlayerSpends: FC = (props) => {\r\n  const dispatch = useDispatch()\r\n  const month = useSelector(getMonthSelector)\r\n  const months = useSelector(getMonthsSelector)\r\n  const happenedEvents = useSelector(getHappenedEventsSelector)\r\n  const currentMonthEvents = useSelector((state: AppStateType) => state.spendsPage.currentMonthEvents)\r\n  const currentMonthPrice = useSelector((state: AppStateType) => state.spendsPage.currentMonthPrice)\r\n\r\n  const [isHistoryShown, setIsHistoryShown] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <div className='gameSpend bannerBack'>\r\n        {/*<input style={{zIndex: 10}} onChange={(e) => dispatch(actions.setWallet(Number(e.target.value)))} type=\"text\" />*/}\r\n        <Button className='gameSpendButton' onClick={() => setIsHistoryShown(!isHistoryShown)}>\r\n          {!isHistoryShown ? 'Посмотреть историю' : 'Закрыть историю'}\r\n        </Button>\r\n        {!isHistoryShown\r\n          ? <>\r\n            <div className=\"gameSpendBlock\">\r\n              <div className=\"gameSpendBlock__Title\">\r\n                <b>{months[month].name}</b>\r\n              </div>\r\n              <div className=\"gameSpendBlock__Items\">\r\n                  {currentMonthEvents.map((event: eventType, index: number) => {\r\n                    return (\r\n                      <>\r\n                        <RenderPlayerSpend key={index} title={event.title} price={event.price} index={index}/>\r\n                      </>\r\n                    )\r\n                  })}\r\n              </div>\r\n              <div className=\"gameSpendBlock__Footer\">\r\n                <div className=\"gameSpendBlock__FooterTitle\">\r\n                  Общая сумма:\r\n                </div>\r\n                <span className=\"gameSpendBlock__FooterPrice\">\r\n                <b>${currentMonthPrice}</b>\r\n              </span>\r\n              </div>\r\n            </div>\r\n           </>\r\n          : <>\r\n            <div className=\"gameSpendBlocks\">\r\n              {happenedEvents.map((events: any, index: number) => {\r\n                return (\r\n                  <>\r\n                    {events.length > 0\r\n                      ? <div key={index} className=\"gameSpendBlock\" style={month === index ? {border: '2px solid crimson'} : {}}>\r\n                        <div className=\"gameSpendBlock__Title\">\r\n                          <b>{months[index].name}</b>\r\n                        </div>\r\n                        <div className=\"gameSpendBlock__Items\">\r\n                          {events.map((event: any, i: number) =>\r\n                            <RenderPlayerSpend\r\n                              key={i}\r\n                              title={event.title}\r\n                              price={event.price}\r\n                              index={i}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      : ''\r\n                    }\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n            </>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}","import {InferActionsType} from \"./store\";\r\nimport {DifficultyType} from \"./settings-reducer\";\r\n\r\n// time . . .\r\nconst SET_TIME_SPEED = 'gamePage/SET_TIME_SPEED'\r\nconst SET_DAY = 'gamePage/SET_DAY'\r\nconst SET_MONTH = 'gamePage/SET_MONTH'\r\nconst SET_DAY_IN_MONTH = 'gamePage/SET_DAY_IN_MONTH'\r\n\r\n// wallet . . .\r\nconst SET_WALLET = 'gamePage/SET_WALLET'\r\nconst UPDATE_WALLET = 'gamePage/UPDATE_WALLET'\r\nconst SET_INCOME = 'gamePage/SET_INCOME'\r\n\r\nconst UPDATE_WALLET_FROM_SPENDS = 'gamePage/UPDATE_WALLET_FROM_SPENDS'\r\n\r\nconst BUY_BUSINESS = 'gamePage/BUY_BUSINESS'\r\nconst SELL_BUSINESS = 'gamePage/SELL_BUSINESS'\r\n\r\nconst INIT_GAME = 'gamePage/INIT_GAME'\r\n\r\nconst GET_NEWS_PAYOUT = 'gamePage/GET_NEWS_PAYOUT'\r\nconst UPDATE_BUSINESS_INCOME = 'gamePage/UPDATE_BUSINESS_INCOME'\r\n\r\nconst SET_VICTORY_BALANCE = 'gamePage/SET_VICTORY_BALANCE'\r\n\r\nlet initialState = {\r\n  // счётчик дней . . .\r\n  day: 1,\r\n  // уровень персонажа\r\n  level: 1,\r\n  // день месяца\r\n  daysInMonth: 0,\r\n  // текущий месяц игры . . .\r\n  month: 0,\r\n  // баланс игрока . . .\r\n  wallet: 0,\r\n  // доход игрока . . .\r\n  income: 0,\r\n  // баланс необходимый для победы / возможно потом его можно менять . . .\r\n  victoryBalance: 15000,\r\n  // баланс для пораженя\r\n  loseBalance: 0,\r\n  // месяцы игры . . .\r\n  months: [\r\n    {name: 'Январь', duration: 31}, {name: 'Февраль', duration: 28}, {name: 'Март', duration: 31},\r\n    {name: 'Апрель', duration: 30}, {name: 'Май', duration: 31}, {name: 'Июнь', duration: 30},\r\n    {name: 'Июль', duration: 31}, {name: 'Август', duration: 31}, {name: 'Сентябрь', duration: 30},\r\n    {name: 'Октябрь', duration: 31}, {name: 'Ноябрь', duration: 30}, {name: 'Декабрь', duration: 31},\r\n  ],\r\n}\r\n\r\nexport type InitialGameStateType = typeof initialState\r\n\r\nexport const gameReducer = (state = initialState, action: ActionsType): InitialGameStateType => {\r\n  switch (action.type) {\r\n    // обновляем счётчик дней\r\n    case SET_DAY:\r\n      return {\r\n        ...state,\r\n        day: action.day\r\n      }\r\n    // обновляем месяц\r\n    case SET_MONTH:\r\n      return {\r\n        ...state,\r\n        month: action.month\r\n      }\r\n    // обновляем баланс кошелька\r\n    case SET_DAY_IN_MONTH:\r\n      return {\r\n        ...state,\r\n        daysInMonth: action.dayInMonth\r\n      }\r\n    // установка баланса\r\n    case SET_WALLET:\r\n      return {\r\n        ...state,\r\n        wallet: action.wallet\r\n      }\r\n    // установление зарплаты\r\n    case SET_INCOME:\r\n      return {\r\n        ...state,\r\n        income: action.income\r\n      }\r\n    // обновление баланса\r\n    case UPDATE_WALLET:\r\n      return {\r\n        ...state,\r\n        wallet: Math.round(state.wallet + state.income + action.wallet)\r\n      }\r\n    // обновление кошелька после новостей\r\n    case GET_NEWS_PAYOUT:\r\n\r\n      let indexWallet = 0\r\n      let indexIncome = 0\r\n\r\n      switch (action.payout) {\r\n        case \"one\":\r\n          indexWallet += action.amount\r\n          break\r\n        case \"regular\":\r\n          indexIncome += action.amount\r\n          break\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        wallet: state.wallet + indexWallet,\r\n        income: state.income + indexIncome\r\n      }\r\n    // обновляем данные по кошельку после покупки бизнесса\r\n    case BUY_BUSINESS:\r\n      return {\r\n        ...state,\r\n        wallet: Math.round(state.wallet - action.price),\r\n        income: Math.round(state.income + action.income)\r\n      }\r\n    // продажа бизнесса\r\n    case SELL_BUSINESS:\r\n      return {\r\n        ...state,\r\n        wallet: Math.round(state.wallet + action.price),\r\n        income: Math.round(state.income - action.income)\r\n      }\r\n    // обновление дохода бизнесса . . .\r\n    case UPDATE_BUSINESS_INCOME:\r\n      return {\r\n        ...state,\r\n        income: state.income + action.income\r\n      }\r\n    // обновление кошелька из-за затрат\r\n    case UPDATE_WALLET_FROM_SPENDS:\r\n      return {\r\n        ...state,\r\n        wallet: state.wallet - action.wallet\r\n      }\r\n    // выбор стартового баланса для победы . . .\r\n    case SET_VICTORY_BALANCE:\r\n      return {\r\n        ...state,\r\n        victoryBalance: action.victory\r\n      }\r\n    // стартовая инициализация игры . . .\r\n    case INIT_GAME:\r\n      return {\r\n        ...state,\r\n        day: 1,\r\n        level: 1,\r\n        daysInMonth: 0,\r\n        month: 0,\r\n        wallet: 0,\r\n        income: 0,\r\n        // happenedEvents: Array(12).fill([] as eventType[])\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  // actions даты и времени . . .\r\n  setDay: (day: number) => ({type: SET_DAY, day} as const),\r\n  setMonth: (month: number) => ({type: SET_MONTH, month} as const),\r\n  setDayInMonth: (dayInMonth: number) => ({type: SET_DAY_IN_MONTH, dayInMonth} as const),\r\n  // actions для кошелька . . .\r\n  setWallet: (wallet: number) => ({type: SET_WALLET, wallet} as const),\r\n  updateWallet: (wallet: number) => ({type: UPDATE_WALLET, wallet} as const),\r\n  setIncome: (income: number) => ({type: SET_INCOME, income} as const),\r\n  updateWalletFromSpends: (wallet: number) => ({type: UPDATE_WALLET_FROM_SPENDS, wallet} as const),\r\n  getNewsPayout: (payout: 'one' | 'regular', amount: number) => ({type: GET_NEWS_PAYOUT, payout, amount} as const),\r\n\r\n  setVictoryBalance: (victory: number) => ({type: SET_VICTORY_BALANCE, victory} as const),\r\n  // actions для бизнесса . . .\r\n  buyBusiness: (price: number, income: number) => ({type: BUY_BUSINESS, price, income} as const),\r\n  sellBusiness: (price: number, income: number) => ({type: SELL_BUSINESS, price, income} as const),\r\n  updateBusinessIncome: (income: number) => ({type: UPDATE_BUSINESS_INCOME, income} as const),\r\n  initGame: () => ({type: INIT_GAME} as const),\r\n}\r\n\r\ntype ActionsType = InferActionsType<typeof actions>\r\n","import {InferActionsType} from \"./store\";\r\n\r\nconst SET_STOCKS = 'gamePage/SET_STOCKS'\r\nconst SELL_STOCKS = 'gamePage/SELL_STOCKS'\r\nconst UPDATE_MY_STOCKS = 'gamePage/UPDATE_MY_STOCKS'\r\nconst UPDATE_STOCKS = 'gamePage/UPDATE_STOCKS'\r\nconst INDEXING_STOCKS = 'gamePage/INDEXING_STOCKS'\r\nconst SET_PRICE_CHANGE_INTERVAL = 'gamePage/SET_PRICE_CHANGE_INTERVAL'\r\nconst RESET_MY_STOCKS = 'gamePage/RESET_MY_STOCKS'\r\nconst FILTER_STOCKS = 'gamePage/FILTER_STOCKS'\r\nconst REVERSE_FILTERED_STOCKS = 'gamePage/REVERSE_FILTERED_STOCKS'\r\nlet initialState = {\r\n  // изменение цены . . .\r\n  normalPriceChange: 3,\r\n  // список компания с акциями . . .\r\n  companiesForStocks: [\r\n    'ТрансНефтКомпани', 'ОАО ГазНефтьМагистраль',\r\n    'ОАО СтройПрибор', 'ОАО СвободнаяЭнергия',\r\n    'ОАО ТранспортСтрой', 'ОАО ЦифровыеТехнологии',\r\n    'ОАО КосмосТек', 'МашинСтрой',\r\n    'ОАО КазиноАльянс', 'СибирьТек',\r\n    'ЕвропаБизнес', 'ЗАО АлмазПродажн',\r\n    'ЗАО ПлодЛюбви', 'ОАО ТенЗдоровье',\r\n    'СтройДвор', 'АвтоМаркет', 'ИнтернетСервис',\r\n    'ОАО ЭкмоСеть', 'ОАО БыстраяДоставка', 'АэроТехнологии',\r\n    'ОАО НаСвязи',\r\n  ],\r\n  // акции в портфеле . . .\r\n  myStocks: [] as myStockType[],\r\n  // акции на рынке . . .\r\n  stocks: [] as stockType[],\r\n  // отфильтрованнае акции . . .\r\n  filteredStocks: [] as stockType[],\r\n}\r\n\r\nexport const stocksReducer = (state = initialState, action: ActionType) => {\r\n  switch (action.type) {\r\n\r\n    // первое создание акций . . .\r\n    case SET_STOCKS:\r\n      // копия массива с акциями . . .\r\n      let initialStocksCopy = [...state.stocks]\r\n      state.companiesForStocks.map(company => {\r\n        // генерируем риск . . .\r\n        let risk = Number((Math.random() * 4 + 1).toFixed(0))\r\n        // генерируем цену . . .\r\n        let price = Number((Math.random() * 150 + 15).toFixed(1))\r\n\r\n        let stock: stockType = {\r\n          // название фирмы . . .\r\n          title: company,\r\n          // количество акций на рынке . . .\r\n          count: Number((Math.random() * state.normalPriceChange * (risk + 1) + 1).toFixed(0)),\r\n          // риск акции\r\n          risk: risk,\r\n          // начальная цена . . .\r\n          price: [price],\r\n          // вероятносто того, что акция идёт вверх . . .\r\n          condition: Math.random() * 10 >= (state.normalPriceChange - 1 + risk) ? 'up' : 'down',\r\n          // должна ли рости акции всвязи с новостями . . .\r\n          priceChangeInterval: 0,\r\n          // макс цена акции\r\n          maxPrice: Number((price + Math.random() * state.normalPriceChange * (risk + 1)).toFixed(1)),\r\n          // мин цена акции\r\n          minPrice: Number((price - Math.random() * state.normalPriceChange * risk).toFixed(1)),\r\n        }\r\n        initialStocksCopy.push(stock)\r\n      })\r\n      // вывод акций в консоль для проверки . . .\r\n      console.log(initialStocksCopy)\r\n      return {\r\n        ...state,\r\n        stocks: initialStocksCopy,\r\n        filteredStocks: initialStocksCopy\r\n      }\r\n    // продажа акций . . .\r\n    case SELL_STOCKS:\r\n      let myStocksCopyToSell = [...state.myStocks]\r\n\r\n      myStocksCopyToSell[action.activeStock] = {\r\n        ...myStocksCopyToSell[action.activeStock],\r\n        count: myStocksCopyToSell[action.activeStock].count - action.count\r\n      }\r\n\r\n      if(myStocksCopyToSell[action.activeStock].count === 0) {\r\n        myStocksCopyToSell.splice(action.activeStock, 1)\r\n      }\r\n\r\n\r\n      return {\r\n        ...state,\r\n        myStocks: myStocksCopyToSell\r\n      }\r\n    // изменение цен на акции . . .\r\n    case INDEXING_STOCKS:\r\n      let stocksCopy = [...state.stocks]\r\n      let myStocksCopy = [...state.myStocks]\r\n      let filteredIndexingStocksCopy = [...state.filteredStocks]\r\n\r\n      state.stocks.map((stock, index) => {\r\n        // изменение количества акций . . .\r\n        let indexCount = Number((Math.random() * 10 - 4).toFixed(0))\r\n        // изменение состояния акций при условии, что она не подвежена новостям . . .\r\n        let indexCondition: 'up' | 'down' = stock.condition\r\n\r\n        if (stock.priceChangeInterval === 0) {\r\n          indexCondition = Math.random() * 10 >= (state.normalPriceChange - 1 + stock.risk) ? 'up' : 'down'\r\n        }\r\n        // изменение цены акции . . .\r\n        let indexPriceCount = Number((stock.risk * Number((Math.random() + 0.1).toFixed(1))).toFixed(1))\r\n\r\n        let indexPrice: number = indexCondition === 'up'\r\n          ? stock.price[stock.price.length - 1] + indexPriceCount\r\n          : stock.price[stock.price.length - 1] - indexPriceCount\r\n\r\n        indexPrice = Number(indexPrice.toFixed(1))\r\n\r\n        if (indexPrice <= 0) {\r\n          indexPrice = stock.price[stock.price.length - 1]\r\n          stocksCopy[index].priceChangeInterval = Math.round(Math.random() * 3 + 1)\r\n          indexCondition = 'up'\r\n        }\r\n\r\n        stocksCopy[index] = {\r\n          // возвращаем пред. данные . . .\r\n          ...stocksCopy[index],\r\n          // новое состояние роста акции . . .\r\n          condition: indexCondition,\r\n          // новое количество акций . . .\r\n          count: stocksCopy[index].count + indexCount > 0\r\n            ? stocksCopy[index].count + indexCount\r\n            : stocksCopy[index].count,\r\n          // обновляем сроки зависимости роста акции от новостей\r\n          priceChangeInterval: stocksCopy[index].priceChangeInterval > 0\r\n            ? stocksCopy[index].priceChangeInterval -1\r\n            : stocksCopy[index].priceChangeInterval,\r\n          // новая цена акции . . .\r\n          price: [\r\n            ...stocksCopy[index].price,\r\n            indexPrice\r\n          ]\r\n        }\r\n\r\n        // обновление цены в портфеле игрока . . .\r\n        myStocksCopy.forEach((myStock, i) => {\r\n          if(myStock.title === stock.title) {\r\n            let price = indexPrice\r\n            myStocksCopy[i] = {\r\n              ...myStocksCopy[i],\r\n              price: price,\r\n              condition: price >= myStocksCopy[i].oldPrice ? 'up' : 'down'\r\n            }\r\n          }\r\n        })\r\n\r\n        filteredIndexingStocksCopy.forEach((fStock, fIndex) => {\r\n          if (fStock.title === stock.title) {\r\n            filteredIndexingStocksCopy[fIndex] = stocksCopy[index]\r\n          }\r\n        })\r\n\r\n      })\r\n      // console.log('================================')\r\n      // console.log('обновленные акции')\r\n      // console.log(stocksCopy)\r\n      return {\r\n        ...state,\r\n        stocks: stocksCopy,\r\n        myStocks: myStocksCopy,\r\n        filteredStocks: filteredIndexingStocksCopy\r\n      }\r\n    // обновление цен наших акций . . .\r\n    case SET_PRICE_CHANGE_INTERVAL:\r\n      let stocksPriceChangeCopy = [...state.stocks]\r\n      stocksPriceChangeCopy.map((stock, index) => {\r\n        // находим нужную акцию\r\n        // сетаем кол-во недель и тип роста\r\n        if (stock.title === action.company) {\r\n          console.log(stock)\r\n          stocksPriceChangeCopy[index] = {\r\n            ...stock,\r\n            condition: action.condition,\r\n            priceChangeInterval: action.timeInterval\r\n          }\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        stocks: stocksPriceChangeCopy\r\n      }\r\n    // сет моих акций . . .\r\n    case UPDATE_MY_STOCKS:\r\n      return {\r\n        ...state,\r\n        myStocks: action.myStocks\r\n      }\r\n    // обновление акций . . .\r\n    case UPDATE_STOCKS:\r\n      return {\r\n        ...state,\r\n        stocks: action.stocks,\r\n        filteredStocks: action.filteredStocks\r\n      }\r\n    // обнуление акций персонажа . . .\r\n    case RESET_MY_STOCKS:\r\n      return {\r\n        ...state,\r\n        myStocks: [] as myStockType[]\r\n      }\r\n    // фильтр акций . . .\r\n    case FILTER_STOCKS:\r\n      let filteredStocksCopy = [] as stockType[]\r\n\r\n      switch (action.filter) {\r\n        case \"title\":\r\n          if (action.value === '') {\r\n            filteredStocksCopy = [...state.stocks]\r\n          } else {\r\n            state.stocks.forEach(stock => {\r\n              if (stock.title.includes(action.value) || stock.title.toLowerCase().includes(action.value)) filteredStocksCopy = [...filteredStocksCopy, stock]})\r\n          }\r\n          break\r\n\r\n        case \"condition\":\r\n          filteredStocksCopy = state.filteredStocks.sort((prev, next) => {\r\n            if (prev.condition === 'up' && next.condition === 'down') {\r\n              return -1\r\n            }\r\n            if (prev.condition === 'down' && next.condition === 'up') {\r\n              return 1\r\n            }\r\n            return 0\r\n          })\r\n          break\r\n\r\n        case \"price\":\r\n          filteredStocksCopy = state.stocks.sort((prev, next) => prev.price[prev.price.length - 1] - next.price[next.price.length - 1])\r\n          break\r\n\r\n        case \"count\":\r\n          filteredStocksCopy = state.stocks.sort((prev, next) => prev.count - next.count)\r\n          break\r\n\r\n        case \"risk\":\r\n          filteredStocksCopy = state.stocks.sort((prev, next) => prev.risk - next.risk)\r\n          break\r\n\r\n        case \"none\":\r\n          filteredStocksCopy = [...state.stocks]\r\n          break\r\n\r\n        default:\r\n          break\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filteredStocks: filteredStocksCopy\r\n      }\r\n    // изменить последовательность . . .\r\n    case REVERSE_FILTERED_STOCKS:\r\n      return {\r\n        ...state,\r\n        filteredStocks: [...state.filteredStocks.reverse()]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const stocksActions = {\r\n\r\n  setStocks: () => ({type: SET_STOCKS} as const),\r\n  indexingStocks: () => ({type: INDEXING_STOCKS} as const),\r\n  updateMyStocks: (myStocks: myStockType[]) => ({type: UPDATE_MY_STOCKS, myStocks} as const),\r\n  updateStocks: (stocks: stockType[], filteredStocks: stockType[]) => ({type: UPDATE_STOCKS, stocks, filteredStocks} as const),\r\n  sellStocks: (stock: myStockType, count: number, activeStock: number) => ({type: SELL_STOCKS, stock, count, activeStock} as const),\r\n  setPriceChangeInterval: (company: string, timeInterval: number, condition: 'up' | 'down') => ({type: SET_PRICE_CHANGE_INTERVAL, company, timeInterval, condition} as const),\r\n  resetMyStocks: () => ({type: RESET_MY_STOCKS} as const),\r\n  filterStocks: (filter: filterType, value: string) => ({type: FILTER_STOCKS, filter, value} as const),\r\n  reverseFilteredStocks: () => ({type: REVERSE_FILTERED_STOCKS} as const)\r\n\r\n}\r\n\r\nexport type stockType = {\r\n  title: string\r\n  count: number\r\n  risk: number\r\n  price: number[]\r\n  condition: 'up' | 'down'\r\n  priceChangeInterval: number\r\n  maxPrice: number\r\n  minPrice: number\r\n}\r\nexport type myStockType = {\r\n  title: string\r\n  price: number\r\n  oldPrice: number\r\n  count: number\r\n  condition: 'up' | 'down'\r\n}\r\n// виды фильтров . . .\r\nexport type filterType = 'price' | 'condition' | 'title' | 'count' | 'none' | 'risk'\r\ntype ActionType = InferActionsType<typeof stocksActions>","// stocks return\r\nimport {AppStateType} from \"./store\";\r\n\r\nexport const getStocksSelector = (state: AppStateType) => {\r\n  return state.stocksPage.stocks\r\n}\r\n// myStocks return\r\nexport const getMyStocksSelector = (state: AppStateType) => {\r\n  return state.stocksPage.myStocks\r\n}","import {InferActionsType} from \"./store\";\r\n\r\nconst SET_TIME_SPEED = 'settingsPage/SET_TIME_SPEED'\r\nconst SET_DIFFICULTY = 'settingsPage/SET_DIFFICULTY'\r\nconst SET_CONST_TIME_SPEED = 'settingsPage/SET_CONST_TIME_SPEED'\r\n\r\nlet initialState = {\r\n  // скорость игры . . .\r\n  timeSpeed: 4,\r\n  // константа времени . . .\r\n  constTimeSpeed: 4,\r\n  // сложность игры . . .\r\n  difficulty: 'легко' as DifficultyType\r\n}\r\n\r\nexport type InitialSettingsStateType = typeof initialState\r\n\r\nexport const settingsReducer = (state = initialState, action: ProfileActionsType): InitialSettingsStateType => {\r\n  switch (action.type) {\r\n    case SET_TIME_SPEED:\r\n      return {\r\n        ...state,\r\n        timeSpeed: action.timeSpeed\r\n      }\r\n    case SET_CONST_TIME_SPEED:\r\n      return {\r\n        ...state,\r\n        constTimeSpeed: action.constTimeSpeed\r\n      }\r\n    case SET_DIFFICULTY:\r\n      return {\r\n        ...state,\r\n        difficulty: action.difficulty\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const settingsActions = {\r\n  setTimeSpeed: (timeSpeed: number) => ({type: SET_TIME_SPEED, timeSpeed} as const),\r\n  setConstTimeSpeed: (constTimeSpeed: number) => ({type: SET_CONST_TIME_SPEED, constTimeSpeed} as const),\r\n  setDifficulty: (difficulty: DifficultyType) => ({type: SET_DIFFICULTY, difficulty} as const),\r\n}\r\n\r\nexport type DifficultyType = 'легко' | 'средне' | 'сложно'\r\n\r\ntype ProfileActionsType = InferActionsType<typeof settingsActions>\r\n\r\n","import {AppStateType} from \"./store\";\r\n\r\n// timeSpeed return\r\nexport const getTimeSpeedSelector = (state: AppStateType) => {\r\n  return state.settingsPage.timeSpeed\r\n}\r\n\r\nexport const getDifficultySelector = (state: AppStateType) => {\r\n  return state.settingsPage.difficulty\r\n}\r\n\r\nexport const getConstTimeSpeedSelector = (state: AppStateType) => {\r\n  return state.settingsPage.constTimeSpeed\r\n}","import React, {FC, SetStateAction, useState} from \"react\";\r\nimport {Button, InputNumber} from \"antd\";\r\nimport {CloseOutlined} from \"@ant-design/icons\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getWalletSelector} from \"../../redux/game-selector\";\r\nimport {myStockType, stocksActions, stockType} from \"../../redux/stocks-reducer\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {getMyStocksSelector, getStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getConstTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nexport type RenderChartType = {\r\n  setIsHistoryShown: SetStateAction<any>\r\n  stock: stockType\r\n}\r\n\r\n\r\nexport const RenderChart: FC<RenderChartType> = (props) => {\r\n  const dispatch = useDispatch()\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n\r\n  const Months = [\r\n    'Январь', '', '', '', 'Февраль', '', '', '', 'Март', '', '', '',\r\n    'Апрель', '', '', '', 'Май', '', '', '', 'Июнь', '', '', '',\r\n    'Июль', '', '', '', 'Август', '', '', '', 'Сентябрь', '', '', '',\r\n    'Октябрь', '', '', '', 'Ноябрь', '', '', '', 'Декабрь', '', '', '',\r\n  ]\r\n  let labels: any[] = []\r\n\r\n  // TODO настройка показа графика(неделя / месяц / год / все время)\r\n\r\n  props.stock.price.forEach((price, index) => {\r\n    let labelsCopy = [...labels]\r\n    if(props.stock.price.length > 48 && index < props.stock.price.length - 48) {\r\n      return\r\n    }\r\n\r\n    labelsCopy.push(price)\r\n    labels = labelsCopy\r\n  })\r\n\r\n\r\n  const data = {\r\n    labels: Months,\r\n    datasets: [\r\n      {\r\n        label: 'цена за шт.',\r\n        data: labels,\r\n        fill: false,\r\n        // сглаживание . . .\r\n        lineTension: 0.4,\r\n        // цвета . . .\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.8)',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 0,\r\n        pointHitRadius: 10,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"chartPopup\">\r\n        <div className=\"chartPopupBlock\">\r\n          <div className=\"chartPopupBlock__Close\" onClick={() => {\r\n            props.setIsHistoryShown(false)\r\n            onChangeTime(timeSpeed)\r\n          }}>\r\n            <CloseOutlined/>\r\n          </div>\r\n          <div className=\"chartPopupBlock__Title\">\r\n            <div>График с ценой на акции компании:</div>\r\n            <b>{props.stock.title}</b>\r\n          </div>\r\n          {/* рисуем график с ценой на акции . . . */}\r\n\r\n          <Line data={data} options={options} title='цена акций' contextMenu={'Привет'} />\r\n\r\n          {/*<LineChart width={600} height={250} data={data}>*/}\r\n          {/*  <Line type=\"monotone\" dataKey=\"price\"/>*/}\r\n          {/*  /!*<CartesianGrid stroke=\"#ccc\" strokeDasharray=\"10 10\"/>*!/*/}\r\n          {/*  <XAxis dataKey=\"name\"/>*/}\r\n          {/*  <YAxis/>*/}\r\n          {/*  <Tooltip/>*/}\r\n          {/*</LineChart>*/}\r\n\r\n          {/*<Line data={data} options={options} className='chartPopupBlock__Chart'/>*/}\r\n          <RenderChartMenu stock={props.stock} setIsHistoryShown={props.setIsHistoryShown}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\ntype RenderChartMenuType = {\r\n  stock: stockType\r\n  setIsHistoryShown: SetStateAction<any>\r\n}\r\n\r\nexport const RenderChartMenu: FC<RenderChartMenuType> = (props) => {\r\n\r\n\r\n  const wallet = useSelector(getWalletSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n  // массив с акциями . . .\r\n  const stocks = useSelector(getStocksSelector)\r\n\r\n  const filteredStocks = useSelector((state: AppStateType) => state.stocksPage.filteredStocks)\r\n  // массив купленных акций . . .\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n  const [isFormShown, setIsFormShown] = useState(false)\r\n  const [stocksToBuyCount, setStocksToBuyCount] = useState(1)\r\n  const [stocksToBuyPrice, setStocksToBuyPrice] = useState(props.stock.price[props.stock.price.length - 1])\r\n\r\n  // при покупке акции обновляем оставшееся её количество . . .\r\n  const updateStocksCount = () => {\r\n    let stockCopy = [...stocks]\r\n    let filteredStocksCopy = [...filteredStocks]\r\n    stockCopy.forEach((stock, index) => {\r\n      if (stock.title === props.stock.title) {\r\n        stockCopy[index] = {\r\n          ...stockCopy[index],\r\n          count: stockCopy[index].count - stocksToBuyCount\r\n        }\r\n        // TODO\r\n        filteredStocksCopy.map((fStock, fIndex) => {\r\n          if (fStock.title === props.stock.title) {\r\n            filteredStocksCopy[fIndex] = {\r\n              ...filteredStocksCopy[fIndex],\r\n              count: filteredStocksCopy[fIndex].count - stocksToBuyCount\r\n            }\r\n          }\r\n        })\r\n        // filteredStocksCopy[index] = {\r\n        //   ...filteredStocksCopy[index],\r\n        //   count: filteredStocksCopy[index].count - stocksToBuyCount\r\n        // }\r\n      }\r\n    })\r\n    // обновляем данные по количеству акций . . .\r\n    dispatch(stocksActions.updateStocks(stockCopy, filteredStocksCopy))\r\n  }\r\n\r\n  // покупаем акцию и добовляем её в портфель . . .\r\n  const addStocks = (stock: stockType) => {\r\n    let myStocksCopy = [...myStocks]\r\n\r\n    let newStock: myStockType = {\r\n      title: stock.title,\r\n      price: stock.price[stock.price.length - 1],\r\n      count: stocksToBuyCount,\r\n      oldPrice: stock.price[stock.price.length - 1],\r\n      condition: stock.condition\r\n    }\r\n\r\n    myStocksCopy = [...myStocksCopy, newStock]\r\n\r\n    dispatch(stocksActions.updateMyStocks(myStocksCopy))\r\n  }\r\n\r\n  const buyStocks = () => {\r\n    dispatch(actions.setWallet(Math.round(wallet - stocksToBuyPrice)))\r\n    setStocksToBuyCount(0)\r\n    setStocksToBuyPrice(0)\r\n    updateStocksCount()\r\n    addStocks(props.stock)\r\n  }\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='chartPopupBlock__Menu'>\r\n        <div>\r\n          <button className=\"chartPopupBlock__Button\" onClick={() => setIsFormShown(true)}>\r\n            Купить акцию\r\n          </button>\r\n        </div>\r\n        <div style={isFormShown ? {display: \"block\"} : {display: \"none\"}}>\r\n          <hr/>\r\n          Доступных акций для покупки - <b>{props.stock.count}</b>\r\n          <div>\r\n            <InputNumber min={0} max={props.stock.count} value={stocksToBuyCount} onChange={(value) => {\r\n              setStocksToBuyCount(value)\r\n              setStocksToBuyPrice(value * props.stock.price[props.stock.price.length - 1])\r\n            }}/>\r\n          </div>\r\n          <div>\r\n            Стоимость покупки акций: <b>{stocksToBuyPrice}</b>\r\n          </div>\r\n          <div\r\n            style={stocksToBuyCount > 0\r\n              ? {display: 'block', textAlign: 'center'}\r\n              : {display: 'none', textAlign: 'center'}\r\n            }>\r\n            <hr/>\r\n            <Button disabled={!(stocksToBuyPrice <= wallet) || props.stock.count <= 0} onClick={() => {\r\n\r\n              // возвращаем скорость времени\r\n              onChangeTime(timeSpeed)\r\n\r\n              buyStocks()\r\n              props.setIsHistoryShown(false)\r\n            }}>\r\n              Купить\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/cafe.6b4a7055.jpg\";","export default __webpack_public_path__ + \"static/media/garage.81ed1d60.jpg\";","export default __webpack_public_path__ + \"static/media/service.2c5d60b8.jpg\";","export default __webpack_public_path__ + \"static/media/hotel.d345d3ac.jpg\";","import businessImg1 from './../img/businesses/cafe.jpg'\r\nimport businessImg2 from './../img/businesses/garage.jpg'\r\nimport businessImg3 from './../img/businesses/service.jpg'\r\nimport businessImg4 from './../img/businesses/hotel.jpg'\r\nimport {AppStateType, InferActionsType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actions} from \"./game-reducer\";\r\n\r\nconst SET_BUSINESSES = 'businessPage/SET_BUSINESSES'\r\nconst ADD_TO_MY_BUSINESSES = 'businessPage/ADD_TO_MY_BUSINESSES'\r\nconst REMOVE_FROM_MY_BUSINESSES = 'businessPage/REMOVE_FROM_MY_BUSINESSES'\r\nconst UPDATE_BUSINESS_INCOME = 'businessPage/UPDATE_BUSINESS_INCOME'\r\nconst RESET_MY_BUSINESSES = 'businessPage/RESET_MY_BUSINESSES'\r\n\r\nlet initialState = {\r\n  myBusinesses: [] as BusinessType[],\r\n  // список компаний для бизнесса . . .\r\n  businesses: [] as BusinessType[],\r\n  companiesForBusiness: [\r\n    {name: 'Ресторан', img: businessImg1},\r\n    {name: 'Сдача гаража', img: businessImg2},\r\n    {name: 'Сервис', img: businessImg3},\r\n    {name: 'Мотель', img: businessImg4},\r\n  ]\r\n}\r\n\r\n\r\n\r\nexport const businessReducer = (state = initialState, action: BusinessActionType): InitialBusinessStateType => {\r\n  switch (action.type) {\r\n    // первое создание компаний для бизнесса\r\n    case SET_BUSINESSES:\r\n      let businessesCopy = [...state.businesses]\r\n      state.companiesForBusiness.map(business => {\r\n        let price = Number((Math.random() * 1000 + 500).toFixed(0))\r\n        let income = Number((price / 10 + Number((Math.random() * 49 + 1).toFixed(1))).toFixed(1))\r\n\r\n        let deal = {\r\n          name: business.name,\r\n          img: business.img,\r\n          price: price,\r\n          income: income\r\n        }\r\n        businessesCopy = [...businessesCopy, deal]\r\n      })\r\n      return {\r\n        ...state,\r\n        businesses: businessesCopy\r\n      }\r\n    // покупка бизнесса\r\n    case ADD_TO_MY_BUSINESSES:\r\n      return {\r\n        ...state,\r\n        myBusinesses: [...state.myBusinesses, action.business]\r\n      }\r\n    // продажа бизнесса\r\n    case REMOVE_FROM_MY_BUSINESSES:\r\n      let myBusinessCopy = [...state.myBusinesses]\r\n      myBusinessCopy.map((myBusiness, index) => {\r\n        if (myBusiness.name === action.business.name) {\r\n          myBusinessCopy.splice(index, 1)\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        myBusinesses: myBusinessCopy\r\n      }\r\n    // обновление дохода с бизнесса\r\n    case UPDATE_BUSINESS_INCOME:\r\n      let myBusinessesCopy = [...state.myBusinesses]\r\n      myBusinessesCopy.map((business, index) => {\r\n        if (business.name === action.title) {\r\n          myBusinessesCopy[index].income += action.income\r\n        }\r\n      })\r\n      return {\r\n        ...state,\r\n        myBusinesses: myBusinessesCopy\r\n      }\r\n    // обнуление бизнесса\r\n    case RESET_MY_BUSINESSES:\r\n      return {\r\n        ...state,\r\n        myBusinesses: [] as BusinessType[]\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const businessActions = {\r\n  setBusinesses: () => ({type: SET_BUSINESSES} as const),\r\n  addToMyBusinesses: (business: BusinessType) => ({type: ADD_TO_MY_BUSINESSES, business} as const),\r\n  removeFromMyBusiness: (business: BusinessType) => ({type: REMOVE_FROM_MY_BUSINESSES, business } as const),\r\n  updateBusinessIncome: (title: string, income: number) => ({type: UPDATE_BUSINESS_INCOME, title, income} as const),\r\n  resetMyBusinesses: () => ({type: RESET_MY_BUSINESSES} as const)\r\n}\r\n\r\n\r\ntype BusinessActionType = InferActionsType<typeof businessActions>\r\nexport type BusinessType = {\r\n  name: string\r\n  img: string\r\n  price: number\r\n  income: number\r\n}\r\nexport type InitialBusinessStateType = typeof initialState\r\ntype BusinessThunkType = ThunkAction<any, AppStateType, unknown, BusinessActionType>\r\n\r\nexport const buyBusinessThunk = (business: BusinessType):BusinessThunkType => (dispatch, getState) => {\r\n  // добавляем бизнесс в портфель игрока . . .\r\n  dispatch(businessActions.addToMyBusinesses(business))\r\n  // @ts-ignore / обновляем доход игрока . . .\r\n  dispatch(actions.buyBusiness(business.price, business.income))\r\n}\r\n\r\nexport const sellBusinessThunk = (business: BusinessType, price: number): BusinessThunkType => (dispatch, getState) => {\r\n  // удаляем бизнесс из портфеля . . .\r\n  dispatch(businessActions.removeFromMyBusiness(business))\r\n  // @ts-ignore / убираем доход и обновляем баланс\r\n  dispatch(actions.sellBusiness(price, business.income))\r\n}","export const getRandomNumber = (k: number): number => {\r\n  return Math.floor(Math.random() * k)\r\n}","import {AppStateType, InferActionsType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actions} from \"./game-reducer\";\r\nimport {stocksActions} from \"./stocks-reducer\";\r\nimport {businessActions} from \"./business-reducer\";\r\nimport {getRandomNumber} from \"../utils/getRandomNumber\";\r\n\r\nconst ADD_NEWS = 'newsPage/ADD_NEWS'\r\nconst ABLE_TO_SHOW = 'newsPage/ABLE_TO_SHOW'\r\nconst SET_TO_ARCHIVE = 'newsPage/SET_TO_ARCHIVE'\r\nconst RESET_NEWS = 'newsPage/RESET_NEWS'\r\n\r\nlet initialState = {\r\n  // массив с произошедшими новостями . . .\r\n  news: [] as newsArrayType[],\r\n  archive: [] as newsArrayType[],\r\n  newsTypes: [\r\n    {\r\n      type: 'businessNews' as NewsTypes,\r\n      ableToShow: false,\r\n      variants: [\r\n        {\r\n          variantType: 'positive' as VariantType,\r\n          events: [\r\n            {\r\n              type: 'restaurant',\r\n              titles: [\r\n                'Ваш ресторан становится популярнее, доходы растут!',\r\n                'Критики написали хороший отзыв, ждите прилив гостей!',\r\n                'Начался сезон, ждите гостей!'\r\n              ]\r\n            }, {\r\n              type: 'garage',\r\n              titles: [\r\n                'Начался сезон, плата за гараж увеличена'\r\n              ]\r\n            }, {\r\n              type: 'service',\r\n              titles: [\r\n                'Друзья рассказали о вашем сервисе другим, доход растёт!',\r\n                'Начался сезон, вы нужны автолюбителям!'\r\n              ]\r\n            }, {\r\n              type: 'hotel',\r\n              titles: [\r\n                'Популярность отеля растёт! Доход растёт',\r\n                'Критики довольны сервисом, их отзыв хорошо влияет на выручку'\r\n              ]\r\n            },\r\n          ]\r\n        }, {\r\n          variantType: 'negative' as VariantType,\r\n          events: [\r\n          {\r\n            type: 'restaurant',\r\n            titles: [\r\n              'Критики не довольны вашим обслуживанием, выручка падает',\r\n              'Сезон подошёл к концу, скоро доход будет падать'\r\n            ]\r\n          }, {\r\n            type: 'garage',\r\n            titles: [\r\n              'Сезон подходит к концу, доход падает'\r\n            ]\r\n          }, {\r\n            type: 'service',\r\n            titles: [\r\n              'Сезон подходит к концу, доход уменьшается',\r\n              'Друзья остались недовольны сервисом!'\r\n            ]\r\n          }, {\r\n            type: 'hotel',\r\n            titles: [\r\n              'Популярность отеля падает! Это плохо сказывается на доходах',\r\n              'Критикам не понравился ваш отель, их отзывы неутешительные!'\r\n            ]\r\n          }\r\n        ]\r\n        }, {\r\n          variantType: 'neutral' as VariantType,\r\n          events: [\r\n            'С вашим бизнесом всё в порядке! Так держать!',\r\n            'Иметь бизнесс всегда хорошо, продолжайте в том же духе!'\r\n          ]\r\n        }\r\n      ]\r\n    }, {\r\n      type: 'stocksNews' as NewsTypes,\r\n      ableToShow: false,\r\n      variants: [\r\n        {\r\n          variantType: 'positive' as VariantType,\r\n          titles: [\r\n            'Компания получила приличное пожертвование, вам следует проследить за ней!',\r\n            'Квартальный отчет показал хорошие результаты, доход компании вырос, скоро будет рост акций тоже!',\r\n            'Идёт активный рост компании, это хорошо влияет на её акции',\r\n            'Компания заняла лидирующие позиции в своём сегменте рынка, думаю вам стоит присмотреться к ней!',\r\n            'Брокеры предсказывают рост доходов в следующем квартале, это может повлиять на акции',\r\n            'Компанию продали под крыло большего гиганта, новое начальство знает, что надо делать!',\r\n          ]\r\n        }, {\r\n          variantType: 'negative' as VariantType,\r\n          titles: [\r\n            'Компания терпит убыдки! Скоро акции полетят вниз!',\r\n            'Квартальный отчет показал неутешительные результаты, доход компании упал!',\r\n            'В связи с последними новостями, у компании череда неудач, будьте внимательны',\r\n            'Компания потеряла лидирующие места в гонке за господством на рынке, это ударит по акциям',\r\n            'Брокеры предсказывают падение доходов в следующем квартале, следите внимательно',\r\n            'Компания расспадается и возможно уйдёт с рынка, следите за ней внимательнее',\r\n          ]\r\n        }, {\r\n        variantType: 'neutral' as VariantType,\r\n          titles: [\r\n            'На рынке акций всё спокойно! Можете не волноваться',\r\n            'Компании S&P 500 показывают хорошие квартальный результаты после карантинных падений',\r\n            'Вы можете спать спокойно, пока деньги работают за вас, а не вы за них'\r\n          ]\r\n        }\r\n      ]\r\n    }, {\r\n      type: 'personNews' as NewsTypes,\r\n      ableToShow: true,\r\n      variants: [\r\n        {\r\n          variantType: 'positive' as VariantType,\r\n          events: [\r\n            {\r\n              // одноразовые бонусы игроку\r\n              type: 'one',\r\n              titles: [\r\n                {title: 'Вы получили бонус на работе. Так держать!', amount: 100},\r\n                {title: 'Разовая выплата от правительства', amount: 150},\r\n                {title: 'Вы победели в лотерее, поздравляем!', amount: 300},\r\n                {title: 'Вам досталось наследство семьи! Потратьте его с умом', amount: 500},\r\n                {title: 'Продажа недвижимости', amount: 1000},\r\n                {title: 'Вы закрыли проект на работе и получили свою долю', amount: 250}\r\n              ]\r\n            }, {\r\n              // новости, которые будут довать буст к зарплате\r\n              type: 'regular',\r\n              titles: [\r\n                {title: 'Вы помогаете по работе коллеге, прибавка к зарплате!', amount: 70},\r\n                {title: 'Старый гараж перемонтирован под автомастерскую, ваша доля', amount: 120},\r\n                {title: 'Вы сдаёте комнату, месячная плата', amount: 300}\r\n              ]\r\n            }\r\n          ]\r\n        }, {\r\n          variantType: 'negative' as VariantType,\r\n          events: [\r\n            {\r\n              type: 'one',\r\n              titles: [\r\n                {title: 'Вы проиграли в лотерее', amount: -200},\r\n                {title: 'Онлайн казино дело такое!', amount: -100},\r\n                {title: 'От цен на бензин хочется плакать!', amount: -80}\r\n              ]\r\n            }, {\r\n              type: 'regular',\r\n              titles: [\r\n                {title: 'У вас родился ребёнок! Поздравляем!', amount: -125},\r\n                // {title: 'Стройка на даче занимает слишком много сил, и не только', amount: -70},\r\n                {title: 'Обеспечение родителей, вещь важная!', amount: -25}\r\n              ]\r\n            }\r\n          ]\r\n        }, {\r\n          variantType: 'neutral' as VariantType,\r\n          events: [\r\n            'Хочешь сбежать от повседневности — не останавливайся в развитии.',\r\n            '— Сегодня хороший день, чтобы умереть. — Ты всегда так говоришь. — Всегда так и есть.',\r\n            'Человек, живущий обычной, размеренной жизнью, быстро становится рабом собственных привычек.',\r\n            'Иногда, знаете ли, полезно съесть подгнившую селёдочную голову, чтобы оценить прелесть обычного повседневного обеда.',\r\n            'Повседневность начинается на улице, а кончается в бесконечности.',\r\n            'Взрослые -это дети, научившиеся обманывать ещё и себя.',\r\n            'Год новый, а проблемы всё те же…'\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n}\r\n\r\nexport type InitialNewsStateType = typeof initialState\r\n\r\nexport const newsReducer = (state = initialState, action: NewsActionsType): InitialNewsStateType => {\r\n  switch (action.type) {\r\n    // добавление новости в список\r\n    case ADD_NEWS:\r\n      // копия прошлых новостей . . .\r\n      return {\r\n        ...state,\r\n        news: action.news\r\n      }\r\n    // возможность показывать новости про акции / бизнесс (изначально нельзя)\r\n    case ABLE_TO_SHOW:\r\n      return {\r\n        ...state,\r\n        newsTypes: state.newsTypes.map(newsType => {\r\n          if(newsType.type === action.types) {\r\n            return {...newsType, ableToShow: true}\r\n          }\r\n          return newsType\r\n        })\r\n      }\r\n    // добавление новости в архив\r\n    case SET_TO_ARCHIVE:\r\n\r\n      let newsCopy = [...state.news]\r\n      let archiveCopy = [...state.archive]\r\n\r\n      let archiveNews = newsCopy.splice(action.index, 1)\r\n\r\n      // @ts-ignore\r\n      archiveCopy.push(archiveNews[0])\r\n\r\n      return {\r\n        ...state,\r\n        news: newsCopy,\r\n        archive: archiveCopy\r\n      }\r\n    // зануление новостей\r\n    case RESET_NEWS:\r\n      return {\r\n        ...state,\r\n        news: [] as newsArrayType[]\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const newsActions = {\r\n  addNews: (news: newsArrayType[]) => ({type: ADD_NEWS, news} as const),\r\n  setAbleToShow: (types: NewsTypes) => ({type: ABLE_TO_SHOW, types} as const),\r\n  setToArchive: (index: number) => ({type: SET_TO_ARCHIVE, index} as const),\r\n  resetNews: () => ({type: RESET_NEWS} as const)\r\n}\r\n\r\nexport const setNewsThunk = (newsType: NewsTypes, company: string): NewsThunkType => (dispatch, getState) => {\r\n  const state = getState().newsPage\r\n  const dayInMonth = getState().gamePage.daysInMonth\r\n  const month = getState().gamePage.months[getState().gamePage.month].name\r\n  let newsCopy = [...state.news]\r\n  // создание шаблона новости\r\n  let news = {\r\n    title: '',\r\n    amount: 0,\r\n    company: '',\r\n    type: '',\r\n    dayInMonth: dayInMonth,\r\n    month: month,\r\n    condition: '' as string | number\r\n  }\r\n\r\n  state.newsTypes.map((newsTypes, index) => {\r\n    if(newsTypes.type === newsType) {\r\n      // выбираем одну из 3 видов новостей хорошая / плохая / нейтральная\r\n      let condition = getRandomNumber(newsTypes.variants.length)\r\n      // 0 - хорошая / 1 - плохая / 2 - нейтральная\r\n      switch (newsType) {\r\n        case \"personNews\":\r\n          // если новость плохая или хорошая . . .\r\n          if(condition === 0 || condition === 1) {\r\n            // вид новости . . .\r\n            let typeOfNews = newsTypes.variants[condition] // positive / negative / neutral\r\n            // @ts-ignore / вид выплаты (один раз или постоянная)\r\n            let typeOfPayout = getRandomNumber(typeOfNews.events.length)\r\n            // @ts-ignore / выбираем новость\r\n            let titleIndex = getRandomNumber(typeOfNews.events[typeOfPayout].titles.length)\r\n\r\n            // @ts-ignore/ заголовок новости\r\n            news.title = typeOfNews.events[typeOfPayout].titles[titleIndex].title\r\n            // @ts-ignore/ цена\r\n            news.amount = typeOfNews.events[typeOfPayout].titles[titleIndex].amount\r\n            // @ts-ignore / обновляем баланс или доход игрока\r\n            dispatch(actions.getNewsPayout(typeOfNews.events[typeOfPayout].type, news.amount))\r\n\r\n          } else {\r\n            // если новость нейтральная . . .\r\n            // @ts-ignore\r\n            let titleIndex = Number((Math.random() * (newsTypes.variants[condition].events.length - 1)).toFixed(0))\r\n            // @ts-ignore\r\n            // создаём новость . . .\r\n            news.title = newsTypes.variants[condition].events[titleIndex]\r\n            news.amount = 0\r\n          }\r\n          news.type = 'person'\r\n          break\r\n        case \"stocksNews\":\r\n          // @ts-ignore\r\n          let titleIndex = Number((Math.random() * (newsTypes.variants[condition].titles.length - 1)).toFixed(0))\r\n          // @ts-ignore\r\n          news.title = newsTypes.variants[condition].titles[titleIndex]\r\n          if (condition === 0 || condition === 1) {\r\n            news.company = company\r\n            // продолжительность роста / падения акции\r\n            const growType = condition === 0 ? 'up' : 'down'\r\n            const timeInterval = Number((Math.random() * 4 + 3).toFixed(0))\r\n\r\n            // @ts-ignore\r\n            dispatch(stocksActions.setPriceChangeInterval(company, timeInterval, growType))\r\n          }\r\n          news.type = 'stock'\r\n          news.condition = condition\r\n          break\r\n        case \"businessNews\":\r\n          if (condition === 0 || condition === 1) {\r\n            console.log(condition)\r\n            // вид новости . . .\r\n            let typeOfNews = newsTypes.variants[condition] // positive / negative / neutral\r\n\r\n            let incomeAmount = Number((Math.random() * 100 + 50).toFixed(0))\r\n\r\n            let businessType: number\r\n            switch (company) {\r\n              case 'Ресторан':\r\n                businessType = 0\r\n                break\r\n              case 'Сдача гаража':\r\n                businessType = 1\r\n                break\r\n              case 'Сервис':\r\n                businessType = 2\r\n                break\r\n              case 'Мотель':\r\n                businessType = 3\r\n                break\r\n              default:\r\n                return null\r\n            }\r\n            // @ts-ignore\r\n            let titleIndex = getRandomNumber(typeOfNews.events[businessType].titles.length)\r\n\r\n            // @ts-ignore // заголовок новости\r\n            news.title = typeOfNews.events[businessType].titles[titleIndex]\r\n            // название бизнеса\r\n            news.company = company\r\n            // прибыль/убыль бизнеса\r\n            news.amount = incomeAmount\r\n\r\n            // @ts-ignore / обновляем доход пользователя . . .\r\n            condition === 0 ? dispatch(actions.updateBusinessIncome(incomeAmount)) : dispatch(actions.updateBusinessIncome(-incomeAmount))\r\n            // @ts-ignore\r\n            condition === 0 ? dispatch(businessActions.updateBusinessIncome(company, incomeAmount)) : dispatch(businessActions.updateBusinessIncome(company, -incomeAmount))\r\n          } else {\r\n            // @ts-ignore / если новость не связана с доходом то просто отдаем заголовок . . .\r\n            let titleIndex = getRandomNumber(newsTypes.variants[condition].events.length)\r\n            // @ts-ignore\r\n            news.title = newsTypes.variants[condition].events[titleIndex]\r\n          }\r\n          news.type = 'business'\r\n          break\r\n      }\r\n    }\r\n    return null\r\n  })\r\n  // диспачим обновленные новости в state\r\n  newsCopy.push(news)\r\n  dispatch(newsActions.addNews(newsCopy))\r\n}\r\n\r\nexport type NewsTypes = 'stocksNews' | 'businessNews' | 'personNews'\r\nexport type VariantType = 'positive' | 'negative' | 'neutral'\r\nexport type newsArrayType = {\r\n  title: string\r\n  amount: number\r\n  company: string\r\n  month: string\r\n  dayInMonth: number\r\n  type: string\r\n  condition: string | number\r\n}\r\ntype NewsActionsType = InferActionsType<typeof newsActions>\r\n\r\nexport type NewsThunkType = ThunkAction<any, AppStateType, unknown, NewsActionsType>","import {AppStateType} from \"./store\";\r\n\r\nexport const getBusinessesSelector = ((state: AppStateType) => {\r\n  return state.businessPage.businesses\r\n})\r\n\r\nexport const getMyBusinessesSelector = ((state: AppStateType) => {\r\n  return state.businessPage.myBusinesses\r\n})","// spends and update . . .\r\nimport {DifficultyType} from \"./settings-reducer\";\r\nimport {AppStateType, InferActionsType} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actions} from \"./game-reducer\";\r\n\r\nconst WEEK_SPEND = 'gamePage/WEEK_SPEND'\r\nconst INDEX_PRICE = 'gamePage/INDEX_PRICE'\r\nconst RESET_CURRENT_MONTHS = 'gamePage/RESET_CURRENT_MONTHS'\r\n\r\nlet initialState = {\r\n  //\r\n  initialEvents: [\r\n    {\r\n      title: 'кинотеатр',\r\n      price: 75\r\n    }, {\r\n      title: 'ресторан',\r\n      price: 120\r\n    }, {\r\n      title: 'покупка продуктов',\r\n      price: 65\r\n    }, {\r\n      title: 'новая одежда',\r\n      price: 90\r\n    }, {\r\n      title: 'прогулка',\r\n      price: 30\r\n    }, {\r\n      title: 'ремонт машины',\r\n      price: 220\r\n    }, {\r\n      title: 'покупка мебели',\r\n      price: 75\r\n    }, {\r\n      title: 'одолжил другу',\r\n      price: 30\r\n    }, {\r\n      title: 'благотворительность',\r\n      price: 40\r\n    }, {\r\n      title: 'подох в ТЦ',\r\n      price: 80\r\n    }, {\r\n      title: 'оплата подписки',\r\n      price: 45\r\n    }, {\r\n      title: 'сходить на футбол',\r\n      price: 120\r\n    }, {\r\n      title: 'встреча с друзьями',\r\n      price: 70\r\n    }, {\r\n      title: 'помог родителям',\r\n      price: 100\r\n    }, {\r\n      title: 'улучшение рабочего места',\r\n      price: 110\r\n    }\r\n  ],\r\n  // вероятные события . . .\r\n  events: [\r\n  ] as eventType[],\r\n  // траты в текущий месяц . . .\r\n  currentMonthEvents: [] as eventType[],\r\n  // сумма трат за месяц . . .\r\n  currentMonthPrice: 0,\r\n  // случившиеся события . . .\r\n  happenedEvents: Array(12).fill([] as eventType[]),\r\n}\r\n\r\nexport const spendsReducer = (state = initialState, action: SpendsActionType): InitialSpendsStateType => {\r\n  switch (action.type) {\r\n    // еженедельные траты игрока\r\n    case WEEK_SPEND:\r\n      return {\r\n        ...state,\r\n        happenedEvents: action.events,\r\n        currentMonthEvents: action.currentMonthEvents,\r\n        currentMonthPrice: action.currentMonthPrice\r\n      }\r\n    case RESET_CURRENT_MONTHS:\r\n      return {\r\n        ...state,\r\n        currentMonthEvents: [] as eventType[],\r\n        currentMonthPrice: 0\r\n      }\r\n    // обновление цены на события\r\n    case INDEX_PRICE:\r\n      return {\r\n        ...state,\r\n        events: state.initialEvents.map(event => {\r\n          return {\r\n            ...event,\r\n            price: event.price + action.indexPrice\r\n          }\r\n        })\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const spendsActions = {\r\n  setEventsPrice: (indexPrice: number) => ({type: INDEX_PRICE, indexPrice} as const),\r\n  weekSpend: (events: eventType[], currentMonthEvents: eventType[], currentMonthPrice: number) => ({type: WEEK_SPEND, events, currentMonthEvents, currentMonthPrice} as const),\r\n  resetCurrentMonth: () => ({type: RESET_CURRENT_MONTHS} as const)\r\n}\r\n\r\nexport type eventType = {\r\n  title: string\r\n  price: number\r\n}\r\nexport type InitialSpendsStateType = typeof initialState\r\ntype SpendsActionType = InferActionsType<typeof spendsActions>\r\ntype SpendsThunkType = ThunkAction<any, AppStateType, unknown, SpendsActionType>\r\n\r\nexport const weekSpendThunk = (difficulty: DifficultyType): SpendsThunkType => (dispatch, getState) => {\r\n  // возможные события\r\n  let events = getState().spendsPage.events\r\n  // копия массива с событиями\r\n  let happenedEventsCopy = [...getState().spendsPage.happenedEvents]\r\n  // индекс текущего месяц\r\n  let month = getState().gamePage.month\r\n  // события этого месяца\r\n  let currentMonthEventsCopy = getState().spendsPage.currentMonthEvents\r\n  // сумма трат этого месяца\r\n  let currentMonthPriceCopy = getState().spendsPage.currentMonthPrice\r\n\r\n  // берем случайное событие . . .\r\n  let event = Number((Math.random() * (events.length - 1)).toFixed(0))\r\n\r\n  // копия массива с текущими событиями . . .\r\n  // let happenedEventsCopy = [...happenedEvents]\r\n  happenedEventsCopy[month] = [...happenedEventsCopy[month], events[event]]\r\n  currentMonthEventsCopy = [...currentMonthEventsCopy, events[event]]\r\n  // определение цены, которую должен потратить игрок . . .\r\n  let priceToSpend = events[event].price\r\n\r\n  currentMonthPriceCopy += priceToSpend\r\n  // обновляем массив с новостями\r\n  dispatch(spendsActions.weekSpend(happenedEventsCopy, currentMonthEventsCopy, currentMonthPriceCopy))\r\n  // @ts-ignore / вычетаем из баланса\r\n  dispatch(actions.updateWalletFromSpends(priceToSpend))\r\n}","export default __webpack_public_path__ + \"static/media/person-1.ceda3b6d.png\";","export default __webpack_public_path__ + \"static/media/person-1-avatar.f348cfde.png\";","export default __webpack_public_path__ + \"static/media/person-2.0bb7792e.png\";","export default __webpack_public_path__ + \"static/media/person-2-avatar.5c71962e.png\";","export default __webpack_public_path__ + \"static/media/person-3.ae5b2162.png\";","export default __webpack_public_path__ + \"static/media/person-3-avatar.453c191c.png\";","export default __webpack_public_path__ + \"static/media/person-4.8a806a5e.png\";","export default __webpack_public_path__ + \"static/media/person-4-avatar.84b4cc3a.png\";","export default __webpack_public_path__ + \"static/media/person-5.5186c4e9.png\";","export default __webpack_public_path__ + \"static/media/person-5-avatar.4e17f7e8.png\";","export default __webpack_public_path__ + \"static/media/person-6.233af352.png\";","export default __webpack_public_path__ + \"static/media/person-6-avatar.369b0f63.png\";","export default __webpack_public_path__ + \"static/media/person-7.3478cf76.png\";","export default __webpack_public_path__ + \"static/media/person-7-avatar.07e372f4.png\";","export default __webpack_public_path__ + \"static/media/person-8.0be6ca1f.png\";","export default __webpack_public_path__ + \"static/media/person-8-avatar.71276dcd.png\";","export default __webpack_public_path__ + \"static/media/person-9.30c88a0b.png\";","export default __webpack_public_path__ + \"static/media/person-9-avatar.b2401090.png\";","export default __webpack_public_path__ + \"static/media/person-10.70f7b97b.png\";","export default __webpack_public_path__ + \"static/media/person-10-avatar.9c8dd7bf.png\";","export default __webpack_public_path__ + \"static/media/person-11.15f7fe56.png\";","export default __webpack_public_path__ + \"static/media/person-11-avatar.d671b7bf.png\";","export default __webpack_public_path__ + \"static/media/person-12.a49803d3.png\";","export default __webpack_public_path__ + \"static/media/person-12-avatar.650c2492.png\";","export default __webpack_public_path__ + \"static/media/person-13.630a7d09.png\";","export default __webpack_public_path__ + \"static/media/person-13-avatar.818e4e4c.png\";","export default __webpack_public_path__ + \"static/media/person-14.66777e35.png\";","export default __webpack_public_path__ + \"static/media/person-14-avatar.6d64aadd.png\";","export default __webpack_public_path__ + \"static/media/person-15.b2014a4b.png\";","export default __webpack_public_path__ + \"static/media/person-15-avatar.d07cc9b3.png\";","import {AppStateType, InferActionsType} from \"./store\"\r\nimport person1Photo from \"../img/characters/person-1.png\"\r\nimport person1Avatar from \"../img/characters/person-1-avatar.png\"\r\nimport person2Photo from \"../img/characters/person-2.png\"\r\nimport person2Avatar from \"../img/characters/person-2-avatar.png\"\r\nimport person3Photo from \"../img/characters/person-3.png\"\r\nimport person3Avatar from \"../img/characters/person-3-avatar.png\"\r\nimport person4Photo from \"../img/characters/person-4.png\"\r\nimport person4Avatar from \"../img/characters/person-4-avatar.png\"\r\nimport person5Photo from \"../img/characters/person-5.png\"\r\nimport person5Avatar from \"../img/characters/person-5-avatar.png\"\r\nimport person6Photo from \"../img/characters/person-6.png\"\r\nimport person6Avatar from \"../img/characters/person-6-avatar.png\"\r\nimport person7Photo from \"../img/characters/person-7.png\"\r\nimport person7Avatar from \"../img/characters/person-7-avatar.png\"\r\nimport person8Photo from \"../img/characters/person-8.png\"\r\nimport person8Avatar from \"../img/characters/person-8-avatar.png\"\r\nimport person9Photo from \"../img/characters/person-9.png\"\r\nimport person9Avatar from \"../img/characters/person-9-avatar.png\"\r\nimport person10Photo from \"../img/characters/person-10.png\"\r\nimport person10Avatar from \"../img/characters/person-10-avatar.png\"\r\nimport person11Photo from \"../img/characters/person-11.png\"\r\nimport person11Avatar from \"../img/characters/person-11-avatar.png\"\r\nimport person12Photo from \"../img/characters/person-12.png\"\r\nimport person12Avatar from \"../img/characters/person-12-avatar.png\"\r\nimport person13Photo from \"../img/characters/person-13.png\"\r\nimport person13Avatar from \"../img/characters/person-13-avatar.png\"\r\nimport person14Photo from \"../img/characters/person-14.png\"\r\nimport person14Avatar from \"../img/characters/person-14-avatar.png\"\r\nimport person15Photo from \"../img/characters/person-15.png\"\r\nimport person15Avatar from \"../img/characters/person-15-avatar.png\"\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {actions} from \"./game-reducer\";\r\n\r\nconst SET_PROFILE = 'profilePage/SET_PROFILE'\r\nconst SET_TAX = 'profilePage/SET_TAX'\r\n// const SET_EXPENSES = 'profilePage/SET_EXPENSES'\r\nconst UPDATE_EXPENSES = 'profilePage/UPDATE_EXPENSES'\r\nconst PAY_FOR_EXPENSES = 'profilePage/PAY_FOR_EXPENSES'\r\nconst SET_CREDIT = 'profilePage/SET_CREDIT'\r\nconst UPDATE_INCOME = 'profilePage/UPDATE_INCOME'\r\n\r\nlet initialState = {\r\n  // список возможных персонажей . . .\r\n  // виды расходов\r\n  // дом / машина / кредитная карта / кредит\r\n  // для каждого расходов есть своя фикс. сумма и % который надо выплачивать каждый месяц\r\n  persons: [\r\n    {\r\n      name: 'Эдди',\r\n      age: 28,\r\n      saving: 320,\r\n      salary: 700,\r\n      work: 'Маркетолог',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 4000, startPrice: 4000, payment: 4},\r\n        {type: 'car', title: 'Машина', remainPrice: 1500, startPrice: 1500, payment: 5},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 800, startPrice: 800, payment: 7},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 1200, startPrice: 1200, payment: 5},\r\n      ],\r\n      img: person1Photo,\r\n      avatar: person1Avatar,\r\n    } as personType,\r\n    {\r\n      name: 'Макс',\r\n      age: 24,\r\n      saving: 360,\r\n      salary: 650,\r\n      work: 'Менеджер',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 3000, startPrice: 3000, payment: 4},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice:0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 1000, startPrice: 1000, payment: 5},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 1700, startPrice: 1700, payment: 7},\r\n      ],\r\n      img: person2Photo,\r\n      avatar: person2Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Билл',\r\n      age: 19,\r\n      saving: 295,\r\n      salary: 420,\r\n      work: 'Разработчик',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1000, startPrice: 1000, payment: 6},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 600, startPrice: 600, payment: 8},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 1000, startPrice: 1000, payment: 6},\r\n      ],\r\n      img: person3Photo,\r\n      avatar: person3Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Кейт',\r\n      age: 23,\r\n      saving: 420,\r\n      salary: 530,\r\n      work: 'Переводчик',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1400, startPrice: 1400, payment: 6},\r\n        {type: 'car', title: 'Машина', remainPrice: 2400, startPrice: 2400, payment: 3},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 600, startPrice: 600, payment: 8},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 600, startPrice: 600, payment: 8},\r\n      ],\r\n      img: person4Photo,\r\n      avatar: person4Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Фред',\r\n      age: 21,\r\n      saving: 400,\r\n      salary: 290,\r\n      work: 'Кабельщик',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 1500, startPrice: 1500, payment: 3},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 1000, startPrice: 1000, payment: 3},\r\n      ],\r\n      img: person5Photo,\r\n      avatar: person5Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Джимми',\r\n      age: 25,\r\n      saving: 630,\r\n      salary: 730,\r\n      work: 'Режиссёр',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 2000, startPrice: 2000, payment: 15},\r\n        {type: 'car', title: 'Машина', remainPrice: 800, startPrice: 800, payment: 5},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 700, startPrice: 700, payment: 10},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 0, startPrice: 0, payment: 5},\r\n      ],\r\n      img: person6Photo,\r\n      avatar: person6Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Брэд',\r\n      age: 31,\r\n      saving: 490,\r\n      salary: 570,\r\n      work: 'Страховщик',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1200, startPrice: 1200, payment: 10},\r\n        {type: 'car', title: 'Машина', remainPrice: 800, startPrice: 800, payment: 7},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 1000, startPrice: 1000, payment: 8},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 0, startPrice: 0, payment: 0},\r\n      ],\r\n      img: person7Photo,\r\n      avatar: person7Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Лизи',\r\n      age: 26,\r\n      saving: 510,\r\n      salary: 550,\r\n      work: 'Бухгалтер',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1000, payment: 9},\r\n        {type: 'car', title: 'Машина', remainPrice: 1200, payment: 7},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 900, payment: 8},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 0, payment: 0},\r\n      ],\r\n      img: person8Photo,\r\n      avatar: person8Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Изабель',\r\n      age: 18,\r\n      saving: 900,\r\n      salary: 480,\r\n      work: 'Танцовщица',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 400, startPrice: 400, payment: 10},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 500, startPrice: 500, payment: 10},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 1000, startPrice: 1000, payment: 10},\r\n      ],\r\n      img: person9Photo,\r\n      avatar: person9Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Фрэнк',\r\n      age: 29,\r\n      saving: 330,\r\n      salary: 620,\r\n      work: 'Продюсер',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1200, startPrice: 1200, payment: 15},\r\n        {type: 'car', title: 'Машина', remainPrice: 1000, startPrice: 1000, payment: 10},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 700, startPrice: 700, payment: 5},\r\n      ],\r\n      img: person10Photo,\r\n      avatar: person10Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Алекс',\r\n      age: 28,\r\n      saving: 330,\r\n      salary: 300,\r\n      work: 'Журналист',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 800, startPrice: 800, payment: 6},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 550, startPrice: 550, payment: 8},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 0, startPrice: 0, payment: 0},\r\n      ],\r\n      img: person11Photo,\r\n      avatar: person11Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Адам',\r\n      age: 28,\r\n      saving: 330,\r\n      salary: 580,\r\n      work: 'Имиджмейкер',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1000, startPrice: 1000, payment: 15},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 800, startPrice: 800, payment: 10},\r\n      ],\r\n      img: person12Photo,\r\n      avatar: person12Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Хейли',\r\n      age: 27,\r\n      saving: 330,\r\n      salary: 330,\r\n      work: 'Учитель',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1500, startPrice: 1500, payment: 5},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 1000, startPrice: 1000, payment: 8},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 0, startPrice: 0, payment: 0},\r\n      ],\r\n      img: person13Photo,\r\n      avatar: person13Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Лили',\r\n      age: 26,\r\n      saving: 330,\r\n      salary: 370,\r\n      work: 'Врач',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 700, startPrice: 700, payment: 5},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 1000, startPrice: 1000, payment: 4},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 600, startPrice: 600, payment: 8},\r\n      ],\r\n      img: person14Photo,\r\n      avatar: person14Avatar\r\n    } as personType,\r\n    {\r\n      name: 'Боб',\r\n      age: 23,\r\n      saving: 330,\r\n      salary: 590,\r\n      work: 'Инженер',\r\n      expenses: [\r\n        {type: 'home', title: 'Дом', remainPrice: 1500, startPrice: 1500, payment: 10},\r\n        {type: 'car', title: 'Машина', remainPrice: 0, startPrice: 0, payment: 0},\r\n        {type: 'card', title: 'Кред. карта', remainPrice: 1000, startPrice: 1000, payment: 7},\r\n        {type: 'credit', title: 'Кредит', remainPrice: 200, startPrice: 200, payment: 10},\r\n      ],\r\n      img: person15Photo,\r\n      avatar: person15Avatar\r\n    } as personType,\r\n  ],\r\n  // наш профиль . . .\r\n  profile: null as null | personType, // профиль персонажа\r\n  tax: 0, // налог с зп\r\n  // initialExpenses: [] as expenseType[],\r\n  income: 0\r\n}\r\n\r\nexport type InitialProfileStateType = typeof initialState\r\n\r\nexport const profileReducer = (state = initialState, action: ProfileActionsType): InitialProfileStateType => {\r\n  switch (action.type) {\r\n    // установка профиля игрока\r\n    case SET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      }\r\n    // подоходный налог\r\n    case SET_TAX:\r\n      return {\r\n        ...state,\r\n        tax: action.tax\r\n      }\r\n    // ставим константные значения долгов персонажа\r\n    // case SET_EXPENSES:\r\n    //   return {\r\n    //     ...state,\r\n    //     initialExpenses: action.expenses\r\n    //   }\r\n    // ежемесячные выплаты по долгам\r\n    case UPDATE_EXPENSES:\r\n\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          expenses: state.profile?.expenses.map((expense, index) => {\r\n            return {\r\n              ...expense,\r\n              // если долг > 0 то мы выплачиваем его\r\n              remainPrice: expense.remainPrice > 0\r\n                // если ежемесячная плата больше чем оставшийся долг, то мы выплачиваем тока нужную часть\r\n                ? expense.remainPrice < expense.startPrice * expense.payment / 100\r\n                  ? expense.remainPrice === 0\r\n                  : expense.remainPrice -  expense.startPrice * expense.payment / 100\r\n                : 0\r\n            }\r\n          })\r\n        } as personType\r\n      }\r\n    // пользователь выплачивает свой кредит\r\n    case PAY_FOR_EXPENSES:\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          expenses: action.expenses\r\n        } as personType,\r\n      }\r\n    case SET_CREDIT:\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          expenses: state.profile?.expenses.map(expense => {\r\n            if (expense.type === 'credit') {\r\n              return action.expenses[3]\r\n            }\r\n            return expense\r\n          })\r\n        } as personType\r\n      }\r\n    case UPDATE_INCOME:\r\n\r\n      // здесь мы будем собирать все возможные пассивные доходы персонажа и суммировать\r\n      let expensesSummary = 0\r\n      state.profile?.expenses.map((expense, index) => {\r\n        if (state.profile?.expenses[index].remainPrice !== 0) {\r\n          expensesSummary += expense.startPrice * expense.payment / 100\r\n        }\r\n      })\r\n\r\n      return {\r\n        ...state,\r\n        // @ts-ignore\r\n        income: state.profile?.salary - state.tax - expensesSummary\r\n      }\r\n    default:\r\n      return {\r\n        ...state\r\n      }\r\n  }\r\n}\r\n\r\nexport const profileActions = {\r\n  setProfile: (profile: personType) => ({type: SET_PROFILE, profile} as const),\r\n  setTax: (tax: number) => ({type: SET_TAX, tax} as const),\r\n  // setExpenses: (expenses: expenseType[]) => ({type: SET_EXPENSES, expenses} as const),\r\n  updateExpenses: () => ({type: UPDATE_EXPENSES} as const),\r\n  payForExpenses: (expenses: expenseType[]) => ({type: PAY_FOR_EXPENSES, expenses} as const),\r\n  setCredit: (expenses: expenseType[]) => ({type: SET_CREDIT, expenses} as const),\r\n  updateIncome: () => ({type: UPDATE_INCOME} as const),\r\n}\r\n\r\ntype ProfileActionsType = InferActionsType<typeof profileActions>\r\nexport type expenseType = {\r\n  type: string\r\n  title: string\r\n  remainPrice: number\r\n  startPrice: number\r\n  payment: number\r\n}\r\nexport type personType = {\r\n  name: string\r\n  age: number\r\n  saving: number\r\n  salary: number\r\n  img: string\r\n  avatar: string\r\n  work: string\r\n  expenses: expenseType[]\r\n}\r\ntype ProfileThunkType = ThunkAction<any, AppStateType, unknown, ProfileActionsType>\r\n\r\nexport const payForExpensesThunk = (price: number, expenseType: string): ProfileThunkType => (dispatch, getState) => {\r\n  // price / сумма к погашению долга\r\n  // expenseType / долг, который гасит пользователь\r\n\r\n  // @ts-ignore\r\n  let expensesCopy = [...getState().profilePage.profile?.expenses] as expenseType[]\r\n  // находим нужный нам долг и режим его на сумму выплаты банку\r\n  expensesCopy.forEach((expense, index) => {\r\n    if (expense.type === expenseType) {\r\n      expensesCopy[index].remainPrice = expense.remainPrice - price\r\n    }\r\n  })\r\n  dispatch(profileActions.payForExpenses(expensesCopy))\r\n  // @ts-ignore / уменошаем баланс пользователя\r\n  dispatch(actions.updateWalletFromSpends(price))\r\n\r\n  dispatch(profileActions.updateIncome())\r\n}\r\n\r\nexport const takeCreditThunk = (creditAmount: number, payoutPercentage: number, finalPayout: number): ProfileThunkType => (dispatch, getState) => {\r\n  // creditAmount / размер кредита\r\n  // payoutPercentage / месячный процент\r\n  // finalPayout / размер возврата\r\n  // @ts-ignore\r\n  let expensesCopy = [...getState().profilePage.profile?.expenses] as expenseType[]\r\n  expensesCopy[3] = {\r\n    ...expensesCopy[3],\r\n    remainPrice: finalPayout,\r\n    startPrice: finalPayout,\r\n    payment: payoutPercentage\r\n  }\r\n\r\n  dispatch(profileActions.setCredit(expensesCopy))\r\n\r\n  // @ts-ignore\r\n  dispatch(actions.updateWalletFromSpends(-creditAmount))\r\n\r\n  dispatch(profileActions.updateIncome())\r\n}","import {AppStateType} from \"./store\";\r\n\r\nexport const getPersonSelector = (state: AppStateType) => {\r\n  return state.profilePage.profile\r\n}\r\n\r\nexport const getPersonsSelector = (state: AppStateType) => {\r\n  return state.profilePage.persons\r\n}\r\n\r\nexport const getIncomeSelector = (state: AppStateType) => {\r\n  return state.profilePage.profile?.salary\r\n}\r\n\r\nexport const getTaxSelector = (state: AppStateType) => {\r\n  return state.profilePage.tax\r\n}\r\n\r\nexport const getExpensesSelector = (state: AppStateType) => {\r\n  return state.profilePage.profile?.expenses\r\n}","import React, {Dispatch, FC, SetStateAction, useEffect, useState} from \"react\";\r\nimport {Breadcrumb} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getDayInMonthSelector, getDaySelector, getMonthSelector, getMonthsSelector} from \"../../redux/game-selector\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Work} from \"../../redux/work-reducer\";\r\nimport {stocksActions} from \"../../redux/stocks-reducer\";\r\nimport { getStocksSelector } from \"../../redux/stocks-selector\";\r\nimport {getDifficultySelector} from \"../../redux/settings-selector\";\r\nimport {setNewsThunk} from \"../../redux/news-reducer\";\r\nimport {getMyBusinessesSelector} from \"../../redux/business-selector\";\r\nimport {getRandomNumber} from \"../../utils/getRandomNumber\";\r\nimport {spendsActions, weekSpendThunk} from \"../../redux/spends-reducer\";\r\nimport {personType, profileActions} from \"../../redux/profile-reducer\";\r\nimport {getExpensesSelector, getPersonSelector, getTaxSelector} from \"../../redux/profile-selector\";\r\n\r\ntype RenderTimeType = {\r\n  wallet: number\r\n}\r\n\r\nexport const RenderTime: FC<RenderTimeType> = (props) => {\r\n\r\n  const newsTypeArray = useSelector((state: AppStateType) => state.newsPage.newsTypes)\r\n\r\n  const companies = useSelector((state: AppStateType) => state.stocksPage.companiesForStocks)\r\n  // день месяца . . .\r\n  const dayInMonth = useSelector(getDayInMonthSelector)\r\n  const difficulty = useSelector(getDifficultySelector)\r\n\r\n  const dispatch = useDispatch()\r\n  // текущий день . . .\r\n  const day = useSelector(getDaySelector)\r\n  // акции\r\n  const stocks = useSelector(getStocksSelector)\r\n  // текущий месяц . . .\r\n  const month = useSelector(getMonthSelector)\r\n  // массив с месяцами . . .\r\n  const months = useSelector(getMonthsSelector)\r\n  // массив ваших бизнессов . . .\r\n  const myBusinesses = useSelector(getMyBusinessesSelector)\r\n  // текущая работа . . .\r\n  const profile = useSelector(getPersonSelector) as personType\r\n  //\r\n  const income = useSelector((state: AppStateType) => state.profilePage.income)\r\n  // const expenses = useSelector(getExpensesSelector)\r\n  // подоходный налог на зп\r\n  // const tax = useSelector(getTaxSelector)\r\n  // массив с днями . . .\r\n  const Days = [\r\n    'Воскресенье', 'Понедельник', 'Вторник',\r\n    'Среда', 'Четверг',\r\n    'Пятница', 'Суббота'\r\n  ]\r\n  // находим день недели . . .\r\n  const activeDay = Days[day % 7]\r\n  // месяц . . .\r\n  const activeMonth = month === 2 || month === 7\r\n    ? months[month].name + 'a'\r\n    : months[month].name.replace('ь','я')\r\n\r\n  // обновляем счётчик недель . . .\r\n  useEffect(() => {\r\n    dispatch(actions.setDayInMonth(dayInMonth + 1))\r\n    // еженедельные покупки . . .\r\n    if (day % 7 === 0 && day !== 0) {\r\n      const generateNews = (): any => {\r\n        // stocksNews / businessNews / personNews . . .\r\n        let newsType = getRandomNumber(3)\r\n        if (newsTypeArray[newsType].ableToShow) {\r\n          let company = ''\r\n          if(newsTypeArray[newsType].type === 'stocksNews') {\r\n            company = companies[getRandomNumber(companies.length)]\r\n          }\r\n          if (newsTypeArray[newsType].type === 'businessNews') {\r\n            if (myBusinesses.length !== 0) {\r\n              let companyIndex = getRandomNumber(myBusinesses.length)\r\n              company = myBusinesses[companyIndex].name\r\n            } else {\r\n              return generateNews()\r\n            }\r\n          }\r\n          dispatch(setNewsThunk(newsTypeArray[newsType].type, company))\r\n        } else {\r\n          generateNews()\r\n        }\r\n      }\r\n      // создаем новости каждые две недели\r\n      if (day % 14 === 0 && day !== 0) {\r\n          generateNews()\r\n      }\r\n      // еженедельная трата . . .\r\n      // dispatch(actions.weekSpend(difficulty))\r\n      dispatch(weekSpendThunk(difficulty))\r\n\r\n      // обновление акций . . .\r\n      if(stocks.length !== 0) {\r\n        // обновление цен на акции . . .\r\n        dispatch(stocksActions.indexingStocks())\r\n      }\r\n    }\r\n\r\n    // если сегодня последний день месяца, то обновляем месяц и выдаём зарплату игроку . . .\r\n    if(dayInMonth === months[month].duration) {\r\n\r\n      dispatch(actions.setDayInMonth(1))\r\n      dispatch(actions.setMonth(month + 1))\r\n      dispatch(spendsActions.resetCurrentMonth())\r\n\r\n      let salary = profile.salary // зп без налога\r\n\r\n      // налог за квартиру / машину / кредит / карту\r\n      // let expensesSummary = 0\r\n      // expenses.forEach((expense, index) => {\r\n      //   if(profile.expenses[index].price !== 0) {\r\n      //     expensesSummary += expense.payment * expense.price / 100\r\n      //   }\r\n      // })\r\n\r\n      // чистая прибыль персонажа в месяц\r\n\r\n      dispatch(actions.updateWallet(income))\r\n\r\n      // уменьшаем необходимую выплату по долгу на месячную ставку . . .\r\n      // TODO включить\r\n      dispatch(profileActions.updateExpenses())\r\n      dispatch(profileActions.updateIncome())\r\n\r\n\r\n    }\r\n  }, [day])\r\n\r\n  // обновляем год после декабря . . .\r\n  useEffect(() => {\r\n    if (month === 11 && dayInMonth === 31) {\r\n      dispatch(actions.setMonth(0))\r\n      dispatch(spendsActions.resetCurrentMonth())\r\n      dispatch(actions.setDayInMonth(1))\r\n    }\r\n  }, [month, dayInMonth])\r\n\r\n  return (\r\n    <>\r\n        <Breadcrumb className='gameProfitHeader'>\r\n          <Breadcrumb.Item className='gameProfitHeader__Day'>\r\n            {activeDay}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item className='gameProfitHeader__Month'>\r\n            {dayInMonth} {activeMonth}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item className=\"gameProfitHeader__Day\">\r\n            <b>{day}</b> день\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n    </>\r\n  )\r\n}","import {Avatar, message, Progress, Slider} from \"antd\";\r\nimport React, {FC} from \"react\";\r\nimport {RenderTime} from \"./RenderTime\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getExpensesSelector, getPersonSelector, getTaxSelector} from \"../../redux/profile-selector\";\r\nimport {personType} from \"../../redux/profile-reducer\";\r\nimport {DoubleRightOutlined, PauseOutlined, RightOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport {getLevelSelector, getVictoryBalance} from \"../../redux/game-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getConstTimeSpeedSelector, getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\ntype RenderPlayerProfileType = {\r\n  wallet: number\r\n  isEndOfGame: boolean\r\n}\r\n\r\nexport const RenderPlayerProfile: FC<RenderPlayerProfileType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n  // персонаж игрока\r\n  const profile = useSelector(getPersonSelector) as personType\r\n  // работа игрока\r\n  const tax = useSelector(getTaxSelector)\r\n\r\n  const expenses = useSelector(getExpensesSelector)\r\n  // уровень игрока\r\n  const level = useSelector(getLevelSelector)\r\n  // нынешняя скорость игры\r\n  const time = useSelector(getTimeSpeedSelector)\r\n  // скорость установленная в начале игры / д.4с / д.2с / д.1с\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n  // баланс необходимый для победы . . .\r\n  const victoryBalance = useSelector(getVictoryBalance)\r\n  //\r\n  const income = useSelector((state: AppStateType) => state.profilePage.income)\r\n\r\n  // expenses.forEach((expense, index) => {\r\n  //   if(profile.expenses[index].price !== 0) {\r\n  //     expensesSummary += expense.payment * expense.price / 100\r\n  //   }\r\n  // })\r\n  // текущий доход персонажа\r\n  // const income = profile.salary - tax - expensesSummary\r\n\r\n  const info = () => {\r\n    message.warning('Эта функция пока не доступна(')\r\n  }\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  let styleName = props.wallet > 1500\r\n    ? `${props.wallet > 3000\r\n      ? 'profile-top' : 'profile-medium'}`\r\n    : 'profile-start'\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfileStats\">\r\n        <div className=\"gameProfileStats__Avatar\">\r\n          <div className=\"gameProfileStats__AvatarImg\">\r\n            <div className=\"gameProfileStats__AvatarImgPhoto\">\r\n              <Progress\r\n                width={58}\r\n                strokeWidth={7}\r\n                type=\"circle\"\r\n                percent={20}\r\n                strokeColor={'rgb(16, 153, 209'}\r\n                trailColor={'#282c34'}\r\n                format={() => <Avatar src={profile.avatar} size={50}/> }\r\n              />\r\n              <div className=\"gameProfileStats__AvatarImgLevel\" onClick={info} onMouseOver={() => console.log('Сделать всплавашку про уровень')}>\r\n                <b>{level}</b>\r\n              </div>\r\n            </div>\r\n            <div className=\"gameProfileStats__AvatarImg__Name\">\r\n              {profile.name}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gameProfileStats__Menu\">\r\n          <button className=\"gameProfileStats__MenuItem\" style={time === 0 ? {color: '#fff'} : {}} onClick={() => onChangeTime(0)} disabled={props.isEndOfGame}>\r\n            <PauseOutlined />\r\n          </button>\r\n          <button className=\"gameProfileStats__MenuItem\" style={time === timeSpeed ? {color: '#fff'} : {}} onClick={() => onChangeTime(timeSpeed)} disabled={props.isEndOfGame}>\r\n            <RightOutlined />\r\n          </button>\r\n          <button className=\"gameProfileStats__MenuItem\" style={time === timeSpeed / 2 ? {color: '#fff'} : {}} onClick={() => onChangeTime(timeSpeed / 2)} disabled={props.isEndOfGame}>\r\n            <DoubleRightOutlined />\r\n          </button>\r\n        </div>\r\n        <div className=\"gameProfileStats__Wallet\">\r\n          <b className='gold'>{props.wallet}</b>\r\n        </div>\r\n      </div>\r\n      <div className={'gameProfileContent bannerBack ' + styleName}>\r\n        <div className=\"gameProfileContent__Work\">\r\n          <div className=\"gameProfileContent__WorkStats\">\r\n            <div className=\"gameProfileContent__WorkStats__Level\">\r\n              {profile.work}\r\n            </div>\r\n            <div className=\"gameProfileContent__WorkStats__Income\">\r\n              доход - ${income}\r\n            </div>\r\n          </div>\r\n          {/*<div className=\"gameProfileContent__WorkImg\">*/}\r\n          {/*  <img src={profile.avatar} alt=\"\"/>*/}\r\n          {/*</div>*/}\r\n        </div>\r\n        <div className=\"gameProfileContent__Img\">\r\n          <img src={profile.img} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"gameProfileProgress\">\r\n        <RenderTime wallet={props.wallet}/>\r\n        <div className=\"gameProfileProgress__Title\">\r\n          Прогресс игры\r\n        </div>\r\n        <div className=\"gameProfileProgress__Slider\">\r\n          <Slider\r\n            defaultValue={1}\r\n            value={props.wallet}\r\n            min={0}\r\n            max={victoryBalance}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {FC, SetStateAction, useState} from \"react\";\r\nimport {CloseOutlined} from \"@ant-design/icons\";\r\nimport {Button, InputNumber} from \"antd\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {myStockType, stocksActions} from \"../../redux/stocks-reducer\";\r\nimport {getWalletSelector} from \"../../redux/game-selector\";\r\nimport {getMyStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getConstTimeSpeedSelector} from \"../../redux/settings-selector\";\r\n\r\nexport type SellPopupType = {\r\n  stock: myStockType\r\n  setIsStockToSell: SetStateAction<any>\r\n  activeStock: number\r\n}\r\nexport const SellPopup: FC<SellPopupType> = (props) => {\r\n  // количество акций на продажу . . .\r\n  const [stocksToSellCount, setStocksToSellCount] = useState(1)\r\n  const timeSpeed = useSelector(getConstTimeSpeedSelector)\r\n  const wallet = useSelector(getWalletSelector)\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sellPopup\">\r\n        <div className=\"sellPopupBlock\">\r\n          <div className=\"sellPopupBlock__Close\">\r\n            <CloseOutlined onClick={() => {\r\n              props.setIsStockToSell(false)\r\n              onChangeTime(timeSpeed)\r\n            }}/>\r\n          </div>\r\n          <div className=\"sellPopupBlock__Title\">\r\n            <div>Вы хотите продать акции компании:</div>\r\n            <b>{props.stock.title}</b>\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n            Кол-во акций в портфеле: <b>{props.stock.count}</b>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"\">\r\n              Сколько хотите продать <InputNumber min={1} max={props.stock.count} defaultValue={1} onChange={(value) => setStocksToSellCount(value)}/>\r\n            </label>\r\n            <div>\r\n              Вы получите:\r\n              <b style={props.stock.oldPrice <= props.stock.price ? {color: '#51ff3d'} : {color: \"red\"}}>\r\n                {stocksToSellCount * props.stock.price}\r\n              </b>\r\n              Выручка: ({stocksToSellCount * props.stock.price - stocksToSellCount * props.stock.oldPrice})\r\n            </div>\r\n          </div>\r\n          <hr/>\r\n          <div style={{textAlign: 'center'}}>\r\n            <Button onClick={() => {\r\n              props.setIsStockToSell(false)\r\n              console.log(props.activeStock)\r\n              // возвращаем скорость времени\r\n              onChangeTime(timeSpeed)\r\n              // уменьшаем количество акций в пакете . . .\r\n              dispatch(stocksActions.sellStocks(props.stock, stocksToSellCount, props.activeStock))\r\n              // увеличиваем баланс пользователя . . .\r\n              dispatch(actions.setWallet(Math.round(wallet + stocksToSellCount * props.stock.price)))\r\n            }}>\r\n              Продать\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {FC, SetStateAction, useEffect} from \"react\";\r\nimport {getDaySelector} from \"../../redux/game-selector\";\r\nimport {getExpensesSelector, getPersonSelector, getTaxSelector} from \"../../redux/profile-selector\";\r\nimport {expenseType, personType} from \"../../redux/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nexport const RenderPlayerWork: FC<{setIsChangeWorkShown: SetStateAction<any>}> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // текущий день . . .\r\n  const day = useSelector(getDaySelector)\r\n  const profile = useSelector(getPersonSelector) as personType\r\n  const expenses = useSelector(getExpensesSelector) as expenseType[]\r\n  const tax = useSelector(getTaxSelector)\r\n  const income = useSelector((state: AppStateType) => state.profilePage.income)\r\n  // let expensesSummary = 0\r\n  // expenses.forEach((expense, index) => {\r\n  //   if (profile.expenses[index].price !== 0) {\r\n  //     expensesSummary += expense.price * expense.payment / 100\r\n  //   }\r\n  // })\r\n\r\n  useEffect(() => {\r\n    console.log('мы поменялись')\r\n    console.table(expenses)\r\n  },[expenses])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameWork bannerBack\">\r\n\r\n        <div className=\"gameWorkContent\">\r\n          <div className=\"gameWorkContent__blocks gameWorkContent__expenses\">\r\n            <div className=\"gameWorkContent__blocksTitle\">\r\n              Затраты\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Налог\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                ${tax}\r\n              </div>\r\n            </div>\r\n            {expenses.map((expense, index) => {\r\n              return (\r\n                <>\r\n                     <div className=\"gameWorkContent__block\">\r\n                        <div className=\"gameWorkContent__blockTitle\">\r\n                          {expense.title}\r\n                        </div>\r\n                        <div className=\"gameWorkContent__blockPrice\">\r\n                          ${profile.expenses[index].remainPrice !== 0\r\n                          ? `${expense.startPrice * expense.payment / 100} `\r\n                          : '0'\r\n                          }\r\n                        </div>\r\n                     </div>\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"gameWorkContent__blocks gameWorkContent__incomes\">\r\n            <div className=\"gameWorkContent__blocksTitle\">\r\n              Доходы\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Зарплата\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                ${profile.salary}\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Акции\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                $0\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Недвижимость\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                $0\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Бизнесс\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                $0\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\" style={{fontWeight: 400, textTransform: 'uppercase'}}>\r\n                Доход\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                <b>${income}</b>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"gameWorkContent__blocks gameWorkContent__liabilities\">\r\n            <div className=\"gameWorkContent__blocksTitle\">\r\n              Обязанности\r\n            </div>\r\n            {profile.expenses.map(expense => {\r\n              return (\r\n                <>\r\n                  {expense.remainPrice\r\n                   ? <div className=\"gameWorkContent__block\">\r\n                      <div className=\"gameWorkContent__blockTitle\">\r\n                        {expense.title}\r\n                      </div>\r\n                      <div className=\"gameWorkContent__blockPrice\">\r\n                        ${expense.remainPrice} <i>({expense.payment}%)</i>\r\n                      </div>\r\n                    </div>\r\n                  : ''}\r\n\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"gameWorkContent__blocks gameWorkContent__work\">\r\n            <div className=\"gameWorkContent__blocksTitle\">\r\n              Работа\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Ваша работа\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                {profile.work}\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Прибавка к зарплате\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                $0\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                Вы проработали\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                0 дней\r\n              </div>\r\n            </div>\r\n            <div className=\"gameWorkContent__block\">\r\n              <div className=\"gameWorkContent__blockTitle\">\r\n                До повышения\r\n              </div>\r\n              <div className=\"gameWorkContent__blockPrice\">\r\n                0 дней\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FC, SetStateAction} from \"react\"\r\nimport {ArrowDownOutlined, ArrowUpOutlined, FallOutlined, RiseOutlined } from \"@ant-design/icons\"\r\nimport {myStockType, stockType } from \"../../redux/stocks-reducer\"\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type RenderStockType = {\r\n  stock: stockType,\r\n  index: number,\r\n  setIsHistoryShown: any,\r\n  setActiveStock: any\r\n}\r\n\r\nexport type RenderMyStockType = {\r\n  stock: myStockType,\r\n  index: number,\r\n  setIsHistoryShown: any,\r\n  setActiveStock: SetStateAction<any>\r\n  setMyActiveStock: SetStateAction<any>\r\n  setIsStockToSell: SetStateAction<any>\r\n}\r\n\r\nexport const RenderStock: FC<RenderStockType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfitStocks__OfferBlock\">\r\n        <div className=\"gameProfitStocks__OfferBlock__Title\">\r\n          {props.index + 1} - {props.stock.title}\r\n        </div>\r\n        <div className=\"gameProfitStocks__OfferBlock__Info\">\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoPrice\">\r\n            {props.stock.price[props.stock.price.length - 1]}\r\n          </div>\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoRisk\">\r\n            {props.stock.risk}\r\n          </div>\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoCondition\" style={props.stock.condition === 'up' ? {color: '#51ff3d'} : {color: 'red'}}>\r\n            {props.stock.condition === 'up'\r\n              //@ts-ignore\r\n              ? <b> <RiseOutlined /> </b>\r\n              //@ts-ignore\r\n              : <b> <FallOutlined /> </b>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"gameProfitStocks__OfferBlock__Button\" onClick={() => {\r\n            props.setActiveStock(props.stock)\r\n            props.setIsHistoryShown(true)\r\n            onChangeTime(0)\r\n          }}>\r\n            Посмотреть историю\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const RenderMyStock: FC<RenderMyStockType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfitStocks__OfferBlock\">\r\n        <div className=\"gameProfitStocks__OfferBlock__Title\">\r\n          {props.index + 1} - {props.stock.title}\r\n        </div>\r\n        <div className=\"gameProfitStocks__OfferBlock__Info\">\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoPrice\">\r\n            {props.stock.price} / {props.stock.oldPrice}\r\n          </div>\r\n          <div className=\"gameProfitStocks__OfferBlock__InfoCondition\" style={props.stock.condition === 'up' ? {color: '#51ff3d'} : {color: 'red'}}>\r\n            {props.stock.condition === 'up'\r\n              //@ts-ignore\r\n              ? <b><ArrowUpOutlined /></b>\r\n              //@ts-ignore\r\n              : <b><ArrowDownOutlined /></b>\r\n            }\r\n          </div>\r\n          <div>\r\n            {props.stock.count} штук\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"gameProfitStocks__OfferBlock__Button\" onClick={() => {\r\n            props.setIsStockToSell(true)\r\n            props.setMyActiveStock(props.index)\r\n            onChangeTime(0)\r\n          }}>\r\n            Продать\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import {RenderMyStock, RenderStock} from \"./RenderStock\";\r\nimport React, {FC, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { getMyStocksSelector, getStocksSelector } from \"../../redux/stocks-selector\";\r\nimport {Button, Input, Popover, Radio, Select, Space} from \"antd\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {filterType, stocksActions, stocksReducer} from \"../../redux/stocks-reducer\";\r\nimport {ArrowDownOutlined, ArrowUpOutlined, SlidersOutlined } from \"@ant-design/icons\";\r\nconst {Option} = Select\r\n\r\nexport type RenderPlayerStocksType = {\r\n  setIsHistoryShown: any\r\n  setActiveStock: any\r\n  setMyActiveStock: any\r\n  setIsStockToSell: any\r\n}\r\n\r\nexport const RenderPlayerStocks: FC<RenderPlayerStocksType> = (props) => {\r\n  const dispatch = useDispatch()\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n  const stocks = useSelector(getStocksSelector)\r\n  const filteredStocks = useSelector((state: AppStateType) => state.stocksPage.filteredStocks)\r\n  const [isReverse, setIsReverse] = useState(false)\r\n\r\n  const filterStocks = (title: filterType ,value: string) => {\r\n    dispatch(stocksActions.filterStocks(title, value))\r\n  }\r\n\r\n  const content = (\r\n    <div>\r\n      <Radio.Group defaultValue={'none'} onChange={(e) => filterStocks(e.target.value, '')}>\r\n        <Space direction='vertical'>\r\n          <Radio value={'price'}>По цене</Radio>\r\n          <Radio value={'condition'}>По росту</Radio>\r\n          <Radio value={'count'}>По количеству</Radio>\r\n          <Radio value={'risk'}>По риску</Radio>\r\n          <Radio value={'none'}>Без фильтра</Radio>\r\n        </Space>\r\n      </Radio.Group>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameProfit bannerBack\">\r\n        <div className=\"gameProfitStocks\">\r\n          <div className=\"gameProfitStocks__Me\">\r\n            <div className=\"gameProfitStocks__Header\">\r\n              Ваши акции\r\n            </div>\r\n            <div className=\"gameProfitStocks__OfferBlocks\">\r\n              <div className=\"gameProfitStocks__OfferBlocks__stocks\">\r\n                {myStocks.map((stock, index) =>\r\n                  <RenderMyStock\r\n                    stock={stock}\r\n                    index={index}\r\n                    setIsHistoryShown={props.setIsHistoryShown}\r\n                    setActiveStock={props.setActiveStock}\r\n                    setMyActiveStock={props.setMyActiveStock}\r\n                    setIsStockToSell={props.setIsStockToSell}\r\n                  />\r\n                )}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"gameProfitStocks__Offer\">\r\n            <div className=\"gameProfitStocks__Header\">\r\n              Акции на рынке\r\n            </div>\r\n            <div className=\"gameProfitStocks__OfferBlocks\">\r\n              <div className=\"gameProfitStocks__OfferBlocks__menu\">\r\n                <Input placeholder='Название акции...' className='gameProfitStocks__OfferBlocks__menuInput' onChange={(e) => filterStocks('title',e.target.value)}/>\r\n                <Popover content={content} trigger=\"click\" title='Фильтр акций'>\r\n                  <Button style={{display: 'flex', alignItems: 'center'}}>Фильтры<SlidersOutlined style={{fontSize: '16px', fontWeight: 'normal'}}/></Button>\r\n                </Popover>\r\n                <Button onClick={() => {\r\n                  setIsReverse(!isReverse)\r\n                  dispatch(stocksActions.reverseFilteredStocks())\r\n                }}>\r\n                  {!isReverse\r\n                   ? <ArrowUpOutlined />\r\n                   : <ArrowDownOutlined />\r\n                  }\r\n                </Button>\r\n              </div>\r\n              <div className=\"gameProfitStocks__OfferBlocks__stocks\">\r\n                {filteredStocks.map((stock, index) =>\r\n                  <RenderStock\r\n                    stock={stock}\r\n                    index={index}\r\n                    setIsHistoryShown={props.setIsHistoryShown}\r\n                    setActiveStock={props.setActiveStock}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {CheckSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport {FC} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Button, Tabs} from \"antd\";\r\nimport {newsActions} from \"../../redux/news-reducer\";\r\nimport {getMyStocksSelector, getStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport const RenderPlayerNews:FC<{setIsHistoryShown: any, setActiveStock: any, setMyActiveStock: any, setIsStockToSell: any}> = (props) => {\r\n\r\n  const news = useSelector((state: AppStateType) => state.newsPage.news)\r\n  const archive = useSelector((state: AppStateType) => state.newsPage.archive)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameNews\">\r\n        <div className=\"gameNewsContent\">\r\n          <Tabs defaultActiveKey=\"1\" centered className='gameNewsContent__Tabs'>\r\n            <TabPane tab=\"Новости\" key=\"1\">\r\n              <div className=\"gameNewsBlocks\">\r\n                {news.map((newsBlock, index) =>\r\n                  <RenderNewsBlock\r\n                    key={index}\r\n                    title={newsBlock.title}\r\n                    company={newsBlock.company}\r\n                    amount={newsBlock.amount}\r\n                    index={index}\r\n                    isArchive={false}\r\n                    month={newsBlock.month}\r\n                    dayInMonth={newsBlock.dayInMonth}\r\n                    type={newsBlock.type}\r\n                    condition={newsBlock.condition}\r\n                    setIsHistoryShown={props.setIsHistoryShown}\r\n                    setActiveStock={props.setActiveStock}\r\n                    setMyActiveStock={props.setMyActiveStock}\r\n                    setIsStockToSell={props.setIsStockToSell}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n            <TabPane tab=\"Архив\" key=\"2\">\r\n              <div className=\"gameNewsBlocks gameNewsBlocks__reverse\">\r\n                {archive.map((newsBlock, index) =>\r\n                  <RenderNewsBlock\r\n                    key={index}\r\n                    title={newsBlock.title}\r\n                    company={newsBlock.company}\r\n                    amount={newsBlock.amount}\r\n                    index={index}\r\n                    isArchive={true}\r\n                    month={newsBlock.month}\r\n                    dayInMonth={newsBlock.dayInMonth}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TabPane>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\ntype NewsBlockType = {\r\n  title: string\r\n  company: string\r\n  amount: number\r\n  index: number\r\n  isArchive: boolean\r\n  month: string\r\n  dayInMonth: number\r\n  type?: string\r\n  condition?: string | number\r\n  setIsHistoryShown?: any\r\n  setActiveStock?: any\r\n  setMyActiveStock?: any\r\n  setIsStockToSell?: any\r\n}\r\n\r\nexport const RenderNewsBlock: FC<NewsBlockType> = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const stocks = useSelector(getStocksSelector)\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n\r\n  const moveToArchive = () => {\r\n    dispatch(newsActions.setToArchive(props.index))\r\n  }\r\n\r\n  const onChangeTime = (time: number) => {\r\n    dispatch(settingsActions.setTimeSpeed(time))\r\n  }\r\n\r\n  const buyStocks = () => {\r\n    stocks.map((stock, index) => {\r\n      if (stock.title === props.company) {\r\n        props.setActiveStock(stocks[index])\r\n      }\r\n    })\r\n    props.setIsHistoryShown(true)\r\n    onChangeTime(0)\r\n  }\r\n\r\n  const sellStocks = () => {\r\n    myStocks.map((stock, index) => {\r\n      if (stock.title === props.company) {\r\n        props.setMyActiveStock(index)\r\n      }\r\n    })\r\n    props.setIsStockToSell(true)\r\n    onChangeTime(0)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameNewsBlock\">\r\n        <div className=\"gameNewsBlock__Title\">\r\n          <b>Новость!</b>\r\n          <span style={{color: '#def4e4'}}> / {props.month} {props.dayInMonth}</span>\r\n        </div>\r\n        <div className=\"gameNewsBlock__News\">\r\n          <div className=\"gameNewsBlock__NewsTitle\">\r\n            <b>{props.title}</b>\r\n          </div>\r\n\r\n          {props.company !== ''\r\n            ? <div className='gameNewsBlock__NewsCompany'>\r\n                <i>{props.company}</i>\r\n              </div>\r\n            : ''\r\n          }\r\n\r\n          {props.type === 'stock' && props.condition === 0\r\n            ? <div className=\"gameNewsBlock__NewsButton\">\r\n                <Button onClick={() => buyStocks()}>Купить акцию</Button>\r\n              </div>\r\n            : ''\r\n          }\r\n          {props.type === 'stock' && props.condition === 1 && myStocks.some(s => s.title === props.company)\r\n            ? <div className=\"gameNewsBlock__NewsButton\">\r\n                <Button onClick={() => sellStocks()}>Продать акцию</Button>\r\n              </div>\r\n            : ''\r\n          }\r\n          {props.amount !== 0\r\n            ? <div className=\"gameNewsBlock__NewsPrice\">\r\n              {props.amount > 0\r\n                ? `Вы заработали $${props.amount}`\r\n                : `Вы потратили $${-props.amount}`\r\n              }\r\n              </div>\r\n            : ''}\r\n        </div>\r\n        {/* кнопка для помещения новости в архив . . . */}\r\n        {props.isArchive\r\n          ? ''\r\n          :\r\n            <div className='gameNewsBlock__Footer' >\r\n              <button onClick={() => moveToArchive()} className='gameNewsBlock__FooterButton'>\r\n                <CheckSquareOutlined />\r\n              </button>\r\n              <div className=\"gameNewsBlock__FooterText\">\r\n                <b>Я прочитал</b>\r\n              </div>\r\n            </div>}\r\n        </div>\r\n    </>\r\n  )\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPersonSelector} from \"../../redux/profile-selector\";\r\nimport {payForExpensesThunk, personType, profileActions, takeCreditThunk} from \"../../redux/profile-reducer\";\r\nimport {Button, Input, InputNumber, Select} from \"antd\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\nconst { Option } = Select\r\n\r\nexport const RenderPlayerBank = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const profile = useSelector(getPersonSelector) as personType\r\n\r\n  function onChange(value: any) {\r\n    console.log('changed', value);\r\n    setCreditAmount(() => Number(value.target.value))\r\n  }\r\n\r\n  function handleChange(value: any) {\r\n    console.log(`selected ${value}`);\r\n    setActiveExpense(value)\r\n  }\r\n\r\n  const [creditPercentage, setCreditPercentage] = useState(15) // процентная ставка по кредиту\r\n  const [payoutPercentage, setPayoutPercentage] = useState(10) // процентная ставка на месячный платеж\r\n\r\n  const [creditAmount, setCreditAmount] = useState(1000) // размер займа\r\n\r\n  const [finalPayout, setFinalPayout] = useState(Math.round(creditAmount + creditAmount * creditPercentage / 100)) // размер суммы к выплате\r\n  const [monthPayout, setMonthPayout] = useState(creditAmount / payoutPercentage) // размер месячной выплата\r\n\r\n  const [activeExpense, setActiveExpense] = useState(0) // активный долг для погашения\r\n  const [expenseAmount, setExpenseAmount] = useState(profile.expenses[activeExpense].remainPrice) // сумма для погашения долга\r\n\r\n  useEffect(() => {\r\n    setFinalPayout(Math.round(creditAmount + creditAmount * creditPercentage / 100))\r\n    setMonthPayout(creditAmount / payoutPercentage)\r\n  },[creditAmount])\r\n\r\n  const payForExpenses = () => {\r\n    dispatch(payForExpensesThunk(expenseAmount, profile.expenses[activeExpense].type))\r\n  }\r\n\r\n  const takeCredit = () => {\r\n    dispatch(takeCreditThunk(creditAmount, payoutPercentage, finalPayout))\r\n  }\r\n\r\n  // const initialExpenses = useSelector((state: AppStateType) => state.profilePage.initialExpenses)\r\n\r\n  console.table(profile.expenses)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gameBank bannerBack\">\r\n        <div className=\"gameBankContent\">\r\n          <div className=\"gameBankContent__liabilities\">\r\n            <div className=\"gameBankContent__Title\">\r\n              Долги\r\n            </div>\r\n            <div className=\"gameBankContent__Blocks\">\r\n              {profile.expenses.map((expense, index) => {\r\n                return (\r\n                  <>\r\n                    {expense.remainPrice !== 0\r\n                     ? <div className='gameBankContent__Block'>\r\n                        <div className=\"gameBankContent__BlockTitle\">{expense.title}</div>\r\n                        <div className=\"gameBankContent__BlockPrice\"><b>{expense.remainPrice}</b></div>\r\n                      </div>\r\n                      : ''\r\n                    }\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"gameBankContent__credit\">\r\n            <div className=\"gameBankContent__Title\">\r\n              Взять кредит\r\n            </div>\r\n            {profile.expenses[3].remainPrice === 0\r\n              ? <>\r\n                <div className=\"gameBankContent__Form\">\r\n                  <small>\r\n                    <i>(нельзя брать кредит размером более <b>10</b> окладов)</i>\r\n                  </small>\r\n                  <div className=\"gameBankContent__FormInput\">\r\n                    <Input size=\"large\" prefix='$' value={creditAmount} onChange={onChange} />\r\n                  </div>\r\n                  <div className='gameBankContent__FormPayloads'>\r\n                    <div className='gameBankContent__FormPayload'>\r\n                      Нужно выплатить: <b>{finalPayout}</b>\r\n                    </div>\r\n                    <div className='gameBankContent__FormPayload'>\r\n                      Ежемесячный платёж: <b>{monthPayout}</b>\r\n                    </div>\r\n                  </div>\r\n                  <br/>\r\n                </div>\r\n                <div className=\"gameBankContent__Button\">\r\n                  <Button size={'large'} onClick={() => takeCredit()}>\r\n                    Взять кредит\r\n                  </Button>\r\n                </div>\r\n                </>\r\n              : <div className=\"warning\">\r\n                  Нужно погасить кредит, прежде чем брать новый!\r\n                </div>\r\n            }\r\n          </div>\r\n          <div className=\"gameBankContent__payout\">\r\n            <div className=\"gameBankContent__Title\">\r\n              Выплатить долг\r\n            </div>\r\n            <div className=\"gameBankContent__Menu\">\r\n              <div className=\"gameBankContent__MenuSelect\">\r\n                <Select defaultValue={profile.expenses[activeExpense].title} onChange={handleChange}>\r\n                  {profile.expenses.map((expense, index) => {\r\n                    return (\r\n                      <>\r\n                        {expense.remainPrice !== 0\r\n                          ? <Option value={index}>\r\n                              {expense.title}\r\n                            </Option>\r\n                          : ''\r\n                        }\r\n                      </>\r\n                    )\r\n                  })}\r\n                </Select>\r\n              </div>\r\n              <div className=\"gameBankContent__MenuPay\">\r\n                <div className=\"gameBankContent__MenuPay__Price\">\r\n                  К оплате: <b>{profile.expenses[activeExpense].remainPrice}</b>\r\n                </div>\r\n                <div className=\"gameBankContent__MenuPay__Input\">\r\n                  <Input value={expenseAmount} prefix='$' max={profile.expenses[activeExpense].remainPrice} min={1} onChange={(e) => setExpenseAmount(Number(e.target.value))}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* TODO нельзя ставить больше, чем надо */}\r\n            <div className=\"gameBankContent__Button\">\r\n              <Button size={'large'} onClick={() => payForExpenses()} disabled={expenseAmount > profile.expenses[activeExpense].remainPrice || expenseAmount < 1}>\r\n                Оплатить\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, {FC, useEffect, useState} from \"react\";\r\nimport {RenderPlayerSpends} from \"./RenderPlayerSpends\";\r\nimport {RenderChart} from \"./RenderChart\";\r\nimport {RenderPlayerProfile} from \"./RenderPlayerProfile\";\r\nimport {Badge, Button, message, Modal, notification, Spin, Tabs} from \"antd\";\r\nimport {SellPopup} from \"./SellPopup\";\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {\r\n  getDaySelector,\r\n  getIncomeSelector,\r\n  getLoseBalance,\r\n  getVictoryBalance,\r\n  getWalletSelector\r\n} from \"../../redux/game-selector\";\r\nimport {getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {RenderPlayerWork} from \"./RenderPlayerWork\";\r\nimport {RenderPlayerStocks} from \"./RenderPlayerStocks\";\r\nimport {RenderPlayerNews} from \"./RenderPlayerNews\";\r\nimport {stocksActions, stockType} from \"../../redux/stocks-reducer\";\r\nimport {getMyStocksSelector, getStocksSelector} from \"../../redux/stocks-selector\";\r\nimport {newsActions} from \"../../redux/news-reducer\";\r\nimport {RenderPlayerBusiness} from \"./RenderPlayerBusiness\";\r\nimport {getBusinessesSelector, getMyBusinessesSelector} from \"../../redux/business-selector\";\r\nimport {businessActions} from \"../../redux/business-reducer\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {spendsActions} from \"../../redux/spends-reducer\";\r\nimport {getPersonSelector} from \"../../redux/profile-selector\";\r\nimport {RenderPlayerBank} from \"./RenderPlayerBank\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport const GamePage: FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  // переменная для скорости времени . . .\r\n  const timeSpeed = useSelector(getTimeSpeedSelector)\r\n\r\n  // счётчик дней . . .\r\n  const day = useSelector(getDaySelector)\r\n  // кошелёк игрока . . .\r\n  const wallet = useSelector(getWalletSelector)\r\n  // доход в месяц игрока . . .\r\n  // const income = useSelector(getIncomeSelector)\r\n  // стартовый доход . . .\r\n  // const startIncome = useSelector((state: AppStateType) => state.worksPage.currentWork?.startSalary) as number\r\n  const profile = useSelector(getPersonSelector)\r\n  // баланс необходимый для победы . . .\r\n  const victoryBalance = useSelector(getVictoryBalance)\r\n  // баланс для поражения . . .\r\n  const loseBalance = useSelector(getLoseBalance)\r\n\r\n  // массив с акциями . . .\r\n  const stocks = useSelector(getStocksSelector)\r\n  // массив купленных акций . . .\r\n  const myStocks = useSelector(getMyStocksSelector)\r\n  // массив ваших бизнессов . . .\r\n  const myBusinesses = useSelector(getMyBusinessesSelector)\r\n  // будущий массив с предложением по бизнессу . . .\r\n  const businesses = useSelector(getBusinessesSelector)\r\n  // количество новостей . . .\r\n  const news = useSelector((state: AppStateType) => state.newsPage.news)\r\n\r\n  // активная акция . . .\r\n  const [myActiveStock, setMyActiveStock] = useState(0)\r\n  // переменная для просмотра истории цены акции . . .\r\n  const [isHistoryShown, setIsHistoryShown] = useState(false)\r\n  // переменная для продажи акций . . .\r\n  const [isStockToSell, setIsStockToSell] = useState(false)\r\n  // смена работы . . .\r\n  const [isChangeWorkShown, setIsChangeWorkShown] = useState(false)\r\n  // активная акция пользователя . . .\r\n  const [activeStock, setActiveStock] = useState(null as null | stockType)\r\n  // проверка на конец игры . . .\r\n  const [isEndOfGame, setIsEndOfGame] = useState(false)\r\n  //\r\n  const [showExitModal, setShowExitModal] = useState(false)\r\n  // функция проверка на победу/поражение\r\n  const balanceCheck = () => {\r\n    if (wallet >= victoryBalance) {\r\n      console.log('победа!')\r\n      // зануление игры . . .\r\n      if(!isEndOfGame) {\r\n        setIsEndOfGame(true)\r\n        setShowExitModal(true)\r\n        dispatch(settingsActions.setTimeSpeed(0))\r\n        dispatch(stocksActions.resetMyStocks())\r\n        dispatch(businessActions.resetMyBusinesses())\r\n        dispatch(newsActions.resetNews())\r\n      }\r\n    }\r\n    if(wallet < loseBalance) {\r\n      // зануление игры . . .\r\n      if(!isEndOfGame) {\r\n        setIsEndOfGame(true)\r\n        setShowExitModal(true)\r\n        dispatch(settingsActions.setTimeSpeed(0))\r\n        dispatch(stocksActions.resetMyStocks())\r\n        dispatch(businessActions.resetMyBusinesses())\r\n        dispatch(newsActions.resetNews())\r\n      }\r\n    }\r\n  }\r\n  // функция которая ведёт подсчёт дней . . .\r\n  const liveProcess = () => {\r\n    if(timeSpeed !== 0) {\r\n      setTimeout(() => {\r\n        // диспатчим обновленный счетчик дней . . .\r\n        dispatch(actions.setDay(day + 1))\r\n      }, timeSpeed * 500)\r\n    }\r\n  }\r\n  // запуск функций\r\n  liveProcess()\r\n  balanceCheck()\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(actions.setIncome(startIncome))\r\n  // },[])\r\n\r\n  // заполнение массива акциями . . .\r\n  useEffect(() => {\r\n    // создаём акции\r\n    if (wallet >= 500 && stocks.length === 0) {\r\n      // создаём акции\r\n      dispatch(stocksActions.setStocks())\r\n      // // // новости про акции\r\n      dispatch(newsActions.setAbleToShow('stocksNews'))\r\n      openNotification('Вам стали доступны акции!')\r\n      }\r\n    // создаём бизнесс\r\n    if (wallet >= 3000 && businesses.length === 0) {\r\n      // создаем бизнесс\r\n      dispatch(businessActions.setBusinesses())\r\n      // новости про бизнесс\r\n      dispatch(newsActions.setAbleToShow('businessNews'))\r\n      openNotification('Вам стал доступен бизнесс')\r\n      }\r\n    },[wallet])\r\n\r\n  const openNotification = (text: string) => {\r\n    notification.open({\r\n      message: 'Поздравляем',\r\n      description: text,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {profile\r\n        ?\r\n          <div>\r\n            <Modal title=\"Конец?\" onCancel={() => setShowExitModal(false)}  visible={showExitModal} footer={[\r\n              <>\r\n                <NavLink to='/'>\r\n                  <Button type='primary' onClick={() => dispatch(actions.initGame())}>\r\n                    Выйти в меню\r\n                  </Button>\r\n                </NavLink>\r\n              </>\r\n            ]}>\r\n              <p>Это окно появляется при окончании игры!</p>\r\n            </Modal>\r\n            {isStockToSell ? <SellPopup stock={myStocks[myActiveStock]} setIsStockToSell={setIsStockToSell} activeStock={myActiveStock}/> : ''}\r\n            {isHistoryShown ? <RenderChart setIsHistoryShown={setIsHistoryShown} stock={activeStock as stockType} /> : ''}\r\n            <div className=\"game\">\r\n              <div className='gameProfile'>\r\n                <RenderPlayerProfile wallet={wallet} isEndOfGame={isEndOfGame}/>\r\n              </div>\r\n              <div className=\"gameActions\">\r\n                <Tabs defaultActiveKey=\"2\">\r\n                  <TabPane tab={\r\n                    <Badge count={news.length} overflowCount={10}>Новости</Badge>\r\n                  } key=\"1\">\r\n                    <RenderPlayerNews\r\n                      setIsHistoryShown={setIsHistoryShown}\r\n                      setMyActiveStock={setMyActiveStock}\r\n                      setActiveStock={setActiveStock}\r\n                      setIsStockToSell={setIsStockToSell}\r\n                    />\r\n                  </TabPane>\r\n                  <TabPane tab=\"Профиль\" key=\"2\" active>\r\n                    <RenderPlayerWork setIsChangeWorkShown={setIsChangeWorkShown}/>\r\n                  </TabPane>\r\n                  <TabPane tab=\"Покупки\" key=\"3\">\r\n                    <RenderPlayerSpends/>\r\n                  </TabPane>\r\n                  {/*wallet <= 500 && myStocks.length === 0 || isEndOfGame*/}\r\n                  <TabPane tab=\"Рынок\" key=\"4\" disabled={false} >\r\n                    <RenderPlayerStocks\r\n                      setIsHistoryShown={setIsHistoryShown}\r\n                      setMyActiveStock={setMyActiveStock}\r\n                      setActiveStock={setActiveStock}\r\n                      setIsStockToSell={setIsStockToSell}\r\n                    />\r\n                  </TabPane >\r\n                  {/*wallet <= 3000 && myBusinesses.length === 0 || isEndOfGame*/}\r\n                  <TabPane tab=\"Банк\" key=\"5\" disabled={false}>\r\n                    <RenderPlayerBank />\r\n                  </TabPane>\r\n                </Tabs>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        : <Spin style={{position: 'absolute', top: 'calc(50% - 13px)', left: 'calc(50% - 10px)'}}/>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","import {InferActionsType} from \"./store\";\r\n\r\nconst SET_INSTRUCTION_COMPLETED = 'SET_INSTRUCTION_COMPLETED'\r\n\r\nlet initialState = {\r\n  // пройдено ли обучение . . .\r\n  isInstructionCompleted: false,\r\n}\r\n\r\nexport type InitialAppStateType = typeof initialState\r\n\r\nexport const appReducer = (state = initialState, action: AppActionsType): InitialAppStateType => {\r\n  switch (action.type) {\r\n    case SET_INSTRUCTION_COMPLETED:\r\n      return {\r\n        ...state,\r\n        isInstructionCompleted: true\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const appActions = {\r\n  setIsInstructionCompleted: () => ({type: SET_INSTRUCTION_COMPLETED} as const)\r\n}\r\n\r\ntype AppActionsType = InferActionsType<typeof appActions>\r\n\r\n","import {NavLink} from \"react-router-dom\";\r\nimport React, {FC, useState} from \"react\";\r\nimport {Button, Checkbox, message, Modal} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {appActions} from \"../../redux/app-reducer\";\r\nimport { HeartTwoTone } from \"@ant-design/icons\";\r\n\r\nexport const MenuPage = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  // открытие модального окна с обучением . . .\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  const [isChangeModalVisible, setIsChangeModalVisible] = useState(false)\r\n  // пройдено ли обучение . . .\r\n  const isInstructionCompleted = useSelector((state: AppStateType) => state.app.isInstructionCompleted)\r\n\r\n  const info = () => {\r\n    message.warning('Эта функция пока не доступна(')\r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(() => true)\r\n  }\r\n  const handleOk = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  const showChangesModal = () => {\r\n    setIsChangeModalVisible(() => true)\r\n  }\r\n  const handleChangesOk = () => {\r\n    setIsChangeModalVisible(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className='menu bannerBack'>\r\n          <Modal className='menuModal' title=\"Обучение\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} okText='Продолжить' footer={[\r\n            <>\r\n              <Checkbox onChange={() => dispatch(appActions.setIsInstructionCompleted())}>Больше не показывать</Checkbox>\r\n              <NavLink to='/profile'>\r\n                <Button type='primary' onClick={handleOk}>\r\n                  Продолжить\r\n                </Button>\r\n              </NavLink>\r\n            </>\r\n          ]}>\r\n            <p><h3><b>Данный проект является симулятором инвестора</b></h3></p>\r\n            <p>Ваша задача заработать <b>10000$</b> на светлое будещее, как вы это будете делать, зависит только от вас! <i>(если баланс будет меньше <b>нуля</b> то вы проиграли!)</i></p>\r\n            <p>В игре есть несколько видов заработка</p>\r\n            <ul>\r\n              <li><b>Работа</b> (Доступно сразу)</li>\r\n              <li><b>Акции</b> (Нужен баланс в <b>500$</b>)</li>\r\n              <li><b>Свой бизнесс</b> (Нужен баланс в <b>3000$</b>)</li>\r\n            </ul>\r\n            <p>\r\n              На ваш выбор есть несколько <b>персонажей</b>, у каждого свои предпочтения и стартовый <b>капитал</b> <i>(советуем внимательно выбирать работу, чтобы она подходила под вашего персонажа)</i>\r\n            </p>\r\n            <p>\r\n              Каждую неделю ваш персонаж будет тратить определённую сумму на различные нужды.\r\n              (Можно смотреть во вкладке <b><i>Затраты</i></b>)\r\n            </p>\r\n            <p>\r\n              Каждые две недели будут появляться новости. (Вкладка <b><i>Новости</i></b>)\r\n              <br/>\r\n              Они могут влиять на:\r\n              <ul>\r\n                <li>\r\n                  Доход или баланс <b>персонажа</b>\r\n                </li>\r\n                <li>\r\n                  Резкий рост или падение <b>акций</b>\r\n                </li>\r\n                <li>\r\n                  Увеличение или падение дохода от <b>бизнесса</b>\r\n                </li>\r\n              </ul>\r\n            </p>\r\n          </Modal>\r\n          <Modal title='Изменения' visible={isChangeModalVisible} footer={[\r\n            <>\r\n              <NavLink to='/rofl'>\r\n                <Button onClick={handleChangesOk}>\r\n                  Не понял\r\n                </Button>\r\n              </NavLink>\r\n              <Button type='primary' onClick={handleChangesOk}>\r\n                Понял\r\n              </Button>\r\n            </>\r\n          ]}>\r\n            <ol>\r\n              <li>При каждой новой игре лучше <b>перезагружать</b> страницу (мало-ли что)</li>\r\n              <li>Новая система выбора <b>персонажей</b></li>\r\n              <li>Новая сиситема <b>налогов</b> и <b>доходов</b> персонажа</li>\r\n              <li>Макс кол-во детей - <b>3</b>, (теперь инфа по ним будет в профиле)</li>\r\n              <li>Вместо вкладки работа, будет профиль где пишутся ваши <b>пассивные</b> и <b> активные</b> доходы а также работа и тд.</li>\r\n              <li>Переработано окно <b>затрат</b>, добавлена их история</li>\r\n              <li>Небольшой <b>редизайн</b> отдельных аспектов игры</li>\r\n              <li>Все <b>баги</b> или <b>\"фичи\"</b> отправлять лучше мне в вк: <a href=\"https://vk.com/drunua\">тык</a></li>\r\n            </ol>\r\n            <i>p.s. Спасибо всем тестерам <HeartTwoTone twoToneColor=\"#eb2f96\" /></i>\r\n          </Modal>\r\n          <div className=\"menuGameName\">\r\n            <span>#ЯИнвестор</span>\r\n            <div><small><i>ALPHA 1.2.1</i></small></div>\r\n          </div>\r\n          <div className=\"menuContent\">\r\n            <div className=\"menuHeader\">\r\n              МЕНЮ\r\n            </div>\r\n            <div className=\"menuList\">\r\n              <div className=\"menuListItem\">\r\n                {isInstructionCompleted\r\n                  ? <NavLink to='/profile'>\r\n                      <button className='menuListItem__Button'>\r\n                        Начать игру\r\n                      </button>\r\n                    </NavLink>\r\n                  : <button className=\"menuListItem__Button\" onClick={showModal} >\r\n                      Начать игру\r\n                    </button>\r\n                }\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                <button className=\"menuListItem__Button\" onClick={showChangesModal}>\r\n                  Список изменений\r\n                </button>\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                {/*<NavLink to='/game'>*/}\r\n                {/*  <button className='menuListItem__Button'>*/}\r\n                {/*    Достижения*/}\r\n                {/*  </button>*/}\r\n                {/*</NavLink>*/}\r\n                <button className=\"menuListItem__Button\" onClick={info}>\r\n                  Достижения\r\n                </button>\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                {/*<NavLink to='/game'>*/}\r\n                {/*  <button className='menuListItem__Button' disabled={true}>*/}\r\n                {/*    Статистика*/}\r\n                {/*  </button>*/}\r\n                {/*</NavLink>*/}\r\n                <button className=\"menuListItem__Button\" onClick={info}>\r\n                  Статистика\r\n                </button>\r\n              </div>\r\n              <div className=\"menuListItem\">\r\n                <NavLink to='/settings'>\r\n                  <button className='menuListItem__Button'>\r\n                    Настройки\r\n                  </button>\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </>\r\n  )\r\n}","import {ReturnBackButton} from \"../common/ReturnBackButton\";\r\nimport {FC, SetStateAction, useEffect, useState} from \"react\"\r\nimport {Avatar, Button, Carousel} from \"antd\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {personType, profileActions} from \"../../redux/profile-reducer\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RightSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport Radio from \"antd/lib/radio\";\r\nimport {getDifficultySelector, getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {spendsActions} from \"../../redux/spends-reducer\";\r\n\r\nexport const ProfilePage: FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const timeSpeed = useSelector(getTimeSpeedSelector)\r\n  const difficulty = useSelector(getDifficultySelector)\r\n  const victoryBalance = useSelector((state: AppStateType) => state.gamePage.victoryBalance)\r\n  const persons = useSelector((state: AppStateType) => state.profilePage.persons)\r\n  const [activePerson, setActivePerson] = useState(0)\r\n\r\n  // выбор скорости игры\r\n  const timesSpeed = [8, 4, 2]\r\n\r\n  // расчёт подоходного налога / зависит на прямую от зп\r\n  const tax = persons[activePerson].salary >= 500\r\n    ? persons[activePerson].salary * 0.15\r\n    : persons[activePerson].salary * 0.10\r\n\r\n  let taxesSummary = tax\r\n\r\n  persons[activePerson].expenses.forEach(expense => {\r\n    taxesSummary += expense.startPrice * expense.payment / 100\r\n  })\r\n\r\n  const setProfile = () => {\r\n    const profile = persons[activePerson]\r\n\r\n    dispatch(profileActions.setProfile(profile))\r\n    // устанавливаем подоходный налог на зп\r\n    dispatch(profileActions.setTax(tax))\r\n    // устанавливаем долги персонажа\r\n    // dispatch(profileActions.setExpenses(persons[activePerson].expenses))\r\n    // стартовый баланс\r\n    dispatch(actions.setWallet(profile.saving))\r\n\r\n    dispatch(profileActions.updateIncome())\r\n    // dispatch(actions.setIncome(persons[activePerson].salary - taxesSummary))\r\n  }\r\n\r\n  const optionsTime = [\r\n    { label: 'день/4сек', value: timesSpeed[0] },\r\n    { label: 'день/2сек', value: timesSpeed[1] },\r\n    { label: 'день/1сек', value: timesSpeed[2] },\r\n  ]\r\n  const optionsDifficulty = [\r\n    { label: 'Легко', value: 'легко' },\r\n    { label: 'Средне', value: 'средне' },\r\n    { label: 'Сложно', value: 'сложно' },\r\n  ]\r\n  const optionsVictoryBalance = [\r\n    { label: '5.000$', value: 5000 },\r\n    { label: '15.000$', value: 15000 },\r\n    { label: '50.000$', value: 50000 },\r\n  ]\r\n\r\n  const onChangeTime = (e: any) => {\r\n    dispatch(settingsActions.setTimeSpeed(e.target.value))\r\n    dispatch(settingsActions.setConstTimeSpeed(e.target.value))\r\n  }\r\n\r\n  const onChangeDifficulty = (e: any) => {\r\n    dispatch(settingsActions.setDifficulty(e.target.value))\r\n  }\r\n\r\n  const onChangeVictoryBalance = (e: any) => {\r\n    dispatch(actions.setVictoryBalance(e.target.value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    let difficultPrice = 0\r\n    switch (difficulty) {\r\n      case \"легко\":\r\n        difficultPrice = -15\r\n        break\r\n      case \"сложно\":\r\n        difficultPrice = 15\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    dispatch(spendsActions.setEventsPrice(difficultPrice))\r\n  },[, difficulty])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile bannerBack\">\r\n        <div className=\"profilePreview\">\r\n          <div className=\"profilePreview__Title\">\r\n            <b>Ваш персонаж</b>\r\n          </div>\r\n          <div className=\"profilePreview__Name\">\r\n            {persons[activePerson].name}\r\n            <span className=\"profilePreview__NameWork\">\r\n              <i>({persons[activePerson].work})</i>\r\n            </span>\r\n          </div>\r\n          <div className=\"profilePreview__Img\">\r\n            <img src={persons[activePerson].img} alt=\"\"/>\r\n          </div>\r\n        </div>\r\n        <div className=\"profilePersons\">\r\n          <div className=\"profilePersons__Title\">\r\n            Доступные персонажи\r\n          </div>\r\n          <div className=\"profilePersons__Blocks\">\r\n            {persons.map((person, index) => {\r\n              return (\r\n                <>\r\n                  <div className=\"profilePersons__Block\">\r\n                    <button onClick={() => setActivePerson(index)} className='profilePersons__BlockImg' >\r\n                      <Avatar src={person.avatar} size={100} style={activePerson === index ? {border: '2px solid crimson'} : {}}/>\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )\r\n            })}\r\n          </div>\r\n          <div className=\"profilePersons__Button\">\r\n            <NavLink to='/game'>\r\n              <Button onClick={() => setProfile()}>\r\n                Начать игру\r\n              </Button>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <div className=\"profileMenu\">\r\n          <div className=\"profileMenu__Buttons\">\r\n            <div className=\"profileMenu__Button\">\r\n              <NavLink to='/'>\r\n                <Button>\r\n                  Вернутся в меню\r\n                </Button>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n          <div className=\"profileMenu__Settings\">\r\n            <div className=\"profileMenu__SettingsItem\">\r\n              Скорость игры\r\n              <br/>\r\n              <Radio.Group\r\n                options={optionsTime}\r\n                onChange={onChangeTime}\r\n                value={timeSpeed}\r\n                optionType=\"button\"\r\n                className='settingsListItem__Radio'\r\n              />\r\n            </div>\r\n            <div className=\"profileMenu__SettingsItem\">\r\n              Сложность игры\r\n              <br/>\r\n              <Radio.Group\r\n                options={optionsDifficulty}\r\n                onChange={onChangeDifficulty}\r\n                value={difficulty}\r\n                optionType=\"button\"\r\n                className='settingsListItem__Radio'\r\n              />\r\n            </div>\r\n            <div className=\"profileMenu__SettingsItem\">\r\n              Победный баланс\r\n              <br/>\r\n              <Radio.Group\r\n                options={optionsVictoryBalance}\r\n                onChange={onChangeVictoryBalance}\r\n                value={victoryBalance}\r\n                optionType=\"button\"\r\n                className='settingsListItem__Radio'\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"profileMenu__Stats\">\r\n            <div className='profileMenu__StatsIncome'>\r\n              <div className=\"profileMenu__StatsTitle\">\r\n                Доходы\r\n              </div>\r\n              <div className=\"profileMenu__StatsBlock\">\r\n                <div className=\"profileMenu__StatsBlock__Title\">Зарплата:</div>\r\n                <div className=\"profileMenu__StatsBlock__Price\">${persons[activePerson].salary}</div>\r\n              </div>\r\n              <div className=\"profileMenu__StatsBlock\">\r\n                <div className=\"profileMenu__StatsBlock__Title\">Сбережения:</div>\r\n                <div className=\"profileMenu__StatsBlock__Price\">${persons[activePerson].saving}</div>\r\n              </div>\r\n            </div>\r\n            <div className='profileMenu__StatsExpenses'>\r\n              <div className=\"profileMenu__StatsTitle\">\r\n                Расходы\r\n              </div>\r\n              <div className=\"profileMenu__StatsBlock\">\r\n                <div className=\"profileMenu__StatsBlock__Title\">Налог:</div>\r\n                <div className=\"profileMenu__StatsBlock__Price\">${tax}</div>\r\n              </div>\r\n              {persons[activePerson].expenses.map((expense, index) => {\r\n                return (\r\n                  <>\r\n                    {expense.remainPrice !== 0\r\n                      ? <div className='profileMenu__StatsBlock'>\r\n                          <div className=\"profileMenu__StatsBlock__Title\">{expense.title}:</div>\r\n                          <div className=\"profileMenu__StatsBlock__Price\">${expense.remainPrice * expense.payment / 100}</div>\r\n                        </div>\r\n                      : ''}\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n            <div className=\"profileMenu__StatsCash\">\r\n              <div className=\"profileMenu__StatsTitle\">\r\n                Наличность:\r\n              </div>\r\n              <div className=\"profileMenu__StatsBlock\">\r\n                ${persons[activePerson].salary - taxesSummary}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import {LeftSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport { FC } from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const ReturnBackButton:FC<{link: string}> = (props) => {\r\n  return (\r\n    <div className=\"returnBack\">\r\n      <NavLink to={props.link}>\r\n        <button className='returnBackButton buttonNav'>\r\n          <LeftSquareOutlined />\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n","import Radio from \"antd/lib/radio\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {settingsActions} from \"../../redux/settings-reducer\";\r\nimport {getDifficultySelector, getTimeSpeedSelector} from \"../../redux/settings-selector\";\r\nimport {ReturnBackButton} from \"../common/ReturnBackButton\";\r\n\r\nexport const SettingsPage = () => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"settings bannerBack\">\r\n        <ReturnBackButton link='/'/>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Avatar} from \"antd\";\r\nimport {ReturnBackButton} from \"../common/ReturnBackButton\";\r\nimport {FC, useEffect} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RightSquareOutlined} from \"@ant-design/icons/lib/icons\";\r\nimport {Work, worksActions} from \"../../redux/work-reducer\";\r\nimport {actions} from \"../../redux/game-reducer\";\r\nimport {getDifficultySelector} from \"../../redux/settings-selector\";\r\nimport {spendsActions} from \"../../redux/spends-reducer\";\r\n\r\nexport const WorkPage = () => {\r\n\r\n  useEffect(() => {\r\n    let difficultPrice = 0\r\n    switch (difficulty) {\r\n      case \"легко\":\r\n        difficultPrice = -15\r\n        break\r\n      case \"сложно\":\r\n        difficultPrice = 15\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    dispatch(spendsActions.setEventsPrice(difficultPrice))\r\n  },[])\r\n\r\n  const dispatch = useDispatch()\r\n  // const works = useSelector((state: AppStateType) => state.worksPage.works)\r\n  const work = useSelector((state: AppStateType) => state.worksPage.currentWork) as Work\r\n  // const personPref = useSelector((state: AppStateType) => state.profilePage.profile?.preferences)\r\n  const difficulty = useSelector(getDifficultySelector)\r\n\r\n  // const setWork = (type: WorksType) => {\r\n  //   switch (type) {\r\n  //     case \"it\":\r\n  //       dispatch(worksActions.setWork(works.it))\r\n  //       break\r\n  //\r\n  //     case 'manager':\r\n  //       dispatch(worksActions.setWork(works.manager))\r\n  //       break\r\n  //\r\n  //     case \"engineer\":\r\n  //       dispatch(worksActions.setWork(works.engineer))\r\n  //       break\r\n  //\r\n  //     default:\r\n  //       return null\r\n  //   }\r\n  // }\r\n\r\n  const ContinueButton: FC = () => {\r\n    return (\r\n      <div className=\"continue\">\r\n        <NavLink to='/game'>\r\n          <button className=\"continueButton buttonNav\">\r\n            <RightSquareOutlined />\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let texts = [\r\n    {\r\n      type: 'it',\r\n      text: 'профессия скрупулёзных созидателей. Ни один проект в сфере информационных технологий не обходится ' +\r\n        'без труда разработчика — программиста, который занимается созданием различных продуктов в ИТ: ' +\r\n        'компьютерных игр, мобильных приложений, веб-сайтов и др'\r\n    }, {\r\n      type: 'manager',\r\n      text: 'специалист, занятый организацией процессами на определённом участке предприятия, ' +\r\n        'организации. Может быть её владельцем, но часто является наёмным работником. ' +\r\n        'Менеджер, как правило, является должностным лицом в организации, в которой работает, '\r\n    }, {\r\n      type: 'engineer',\r\n      text: 'специалист, осуществляющий инженерную деятельность. Инженеры вовлечены, как правило, во все процессы жизненного цикла ' +\r\n        'технических устройств, являющихся предметом инженерного дела, ' + 'включая прикладные исследования, планирование, проектирование, '\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      {work\r\n        ? <></>\r\n        // <div className=\"workChoice bannerBack\">\r\n        //   <div className=\"workChoiceNav\">\r\n        //     <ReturnBackButton link='/profile'/>\r\n        //     <ContinueButton />\r\n        //   </div>\r\n        //   <div className=\"workChoiceContent\">\r\n        //     <div className=\"workChoiceContent__List\">\r\n        //       <div className=\"workChoiceContent__ListHeader\">\r\n        //         Выбор работы\r\n        //       </div>\r\n        //       <div className=\"workChoiceContent__ListItems\">\r\n        //         {/*<div*/}\r\n        //         {/*  className=\"workChoiceContent__ListItem\"*/}\r\n        //         {/*  onClick={() => {setWork('it')}}*/}\r\n        //         {/*>*/}\r\n        //         {/*  <Avatar shape={\"square\"} size={150} src={works.it.avatar} style={work.type === 'it' ? {zIndex: 10} : {}} />*/}\r\n        //         {/*</div>*/}\r\n        //         {/*<div*/}\r\n        //         {/*  className=\"workChoiceContent__ListItem\"*/}\r\n        //         {/*  onClick={() => {setWork('manager')}*/}\r\n        //         {/*  }*/}\r\n        //         {/*>*/}\r\n        //         {/*  <Avatar shape={\"square\"} size={150} src={works.manager.avatar} style={work.type === 'manager' ? {zIndex: 10} : {}} />*/}\r\n        //         {/*</div>*/}\r\n        //         {/*<div*/}\r\n        //         {/*  className=\"workChoiceContent__ListItem\"*/}\r\n        //         {/*  onClick={() => {setWork('engineer')}*/}\r\n        //         {/*  }*/}\r\n        //         {/*>*/}\r\n        //         {/*  <Avatar shape={\"square\"} size={150} src={works.engineer.avatar} style={work.type === 'engineer' ? {zIndex: 10} : {}} />*/}\r\n        //         </div>\r\n        //       </div>\r\n        //       <div className=\"workChoiceContent__ListAbout\">\r\n        //         <div className=\"workChoiceContent__ListAbout__Header\">\r\n        //           <b>{work.options[0].title}</b>\r\n        //         </div>\r\n        //         <div className=\"workChoiceContent__ListAbout__Content\">\r\n        //           <div className=\"workChoiceContent__ListAbout__ContentSalary\">\r\n        //             Зарплата -  <b>{work.startSalary} </b>\r\n        //             {/*{personPref?.map((pref, index) => {*/}\r\n        //             {/*  return (*/}\r\n        //             {/*    <span key={index}>*/}\r\n        //             {/*      {pref.type === work.type && pref.rise > 0*/}\r\n        //             {/*        ? <>*/}\r\n        //             {/*            <span className=\"workChoiceContent__ListAbout__ContentSalaryBonus\">*/}\r\n        //             {/*              + {(pref.rise * work.startSalary / 100).toFixed(0)}*/}\r\n        //             {/*            </span>*/}\r\n        //             {/*          </>*/}\r\n        //             {/*        : ''}*/}\r\n        //             {/*    </span>*/}\r\n        //             {/*  )*/}\r\n        //             {/*})}*/}\r\n        //           </div>\r\n        //           <div className=\"workChoiceContent__ListAbout__ContentRise\">\r\n        //             Перспектива роста -\r\n        //           {/*  {personPref?.map((pref, index) => {*/}\r\n        //\r\n        //           {/*    let riseColor = pref.rise < 3*/}\r\n        //           {/*      ? 'red'*/}\r\n        //           {/*      : `${pref.rise < 7 */}\r\n        //           {/*        ? '#ffc900' */}\r\n        //           {/*        : '#35b924'*/}\r\n        //           {/*      }`*/}\r\n        //\r\n        //           {/*    return (*/}\r\n        //           {/*      <span key={index}>*/}\r\n        //           {/*        {work.type === pref.type*/}\r\n        //           {/*          ? <span style={{color: riseColor}}>{pref.rise + 1}</span>*/}\r\n        //           {/*          : ''}*/}\r\n        //           {/*      </span>*/}\r\n        //           {/*    )*/}\r\n        //           {/*})}*/}\r\n        //           </div>\r\n        //           <div className=\"workChoiceContent__ListAbout__ContentText\">\r\n        //             {\r\n        //               texts.map((text, index) => {\r\n        //                 return (\r\n        //                   <></>\r\n        //                   // <span key={index}>\r\n        //                   //   {text.type === work.type\r\n        //                   //     ? text.text\r\n        //                   //     : ''\r\n        //                   //   }\r\n        //                   // </span>\r\n        //                 )\r\n        //               })\r\n        //             }\r\n        //           </div>\r\n        //         </div>\r\n        //       </div>\r\n        //     </div>\r\n        //   </div>\r\n        // </div>\r\n        : ''}\r\n    </>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/rofl.0e65b3b7.jpg\";","import img from './../../img/rofl.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"antd\";\r\n\r\nexport const RoflPage = () => {\r\n  return (\r\n    <>\r\n      <div><h6>Это ты)))</h6></div>\r\n      <div>\r\n        <img src={img} alt=\"\"/>\r\n      </div>\r\n      <NavLink to='/'>\r\n        <Button>\r\n          выйти\r\n        </Button>\r\n      </NavLink>\r\n    </>\r\n  )\r\n}","import {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\"\r\nimport {GamePage} from \"../Game/GamePage\";\r\nimport {MenuPage} from \"../Menu/MenuPage\";\r\nimport {ProfilePage} from \"../Profile/ProfilePage\";\r\nimport {SettingsPage} from \"../Settings/SettingsPage\";\r\nimport { WorkPage } from \"../Work/WorkPage\";\r\nimport {RoflPage} from \"../rofl/RoflPage\";\r\n\r\nexport const Main = () => {\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Redirect exact from='/' to='/menu'/>\r\n          <Redirect exact from='/money-game' to='/menu'/>\r\n          <Redirect exact from='/money-game-demo' to='/menu'/>\r\n          <Route path='/menu' render={() => <MenuPage /> }/>\r\n          <Route path='/work' render={() => <WorkPage /> }/>\r\n          <Route path='/game' render={() => <GamePage /> }/>\r\n          <Route path='/profile' render={() => <ProfilePage /> }/>\r\n          <Route path='/settings' render={() => <SettingsPage/> }/>\r\n          <Route path='/rofl' render={() => <RoflPage/> }/>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport { Main } from './components/Main/Main';\nimport './styles/style.css'\n\nexport const App = () => {\n  return (\n      <div className=\"App\">\n        <Main/>\n      </div>\n  );\n}\n\nexport default App\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {gameReducer} from \"./game-reducer\";\r\nimport thunkMiddleWare from \"redux-thunk\"\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {settingsReducer} from \"./settings-reducer\";\r\nimport {newsReducer} from \"./news-reducer\";\r\nimport {worksReducer} from \"./work-reducer\";\r\nimport {stocksReducer} from \"./stocks-reducer\";\r\nimport {businessReducer} from \"./business-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {spendsReducer} from \"./spends-reducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n  gamePage: gameReducer,\r\n  profilePage: profileReducer,\r\n  settingsPage: settingsReducer,\r\n  newsPage: newsReducer,\r\n  worksPage: worksReducer,\r\n  stocksPage: stocksReducer,\r\n  businessPage: businessReducer,\r\n  spendsPage: spendsReducer,\r\n  app: appReducer\r\n})\r\n\r\ntype RootReduceType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReduceType>\r\n\r\ntype PropsType<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsType<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropsType<T>>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleWare)))\r\n// тестовый билд без разрешения\r\n// const store = createStore(rootReducer, compose(applyMiddleware(thunkMiddleWare)))\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}